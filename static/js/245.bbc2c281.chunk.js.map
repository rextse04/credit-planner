{"version":3,"file":"static/js/245.bbc2c281.chunk.js","mappings":"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","sources":["sync.js","../webpack/bootstrap","../webpack/runtime/chunk loaded","../webpack/runtime/define property getters","../webpack/runtime/ensure chunk","../webpack/runtime/get javascript chunk filename","../webpack/runtime/get mini-css chunk filename","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/publicPath","../webpack/runtime/importScripts chunk loading","../webpack/runtime/startup chunk dependencies","../webpack/startup"],"sourcesContent":["import { Dexie } from \"dexie\";\r\n\r\nconst db = new Dexie(\"main\");\r\ndb.version(1).stores({\r\n    plans: \"++index, title, startSem, sems\"\r\n});\r\n\r\n// eslint-disable-next-line no-restricted-globals\r\nself.onmessage = async event => {\r\n    const message = event.data;\r\n    var response = {\r\n        ...message,\r\n        status: true\r\n    };\r\n    try {\r\n        switch(message.type) {\r\n            case \"init\":\r\n                response.titles = {};\r\n                await db.transaction(\"rw\", db.plans, async () => {\r\n                    response.content = await db.plans.get(message.plan);\r\n                    if(response.content === undefined) {\r\n                        await db.plans.add({\r\n                            index: message.plan,\r\n                            ...message.content\r\n                        });\r\n                        response.content = message.content;\r\n                    }\r\n                });\r\n                await db.plans.each(plan => response.titles[plan.index] = plan.title);\r\n                break;\r\n            case \"select\":\r\n                await db.transaction(message.force ? \"rw\" : \"r\", db.plans, async () => {\r\n                    const content = await db.plans.get(message.plan);\r\n                    if(content === undefined) {\r\n                        if(message.force) await db.plans.add({\r\n                            index: message.plan,\r\n                            ...message.content\r\n                        });\r\n                        else {\r\n                            response.status = false;\r\n                            response.fail_message = \"Plan does not exist.\"\r\n                        }\r\n                    }\r\n                    else response.content = content;\r\n                });\r\n                break;\r\n            case \"export\":\r\n                const raw = await db.plans.get(message.plan);\r\n                delete raw.index;\r\n                response.content = JSON.stringify(raw);\r\n                break;\r\n            case \"add\":\r\n                response.plan = await db.plans.add(message.content);\r\n                break;\r\n            case \"copy\":\r\n                response.plan = await db.transaction(\"rw\", db.plans, async () => {\r\n                    const source = await db.plans.get(message.plan);\r\n                    const copied = {...source, ...message.content};\r\n                    delete copied.index;\r\n                    return await db.plans.add(copied);\r\n                });\r\n                break;\r\n            case \"import\":\r\n                const reader = new FileReader();\r\n                reader.onload = async () => {\r\n                    try {response.plan = await db.plans.add(JSON.parse(reader.result));}\r\n                    catch(e) {\r\n                        if(e instanceof SyntaxError) {\r\n                            response.status = false;\r\n                            response.fail_message = \"The provided file failed to be parsed. Please check if it is corrupted.\";\r\n                        }\r\n                        else throw e;\r\n                    }\r\n                };\r\n                reader.onerror = () => {\r\n                    response.status = false;\r\n                    response.error = \"File read failed.\";\r\n                }\r\n                reader.readAsText(message.content);\r\n                break;\r\n            case \"delete\":\r\n                await db.transaction(\"rw\", db.plans, async () => {\r\n                    if(await db.plans.count() === 1) {\r\n                        response.status = false;\r\n                        response.fail_message = \"The only plan in your collection cannot be deleted.\";\r\n                    } else await db.plans.delete(message.plan);\r\n                });\r\n                break;\r\n            case \"update\":\r\n                await db.plans.update(message.plan, message.content);\r\n        }\r\n    } catch(e) {\r\n        response.status = false;\r\n        response.error = e.inner;\r\n    }\r\n    // eslint-disable-next-line no-restricted-globals\r\n    self.postMessage(response);\r\n};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = () => {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [447], () => (__webpack_require__(245)))\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + \"cb0bf29b\" + \".chunk.js\";\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t245: 1\n};\n\n// importScripts chunk loading\nvar installChunk = (data) => {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = (chunkId, promises) => {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunkcredit_planner\"] = self[\"webpackChunkcredit_planner\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","var next = __webpack_require__.x;\n__webpack_require__.x = () => {\n\treturn __webpack_require__.e(447).then(next);\n};","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"names":["db","Dexie","version","stores","plans","self","onmessage","async","message","event","data","response","status","type","titles","transaction","content","get","plan","undefined","add","index","each","title","force","fail_message","raw","JSON","stringify","copied","reader","FileReader","onload","parse","result","e","SyntaxError","onerror","error","readAsText","count","delete","update","inner","postMessage","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","m","x","__webpack_exports__","O","deferred","chunkIds","fn","priority","notFulfilled","Infinity","i","length","fulfilled","j","Object","keys","every","key","splice","r","d","definition","o","defineProperty","enumerable","f","chunkId","Promise","all","reduce","promises","u","miniCssF","obj","prop","prototype","hasOwnProperty","call","p","installedChunks","importScripts","chunkLoadingGlobal","parentChunkLoadingFunction","push","bind","moreModules","runtime","pop","next","then"],"sourceRoot":""}