{"version":3,"file":"static/js/447.d80e5a66.chunk.js","mappings":"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","sources":["../node_modules/dexie/dist/modern/dexie.mjs"],"sourcesContent":["/*\n * Dexie.js - a minimalistic wrapper for IndexedDB\n * ===============================================\n *\n * By David Fahlander, david.fahlander@gmail.com\n *\n * Version 3.2.4, Tue May 30 2023\n *\n * https://dexie.org\n *\n * Apache License Version 2.0, January 2004, http://www.apache.org/licenses/\n */\n \nconst _global = typeof globalThis !== 'undefined' ? globalThis :\n    typeof self !== 'undefined' ? self :\n        typeof window !== 'undefined' ? window :\n            global;\n\nconst keys = Object.keys;\nconst isArray = Array.isArray;\nif (typeof Promise !== 'undefined' && !_global.Promise) {\n    _global.Promise = Promise;\n}\nfunction extend(obj, extension) {\n    if (typeof extension !== 'object')\n        return obj;\n    keys(extension).forEach(function (key) {\n        obj[key] = extension[key];\n    });\n    return obj;\n}\nconst getProto = Object.getPrototypeOf;\nconst _hasOwn = {}.hasOwnProperty;\nfunction hasOwn(obj, prop) {\n    return _hasOwn.call(obj, prop);\n}\nfunction props(proto, extension) {\n    if (typeof extension === 'function')\n        extension = extension(getProto(proto));\n    (typeof Reflect === \"undefined\" ? keys : Reflect.ownKeys)(extension).forEach(key => {\n        setProp(proto, key, extension[key]);\n    });\n}\nconst defineProperty = Object.defineProperty;\nfunction setProp(obj, prop, functionOrGetSet, options) {\n    defineProperty(obj, prop, extend(functionOrGetSet && hasOwn(functionOrGetSet, \"get\") && typeof functionOrGetSet.get === 'function' ?\n        { get: functionOrGetSet.get, set: functionOrGetSet.set, configurable: true } :\n        { value: functionOrGetSet, configurable: true, writable: true }, options));\n}\nfunction derive(Child) {\n    return {\n        from: function (Parent) {\n            Child.prototype = Object.create(Parent.prototype);\n            setProp(Child.prototype, \"constructor\", Child);\n            return {\n                extend: props.bind(null, Child.prototype)\n            };\n        }\n    };\n}\nconst getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nfunction getPropertyDescriptor(obj, prop) {\n    const pd = getOwnPropertyDescriptor(obj, prop);\n    let proto;\n    return pd || (proto = getProto(obj)) && getPropertyDescriptor(proto, prop);\n}\nconst _slice = [].slice;\nfunction slice(args, start, end) {\n    return _slice.call(args, start, end);\n}\nfunction override(origFunc, overridedFactory) {\n    return overridedFactory(origFunc);\n}\nfunction assert(b) {\n    if (!b)\n        throw new Error(\"Assertion Failed\");\n}\nfunction asap$1(fn) {\n    if (_global.setImmediate)\n        setImmediate(fn);\n    else\n        setTimeout(fn, 0);\n}\nfunction arrayToObject(array, extractor) {\n    return array.reduce((result, item, i) => {\n        var nameAndValue = extractor(item, i);\n        if (nameAndValue)\n            result[nameAndValue[0]] = nameAndValue[1];\n        return result;\n    }, {});\n}\nfunction tryCatch(fn, onerror, args) {\n    try {\n        fn.apply(null, args);\n    }\n    catch (ex) {\n        onerror && onerror(ex);\n    }\n}\nfunction getByKeyPath(obj, keyPath) {\n    if (hasOwn(obj, keyPath))\n        return obj[keyPath];\n    if (!keyPath)\n        return obj;\n    if (typeof keyPath !== 'string') {\n        var rv = [];\n        for (var i = 0, l = keyPath.length; i < l; ++i) {\n            var val = getByKeyPath(obj, keyPath[i]);\n            rv.push(val);\n        }\n        return rv;\n    }\n    var period = keyPath.indexOf('.');\n    if (period !== -1) {\n        var innerObj = obj[keyPath.substr(0, period)];\n        return innerObj === undefined ? undefined : getByKeyPath(innerObj, keyPath.substr(period + 1));\n    }\n    return undefined;\n}\nfunction setByKeyPath(obj, keyPath, value) {\n    if (!obj || keyPath === undefined)\n        return;\n    if ('isFrozen' in Object && Object.isFrozen(obj))\n        return;\n    if (typeof keyPath !== 'string' && 'length' in keyPath) {\n        assert(typeof value !== 'string' && 'length' in value);\n        for (var i = 0, l = keyPath.length; i < l; ++i) {\n            setByKeyPath(obj, keyPath[i], value[i]);\n        }\n    }\n    else {\n        var period = keyPath.indexOf('.');\n        if (period !== -1) {\n            var currentKeyPath = keyPath.substr(0, period);\n            var remainingKeyPath = keyPath.substr(period + 1);\n            if (remainingKeyPath === \"\")\n                if (value === undefined) {\n                    if (isArray(obj) && !isNaN(parseInt(currentKeyPath)))\n                        obj.splice(currentKeyPath, 1);\n                    else\n                        delete obj[currentKeyPath];\n                }\n                else\n                    obj[currentKeyPath] = value;\n            else {\n                var innerObj = obj[currentKeyPath];\n                if (!innerObj || !hasOwn(obj, currentKeyPath))\n                    innerObj = (obj[currentKeyPath] = {});\n                setByKeyPath(innerObj, remainingKeyPath, value);\n            }\n        }\n        else {\n            if (value === undefined) {\n                if (isArray(obj) && !isNaN(parseInt(keyPath)))\n                    obj.splice(keyPath, 1);\n                else\n                    delete obj[keyPath];\n            }\n            else\n                obj[keyPath] = value;\n        }\n    }\n}\nfunction delByKeyPath(obj, keyPath) {\n    if (typeof keyPath === 'string')\n        setByKeyPath(obj, keyPath, undefined);\n    else if ('length' in keyPath)\n        [].map.call(keyPath, function (kp) {\n            setByKeyPath(obj, kp, undefined);\n        });\n}\nfunction shallowClone(obj) {\n    var rv = {};\n    for (var m in obj) {\n        if (hasOwn(obj, m))\n            rv[m] = obj[m];\n    }\n    return rv;\n}\nconst concat = [].concat;\nfunction flatten(a) {\n    return concat.apply([], a);\n}\nconst intrinsicTypeNames = \"Boolean,String,Date,RegExp,Blob,File,FileList,FileSystemFileHandle,ArrayBuffer,DataView,Uint8ClampedArray,ImageBitmap,ImageData,Map,Set,CryptoKey\"\n    .split(',').concat(flatten([8, 16, 32, 64].map(num => [\"Int\", \"Uint\", \"Float\"].map(t => t + num + \"Array\")))).filter(t => _global[t]);\nconst intrinsicTypes = intrinsicTypeNames.map(t => _global[t]);\narrayToObject(intrinsicTypeNames, x => [x, true]);\nlet circularRefs = null;\nfunction deepClone(any) {\n    circularRefs = typeof WeakMap !== 'undefined' && new WeakMap();\n    const rv = innerDeepClone(any);\n    circularRefs = null;\n    return rv;\n}\nfunction innerDeepClone(any) {\n    if (!any || typeof any !== 'object')\n        return any;\n    let rv = circularRefs && circularRefs.get(any);\n    if (rv)\n        return rv;\n    if (isArray(any)) {\n        rv = [];\n        circularRefs && circularRefs.set(any, rv);\n        for (var i = 0, l = any.length; i < l; ++i) {\n            rv.push(innerDeepClone(any[i]));\n        }\n    }\n    else if (intrinsicTypes.indexOf(any.constructor) >= 0) {\n        rv = any;\n    }\n    else {\n        const proto = getProto(any);\n        rv = proto === Object.prototype ? {} : Object.create(proto);\n        circularRefs && circularRefs.set(any, rv);\n        for (var prop in any) {\n            if (hasOwn(any, prop)) {\n                rv[prop] = innerDeepClone(any[prop]);\n            }\n        }\n    }\n    return rv;\n}\nconst { toString } = {};\nfunction toStringTag(o) {\n    return toString.call(o).slice(8, -1);\n}\nconst iteratorSymbol = typeof Symbol !== 'undefined' ?\n    Symbol.iterator :\n    '@@iterator';\nconst getIteratorOf = typeof iteratorSymbol === \"symbol\" ? function (x) {\n    var i;\n    return x != null && (i = x[iteratorSymbol]) && i.apply(x);\n} : function () { return null; };\nconst NO_CHAR_ARRAY = {};\nfunction getArrayOf(arrayLike) {\n    var i, a, x, it;\n    if (arguments.length === 1) {\n        if (isArray(arrayLike))\n            return arrayLike.slice();\n        if (this === NO_CHAR_ARRAY && typeof arrayLike === 'string')\n            return [arrayLike];\n        if ((it = getIteratorOf(arrayLike))) {\n            a = [];\n            while ((x = it.next()), !x.done)\n                a.push(x.value);\n            return a;\n        }\n        if (arrayLike == null)\n            return [arrayLike];\n        i = arrayLike.length;\n        if (typeof i === 'number') {\n            a = new Array(i);\n            while (i--)\n                a[i] = arrayLike[i];\n            return a;\n        }\n        return [arrayLike];\n    }\n    i = arguments.length;\n    a = new Array(i);\n    while (i--)\n        a[i] = arguments[i];\n    return a;\n}\nconst isAsyncFunction = typeof Symbol !== 'undefined'\n    ? (fn) => fn[Symbol.toStringTag] === 'AsyncFunction'\n    : () => false;\n\nvar debug = typeof location !== 'undefined' &&\n    /^(http|https):\\/\\/(localhost|127\\.0\\.0\\.1)/.test(location.href);\nfunction setDebug(value, filter) {\n    debug = value;\n    libraryFilter = filter;\n}\nvar libraryFilter = () => true;\nconst NEEDS_THROW_FOR_STACK = !new Error(\"\").stack;\nfunction getErrorWithStack() {\n    if (NEEDS_THROW_FOR_STACK)\n        try {\n            getErrorWithStack.arguments;\n            throw new Error();\n        }\n        catch (e) {\n            return e;\n        }\n    return new Error();\n}\nfunction prettyStack(exception, numIgnoredFrames) {\n    var stack = exception.stack;\n    if (!stack)\n        return \"\";\n    numIgnoredFrames = (numIgnoredFrames || 0);\n    if (stack.indexOf(exception.name) === 0)\n        numIgnoredFrames += (exception.name + exception.message).split('\\n').length;\n    return stack.split('\\n')\n        .slice(numIgnoredFrames)\n        .filter(libraryFilter)\n        .map(frame => \"\\n\" + frame)\n        .join('');\n}\n\nvar dexieErrorNames = [\n    'Modify',\n    'Bulk',\n    'OpenFailed',\n    'VersionChange',\n    'Schema',\n    'Upgrade',\n    'InvalidTable',\n    'MissingAPI',\n    'NoSuchDatabase',\n    'InvalidArgument',\n    'SubTransaction',\n    'Unsupported',\n    'Internal',\n    'DatabaseClosed',\n    'PrematureCommit',\n    'ForeignAwait'\n];\nvar idbDomErrorNames = [\n    'Unknown',\n    'Constraint',\n    'Data',\n    'TransactionInactive',\n    'ReadOnly',\n    'Version',\n    'NotFound',\n    'InvalidState',\n    'InvalidAccess',\n    'Abort',\n    'Timeout',\n    'QuotaExceeded',\n    'Syntax',\n    'DataClone'\n];\nvar errorList = dexieErrorNames.concat(idbDomErrorNames);\nvar defaultTexts = {\n    VersionChanged: \"Database version changed by other database connection\",\n    DatabaseClosed: \"Database has been closed\",\n    Abort: \"Transaction aborted\",\n    TransactionInactive: \"Transaction has already completed or failed\",\n    MissingAPI: \"IndexedDB API missing. Please visit https://tinyurl.com/y2uuvskb\"\n};\nfunction DexieError(name, msg) {\n    this._e = getErrorWithStack();\n    this.name = name;\n    this.message = msg;\n}\nderive(DexieError).from(Error).extend({\n    stack: {\n        get: function () {\n            return this._stack ||\n                (this._stack = this.name + \": \" + this.message + prettyStack(this._e, 2));\n        }\n    },\n    toString: function () { return this.name + \": \" + this.message; }\n});\nfunction getMultiErrorMessage(msg, failures) {\n    return msg + \". Errors: \" + Object.keys(failures)\n        .map(key => failures[key].toString())\n        .filter((v, i, s) => s.indexOf(v) === i)\n        .join('\\n');\n}\nfunction ModifyError(msg, failures, successCount, failedKeys) {\n    this._e = getErrorWithStack();\n    this.failures = failures;\n    this.failedKeys = failedKeys;\n    this.successCount = successCount;\n    this.message = getMultiErrorMessage(msg, failures);\n}\nderive(ModifyError).from(DexieError);\nfunction BulkError(msg, failures) {\n    this._e = getErrorWithStack();\n    this.name = \"BulkError\";\n    this.failures = Object.keys(failures).map(pos => failures[pos]);\n    this.failuresByPos = failures;\n    this.message = getMultiErrorMessage(msg, failures);\n}\nderive(BulkError).from(DexieError);\nvar errnames = errorList.reduce((obj, name) => (obj[name] = name + \"Error\", obj), {});\nconst BaseException = DexieError;\nvar exceptions = errorList.reduce((obj, name) => {\n    var fullName = name + \"Error\";\n    function DexieError(msgOrInner, inner) {\n        this._e = getErrorWithStack();\n        this.name = fullName;\n        if (!msgOrInner) {\n            this.message = defaultTexts[name] || fullName;\n            this.inner = null;\n        }\n        else if (typeof msgOrInner === 'string') {\n            this.message = `${msgOrInner}${!inner ? '' : '\\n ' + inner}`;\n            this.inner = inner || null;\n        }\n        else if (typeof msgOrInner === 'object') {\n            this.message = `${msgOrInner.name} ${msgOrInner.message}`;\n            this.inner = msgOrInner;\n        }\n    }\n    derive(DexieError).from(BaseException);\n    obj[name] = DexieError;\n    return obj;\n}, {});\nexceptions.Syntax = SyntaxError;\nexceptions.Type = TypeError;\nexceptions.Range = RangeError;\nvar exceptionMap = idbDomErrorNames.reduce((obj, name) => {\n    obj[name + \"Error\"] = exceptions[name];\n    return obj;\n}, {});\nfunction mapError(domError, message) {\n    if (!domError || domError instanceof DexieError || domError instanceof TypeError || domError instanceof SyntaxError || !domError.name || !exceptionMap[domError.name])\n        return domError;\n    var rv = new exceptionMap[domError.name](message || domError.message, domError);\n    if (\"stack\" in domError) {\n        setProp(rv, \"stack\", { get: function () {\n                return this.inner.stack;\n            } });\n    }\n    return rv;\n}\nvar fullNameExceptions = errorList.reduce((obj, name) => {\n    if ([\"Syntax\", \"Type\", \"Range\"].indexOf(name) === -1)\n        obj[name + \"Error\"] = exceptions[name];\n    return obj;\n}, {});\nfullNameExceptions.ModifyError = ModifyError;\nfullNameExceptions.DexieError = DexieError;\nfullNameExceptions.BulkError = BulkError;\n\nfunction nop() { }\nfunction mirror(val) { return val; }\nfunction pureFunctionChain(f1, f2) {\n    if (f1 == null || f1 === mirror)\n        return f2;\n    return function (val) {\n        return f2(f1(val));\n    };\n}\nfunction callBoth(on1, on2) {\n    return function () {\n        on1.apply(this, arguments);\n        on2.apply(this, arguments);\n    };\n}\nfunction hookCreatingChain(f1, f2) {\n    if (f1 === nop)\n        return f2;\n    return function () {\n        var res = f1.apply(this, arguments);\n        if (res !== undefined)\n            arguments[0] = res;\n        var onsuccess = this.onsuccess,\n        onerror = this.onerror;\n        this.onsuccess = null;\n        this.onerror = null;\n        var res2 = f2.apply(this, arguments);\n        if (onsuccess)\n            this.onsuccess = this.onsuccess ? callBoth(onsuccess, this.onsuccess) : onsuccess;\n        if (onerror)\n            this.onerror = this.onerror ? callBoth(onerror, this.onerror) : onerror;\n        return res2 !== undefined ? res2 : res;\n    };\n}\nfunction hookDeletingChain(f1, f2) {\n    if (f1 === nop)\n        return f2;\n    return function () {\n        f1.apply(this, arguments);\n        var onsuccess = this.onsuccess,\n        onerror = this.onerror;\n        this.onsuccess = this.onerror = null;\n        f2.apply(this, arguments);\n        if (onsuccess)\n            this.onsuccess = this.onsuccess ? callBoth(onsuccess, this.onsuccess) : onsuccess;\n        if (onerror)\n            this.onerror = this.onerror ? callBoth(onerror, this.onerror) : onerror;\n    };\n}\nfunction hookUpdatingChain(f1, f2) {\n    if (f1 === nop)\n        return f2;\n    return function (modifications) {\n        var res = f1.apply(this, arguments);\n        extend(modifications, res);\n        var onsuccess = this.onsuccess,\n        onerror = this.onerror;\n        this.onsuccess = null;\n        this.onerror = null;\n        var res2 = f2.apply(this, arguments);\n        if (onsuccess)\n            this.onsuccess = this.onsuccess ? callBoth(onsuccess, this.onsuccess) : onsuccess;\n        if (onerror)\n            this.onerror = this.onerror ? callBoth(onerror, this.onerror) : onerror;\n        return res === undefined ?\n            (res2 === undefined ? undefined : res2) :\n            (extend(res, res2));\n    };\n}\nfunction reverseStoppableEventChain(f1, f2) {\n    if (f1 === nop)\n        return f2;\n    return function () {\n        if (f2.apply(this, arguments) === false)\n            return false;\n        return f1.apply(this, arguments);\n    };\n}\nfunction promisableChain(f1, f2) {\n    if (f1 === nop)\n        return f2;\n    return function () {\n        var res = f1.apply(this, arguments);\n        if (res && typeof res.then === 'function') {\n            var thiz = this, i = arguments.length, args = new Array(i);\n            while (i--)\n                args[i] = arguments[i];\n            return res.then(function () {\n                return f2.apply(thiz, args);\n            });\n        }\n        return f2.apply(this, arguments);\n    };\n}\n\nvar INTERNAL = {};\nconst LONG_STACKS_CLIP_LIMIT = 100,\nMAX_LONG_STACKS = 20, ZONE_ECHO_LIMIT = 100, [resolvedNativePromise, nativePromiseProto, resolvedGlobalPromise] = typeof Promise === 'undefined' ?\n    [] :\n    (() => {\n        let globalP = Promise.resolve();\n        if (typeof crypto === 'undefined' || !crypto.subtle)\n            return [globalP, getProto(globalP), globalP];\n        const nativeP = crypto.subtle.digest(\"SHA-512\", new Uint8Array([0]));\n        return [\n            nativeP,\n            getProto(nativeP),\n            globalP\n        ];\n    })(), nativePromiseThen = nativePromiseProto && nativePromiseProto.then;\nconst NativePromise = resolvedNativePromise && resolvedNativePromise.constructor;\nconst patchGlobalPromise = !!resolvedGlobalPromise;\nvar stack_being_generated = false;\nvar schedulePhysicalTick = resolvedGlobalPromise ?\n    () => { resolvedGlobalPromise.then(physicalTick); }\n    :\n        _global.setImmediate ?\n            setImmediate.bind(null, physicalTick) :\n            _global.MutationObserver ?\n                () => {\n                    var hiddenDiv = document.createElement(\"div\");\n                    (new MutationObserver(() => {\n                        physicalTick();\n                        hiddenDiv = null;\n                    })).observe(hiddenDiv, { attributes: true });\n                    hiddenDiv.setAttribute('i', '1');\n                } :\n                () => { setTimeout(physicalTick, 0); };\nvar asap = function (callback, args) {\n    microtickQueue.push([callback, args]);\n    if (needsNewPhysicalTick) {\n        schedulePhysicalTick();\n        needsNewPhysicalTick = false;\n    }\n};\nvar isOutsideMicroTick = true,\nneedsNewPhysicalTick = true,\nunhandledErrors = [],\nrejectingErrors = [],\ncurrentFulfiller = null, rejectionMapper = mirror;\nvar globalPSD = {\n    id: 'global',\n    global: true,\n    ref: 0,\n    unhandleds: [],\n    onunhandled: globalError,\n    pgp: false,\n    env: {},\n    finalize: function () {\n        this.unhandleds.forEach(uh => {\n            try {\n                globalError(uh[0], uh[1]);\n            }\n            catch (e) { }\n        });\n    }\n};\nvar PSD = globalPSD;\nvar microtickQueue = [];\nvar numScheduledCalls = 0;\nvar tickFinalizers = [];\nfunction DexiePromise(fn) {\n    if (typeof this !== 'object')\n        throw new TypeError('Promises must be constructed via new');\n    this._listeners = [];\n    this.onuncatched = nop;\n    this._lib = false;\n    var psd = (this._PSD = PSD);\n    if (debug) {\n        this._stackHolder = getErrorWithStack();\n        this._prev = null;\n        this._numPrev = 0;\n    }\n    if (typeof fn !== 'function') {\n        if (fn !== INTERNAL)\n            throw new TypeError('Not a function');\n        this._state = arguments[1];\n        this._value = arguments[2];\n        if (this._state === false)\n            handleRejection(this, this._value);\n        return;\n    }\n    this._state = null;\n    this._value = null;\n    ++psd.ref;\n    executePromiseTask(this, fn);\n}\nconst thenProp = {\n    get: function () {\n        var psd = PSD, microTaskId = totalEchoes;\n        function then(onFulfilled, onRejected) {\n            var possibleAwait = !psd.global && (psd !== PSD || microTaskId !== totalEchoes);\n            const cleanup = possibleAwait && !decrementExpectedAwaits();\n            var rv = new DexiePromise((resolve, reject) => {\n                propagateToListener(this, new Listener(nativeAwaitCompatibleWrap(onFulfilled, psd, possibleAwait, cleanup), nativeAwaitCompatibleWrap(onRejected, psd, possibleAwait, cleanup), resolve, reject, psd));\n            });\n            debug && linkToPreviousPromise(rv, this);\n            return rv;\n        }\n        then.prototype = INTERNAL;\n        return then;\n    },\n    set: function (value) {\n        setProp(this, 'then', value && value.prototype === INTERNAL ?\n            thenProp :\n            {\n                get: function () {\n                    return value;\n                },\n                set: thenProp.set\n            });\n    }\n};\nprops(DexiePromise.prototype, {\n    then: thenProp,\n    _then: function (onFulfilled, onRejected) {\n        propagateToListener(this, new Listener(null, null, onFulfilled, onRejected, PSD));\n    },\n    catch: function (onRejected) {\n        if (arguments.length === 1)\n            return this.then(null, onRejected);\n        var type = arguments[0], handler = arguments[1];\n        return typeof type === 'function' ? this.then(null, err =>\n        err instanceof type ? handler(err) : PromiseReject(err))\n            : this.then(null, err =>\n            err && err.name === type ? handler(err) : PromiseReject(err));\n    },\n    finally: function (onFinally) {\n        return this.then(value => {\n            onFinally();\n            return value;\n        }, err => {\n            onFinally();\n            return PromiseReject(err);\n        });\n    },\n    stack: {\n        get: function () {\n            if (this._stack)\n                return this._stack;\n            try {\n                stack_being_generated = true;\n                var stacks = getStack(this, [], MAX_LONG_STACKS);\n                var stack = stacks.join(\"\\nFrom previous: \");\n                if (this._state !== null)\n                    this._stack = stack;\n                return stack;\n            }\n            finally {\n                stack_being_generated = false;\n            }\n        }\n    },\n    timeout: function (ms, msg) {\n        return ms < Infinity ?\n            new DexiePromise((resolve, reject) => {\n                var handle = setTimeout(() => reject(new exceptions.Timeout(msg)), ms);\n                this.then(resolve, reject).finally(clearTimeout.bind(null, handle));\n            }) : this;\n    }\n});\nif (typeof Symbol !== 'undefined' && Symbol.toStringTag)\n    setProp(DexiePromise.prototype, Symbol.toStringTag, 'Dexie.Promise');\nglobalPSD.env = snapShot();\nfunction Listener(onFulfilled, onRejected, resolve, reject, zone) {\n    this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n    this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n    this.resolve = resolve;\n    this.reject = reject;\n    this.psd = zone;\n}\nprops(DexiePromise, {\n    all: function () {\n        var values = getArrayOf.apply(null, arguments)\n            .map(onPossibleParallellAsync);\n        return new DexiePromise(function (resolve, reject) {\n            if (values.length === 0)\n                resolve([]);\n            var remaining = values.length;\n            values.forEach((a, i) => DexiePromise.resolve(a).then(x => {\n                values[i] = x;\n                if (!--remaining)\n                    resolve(values);\n            }, reject));\n        });\n    },\n    resolve: value => {\n        if (value instanceof DexiePromise)\n            return value;\n        if (value && typeof value.then === 'function')\n            return new DexiePromise((resolve, reject) => {\n                value.then(resolve, reject);\n            });\n        var rv = new DexiePromise(INTERNAL, true, value);\n        linkToPreviousPromise(rv, currentFulfiller);\n        return rv;\n    },\n    reject: PromiseReject,\n    race: function () {\n        var values = getArrayOf.apply(null, arguments).map(onPossibleParallellAsync);\n        return new DexiePromise((resolve, reject) => {\n            values.map(value => DexiePromise.resolve(value).then(resolve, reject));\n        });\n    },\n    PSD: {\n        get: () => PSD,\n        set: value => PSD = value\n    },\n    totalEchoes: { get: () => totalEchoes },\n    newPSD: newScope,\n    usePSD: usePSD,\n    scheduler: {\n        get: () => asap,\n        set: value => { asap = value; }\n    },\n    rejectionMapper: {\n        get: () => rejectionMapper,\n        set: value => { rejectionMapper = value; }\n    },\n    follow: (fn, zoneProps) => {\n        return new DexiePromise((resolve, reject) => {\n            return newScope((resolve, reject) => {\n                var psd = PSD;\n                psd.unhandleds = [];\n                psd.onunhandled = reject;\n                psd.finalize = callBoth(function () {\n                    run_at_end_of_this_or_next_physical_tick(() => {\n                        this.unhandleds.length === 0 ? resolve() : reject(this.unhandleds[0]);\n                    });\n                }, psd.finalize);\n                fn();\n            }, zoneProps, resolve, reject);\n        });\n    }\n});\nif (NativePromise) {\n    if (NativePromise.allSettled)\n        setProp(DexiePromise, \"allSettled\", function () {\n            const possiblePromises = getArrayOf.apply(null, arguments).map(onPossibleParallellAsync);\n            return new DexiePromise(resolve => {\n                if (possiblePromises.length === 0)\n                    resolve([]);\n                let remaining = possiblePromises.length;\n                const results = new Array(remaining);\n                possiblePromises.forEach((p, i) => DexiePromise.resolve(p).then(value => results[i] = { status: \"fulfilled\", value }, reason => results[i] = { status: \"rejected\", reason })\n                    .then(() => --remaining || resolve(results)));\n            });\n        });\n    if (NativePromise.any && typeof AggregateError !== 'undefined')\n        setProp(DexiePromise, \"any\", function () {\n            const possiblePromises = getArrayOf.apply(null, arguments).map(onPossibleParallellAsync);\n            return new DexiePromise((resolve, reject) => {\n                if (possiblePromises.length === 0)\n                    reject(new AggregateError([]));\n                let remaining = possiblePromises.length;\n                const failures = new Array(remaining);\n                possiblePromises.forEach((p, i) => DexiePromise.resolve(p).then(value => resolve(value), failure => {\n                    failures[i] = failure;\n                    if (!--remaining)\n                        reject(new AggregateError(failures));\n                }));\n            });\n        });\n}\nfunction executePromiseTask(promise, fn) {\n    try {\n        fn(value => {\n            if (promise._state !== null)\n                return;\n            if (value === promise)\n                throw new TypeError('A promise cannot be resolved with itself.');\n            var shouldExecuteTick = promise._lib && beginMicroTickScope();\n            if (value && typeof value.then === 'function') {\n                executePromiseTask(promise, (resolve, reject) => {\n                    value instanceof DexiePromise ?\n                        value._then(resolve, reject) :\n                        value.then(resolve, reject);\n                });\n            }\n            else {\n                promise._state = true;\n                promise._value = value;\n                propagateAllListeners(promise);\n            }\n            if (shouldExecuteTick)\n                endMicroTickScope();\n        }, handleRejection.bind(null, promise));\n    }\n    catch (ex) {\n        handleRejection(promise, ex);\n    }\n}\nfunction handleRejection(promise, reason) {\n    rejectingErrors.push(reason);\n    if (promise._state !== null)\n        return;\n    var shouldExecuteTick = promise._lib && beginMicroTickScope();\n    reason = rejectionMapper(reason);\n    promise._state = false;\n    promise._value = reason;\n    debug && reason !== null && typeof reason === 'object' && !reason._promise && tryCatch(() => {\n        var origProp = getPropertyDescriptor(reason, \"stack\");\n        reason._promise = promise;\n        setProp(reason, \"stack\", {\n            get: () => stack_being_generated ?\n                origProp && (origProp.get ?\n                    origProp.get.apply(reason) :\n                    origProp.value) :\n                promise.stack\n        });\n    });\n    addPossiblyUnhandledError(promise);\n    propagateAllListeners(promise);\n    if (shouldExecuteTick)\n        endMicroTickScope();\n}\nfunction propagateAllListeners(promise) {\n    var listeners = promise._listeners;\n    promise._listeners = [];\n    for (var i = 0, len = listeners.length; i < len; ++i) {\n        propagateToListener(promise, listeners[i]);\n    }\n    var psd = promise._PSD;\n    --psd.ref || psd.finalize();\n    if (numScheduledCalls === 0) {\n        ++numScheduledCalls;\n        asap(() => {\n            if (--numScheduledCalls === 0)\n                finalizePhysicalTick();\n        }, []);\n    }\n}\nfunction propagateToListener(promise, listener) {\n    if (promise._state === null) {\n        promise._listeners.push(listener);\n        return;\n    }\n    var cb = promise._state ? listener.onFulfilled : listener.onRejected;\n    if (cb === null) {\n        return (promise._state ? listener.resolve : listener.reject)(promise._value);\n    }\n    ++listener.psd.ref;\n    ++numScheduledCalls;\n    asap(callListener, [cb, promise, listener]);\n}\nfunction callListener(cb, promise, listener) {\n    try {\n        currentFulfiller = promise;\n        var ret, value = promise._value;\n        if (promise._state) {\n            ret = cb(value);\n        }\n        else {\n            if (rejectingErrors.length)\n                rejectingErrors = [];\n            ret = cb(value);\n            if (rejectingErrors.indexOf(value) === -1)\n                markErrorAsHandled(promise);\n        }\n        listener.resolve(ret);\n    }\n    catch (e) {\n        listener.reject(e);\n    }\n    finally {\n        currentFulfiller = null;\n        if (--numScheduledCalls === 0)\n            finalizePhysicalTick();\n        --listener.psd.ref || listener.psd.finalize();\n    }\n}\nfunction getStack(promise, stacks, limit) {\n    if (stacks.length === limit)\n        return stacks;\n    var stack = \"\";\n    if (promise._state === false) {\n        var failure = promise._value, errorName, message;\n        if (failure != null) {\n            errorName = failure.name || \"Error\";\n            message = failure.message || failure;\n            stack = prettyStack(failure, 0);\n        }\n        else {\n            errorName = failure;\n            message = \"\";\n        }\n        stacks.push(errorName + (message ? \": \" + message : \"\") + stack);\n    }\n    if (debug) {\n        stack = prettyStack(promise._stackHolder, 2);\n        if (stack && stacks.indexOf(stack) === -1)\n            stacks.push(stack);\n        if (promise._prev)\n            getStack(promise._prev, stacks, limit);\n    }\n    return stacks;\n}\nfunction linkToPreviousPromise(promise, prev) {\n    var numPrev = prev ? prev._numPrev + 1 : 0;\n    if (numPrev < LONG_STACKS_CLIP_LIMIT) {\n        promise._prev = prev;\n        promise._numPrev = numPrev;\n    }\n}\nfunction physicalTick() {\n    beginMicroTickScope() && endMicroTickScope();\n}\nfunction beginMicroTickScope() {\n    var wasRootExec = isOutsideMicroTick;\n    isOutsideMicroTick = false;\n    needsNewPhysicalTick = false;\n    return wasRootExec;\n}\nfunction endMicroTickScope() {\n    var callbacks, i, l;\n    do {\n        while (microtickQueue.length > 0) {\n            callbacks = microtickQueue;\n            microtickQueue = [];\n            l = callbacks.length;\n            for (i = 0; i < l; ++i) {\n                var item = callbacks[i];\n                item[0].apply(null, item[1]);\n            }\n        }\n    } while (microtickQueue.length > 0);\n    isOutsideMicroTick = true;\n    needsNewPhysicalTick = true;\n}\nfunction finalizePhysicalTick() {\n    var unhandledErrs = unhandledErrors;\n    unhandledErrors = [];\n    unhandledErrs.forEach(p => {\n        p._PSD.onunhandled.call(null, p._value, p);\n    });\n    var finalizers = tickFinalizers.slice(0);\n    var i = finalizers.length;\n    while (i)\n        finalizers[--i]();\n}\nfunction run_at_end_of_this_or_next_physical_tick(fn) {\n    function finalizer() {\n        fn();\n        tickFinalizers.splice(tickFinalizers.indexOf(finalizer), 1);\n    }\n    tickFinalizers.push(finalizer);\n    ++numScheduledCalls;\n    asap(() => {\n        if (--numScheduledCalls === 0)\n            finalizePhysicalTick();\n    }, []);\n}\nfunction addPossiblyUnhandledError(promise) {\n    if (!unhandledErrors.some(p => p._value === promise._value))\n        unhandledErrors.push(promise);\n}\nfunction markErrorAsHandled(promise) {\n    var i = unhandledErrors.length;\n    while (i)\n        if (unhandledErrors[--i]._value === promise._value) {\n            unhandledErrors.splice(i, 1);\n            return;\n        }\n}\nfunction PromiseReject(reason) {\n    return new DexiePromise(INTERNAL, false, reason);\n}\nfunction wrap(fn, errorCatcher) {\n    var psd = PSD;\n    return function () {\n        var wasRootExec = beginMicroTickScope(), outerScope = PSD;\n        try {\n            switchToZone(psd, true);\n            return fn.apply(this, arguments);\n        }\n        catch (e) {\n            errorCatcher && errorCatcher(e);\n        }\n        finally {\n            switchToZone(outerScope, false);\n            if (wasRootExec)\n                endMicroTickScope();\n        }\n    };\n}\nconst task = { awaits: 0, echoes: 0, id: 0 };\nvar taskCounter = 0;\nvar zoneStack = [];\nvar zoneEchoes = 0;\nvar totalEchoes = 0;\nvar zone_id_counter = 0;\nfunction newScope(fn, props, a1, a2) {\n    var parent = PSD, psd = Object.create(parent);\n    psd.parent = parent;\n    psd.ref = 0;\n    psd.global = false;\n    psd.id = ++zone_id_counter;\n    var globalEnv = globalPSD.env;\n    psd.env = patchGlobalPromise ? {\n        Promise: DexiePromise,\n        PromiseProp: { value: DexiePromise, configurable: true, writable: true },\n        all: DexiePromise.all,\n        race: DexiePromise.race,\n        allSettled: DexiePromise.allSettled,\n        any: DexiePromise.any,\n        resolve: DexiePromise.resolve,\n        reject: DexiePromise.reject,\n        nthen: getPatchedPromiseThen(globalEnv.nthen, psd),\n        gthen: getPatchedPromiseThen(globalEnv.gthen, psd)\n    } : {};\n    if (props)\n        extend(psd, props);\n    ++parent.ref;\n    psd.finalize = function () {\n        --this.parent.ref || this.parent.finalize();\n    };\n    var rv = usePSD(psd, fn, a1, a2);\n    if (psd.ref === 0)\n        psd.finalize();\n    return rv;\n}\nfunction incrementExpectedAwaits() {\n    if (!task.id)\n        task.id = ++taskCounter;\n    ++task.awaits;\n    task.echoes += ZONE_ECHO_LIMIT;\n    return task.id;\n}\nfunction decrementExpectedAwaits() {\n    if (!task.awaits)\n        return false;\n    if (--task.awaits === 0)\n        task.id = 0;\n    task.echoes = task.awaits * ZONE_ECHO_LIMIT;\n    return true;\n}\nif (('' + nativePromiseThen).indexOf('[native code]') === -1) {\n    incrementExpectedAwaits = decrementExpectedAwaits = nop;\n}\nfunction onPossibleParallellAsync(possiblePromise) {\n    if (task.echoes && possiblePromise && possiblePromise.constructor === NativePromise) {\n        incrementExpectedAwaits();\n        return possiblePromise.then(x => {\n            decrementExpectedAwaits();\n            return x;\n        }, e => {\n            decrementExpectedAwaits();\n            return rejection(e);\n        });\n    }\n    return possiblePromise;\n}\nfunction zoneEnterEcho(targetZone) {\n    ++totalEchoes;\n    if (!task.echoes || --task.echoes === 0) {\n        task.echoes = task.id = 0;\n    }\n    zoneStack.push(PSD);\n    switchToZone(targetZone, true);\n}\nfunction zoneLeaveEcho() {\n    var zone = zoneStack[zoneStack.length - 1];\n    zoneStack.pop();\n    switchToZone(zone, false);\n}\nfunction switchToZone(targetZone, bEnteringZone) {\n    var currentZone = PSD;\n    if (bEnteringZone ? task.echoes && (!zoneEchoes++ || targetZone !== PSD) : zoneEchoes && (!--zoneEchoes || targetZone !== PSD)) {\n        enqueueNativeMicroTask(bEnteringZone ? zoneEnterEcho.bind(null, targetZone) : zoneLeaveEcho);\n    }\n    if (targetZone === PSD)\n        return;\n    PSD = targetZone;\n    if (currentZone === globalPSD)\n        globalPSD.env = snapShot();\n    if (patchGlobalPromise) {\n        var GlobalPromise = globalPSD.env.Promise;\n        var targetEnv = targetZone.env;\n        nativePromiseProto.then = targetEnv.nthen;\n        GlobalPromise.prototype.then = targetEnv.gthen;\n        if (currentZone.global || targetZone.global) {\n            Object.defineProperty(_global, 'Promise', targetEnv.PromiseProp);\n            GlobalPromise.all = targetEnv.all;\n            GlobalPromise.race = targetEnv.race;\n            GlobalPromise.resolve = targetEnv.resolve;\n            GlobalPromise.reject = targetEnv.reject;\n            if (targetEnv.allSettled)\n                GlobalPromise.allSettled = targetEnv.allSettled;\n            if (targetEnv.any)\n                GlobalPromise.any = targetEnv.any;\n        }\n    }\n}\nfunction snapShot() {\n    var GlobalPromise = _global.Promise;\n    return patchGlobalPromise ? {\n        Promise: GlobalPromise,\n        PromiseProp: Object.getOwnPropertyDescriptor(_global, \"Promise\"),\n        all: GlobalPromise.all,\n        race: GlobalPromise.race,\n        allSettled: GlobalPromise.allSettled,\n        any: GlobalPromise.any,\n        resolve: GlobalPromise.resolve,\n        reject: GlobalPromise.reject,\n        nthen: nativePromiseProto.then,\n        gthen: GlobalPromise.prototype.then\n    } : {};\n}\nfunction usePSD(psd, fn, a1, a2, a3) {\n    var outerScope = PSD;\n    try {\n        switchToZone(psd, true);\n        return fn(a1, a2, a3);\n    }\n    finally {\n        switchToZone(outerScope, false);\n    }\n}\nfunction enqueueNativeMicroTask(job) {\n    nativePromiseThen.call(resolvedNativePromise, job);\n}\nfunction nativeAwaitCompatibleWrap(fn, zone, possibleAwait, cleanup) {\n    return typeof fn !== 'function' ? fn : function () {\n        var outerZone = PSD;\n        if (possibleAwait)\n            incrementExpectedAwaits();\n        switchToZone(zone, true);\n        try {\n            return fn.apply(this, arguments);\n        }\n        finally {\n            switchToZone(outerZone, false);\n            if (cleanup)\n                enqueueNativeMicroTask(decrementExpectedAwaits);\n        }\n    };\n}\nfunction getPatchedPromiseThen(origThen, zone) {\n    return function (onResolved, onRejected) {\n        return origThen.call(this, nativeAwaitCompatibleWrap(onResolved, zone), nativeAwaitCompatibleWrap(onRejected, zone));\n    };\n}\nconst UNHANDLEDREJECTION = \"unhandledrejection\";\nfunction globalError(err, promise) {\n    var rv;\n    try {\n        rv = promise.onuncatched(err);\n    }\n    catch (e) { }\n    if (rv !== false)\n        try {\n            var event, eventData = { promise: promise, reason: err };\n            if (_global.document && document.createEvent) {\n                event = document.createEvent('Event');\n                event.initEvent(UNHANDLEDREJECTION, true, true);\n                extend(event, eventData);\n            }\n            else if (_global.CustomEvent) {\n                event = new CustomEvent(UNHANDLEDREJECTION, { detail: eventData });\n                extend(event, eventData);\n            }\n            if (event && _global.dispatchEvent) {\n                dispatchEvent(event);\n                if (!_global.PromiseRejectionEvent && _global.onunhandledrejection)\n                    try {\n                        _global.onunhandledrejection(event);\n                    }\n                    catch (_) { }\n            }\n            if (debug && event && !event.defaultPrevented) {\n                console.warn(`Unhandled rejection: ${err.stack || err}`);\n            }\n        }\n        catch (e) { }\n}\nvar rejection = DexiePromise.reject;\n\nfunction tempTransaction(db, mode, storeNames, fn) {\n    if (!db.idbdb || (!db._state.openComplete && (!PSD.letThrough && !db._vip))) {\n        if (db._state.openComplete) {\n            return rejection(new exceptions.DatabaseClosed(db._state.dbOpenError));\n        }\n        if (!db._state.isBeingOpened) {\n            if (!db._options.autoOpen)\n                return rejection(new exceptions.DatabaseClosed());\n            db.open().catch(nop);\n        }\n        return db._state.dbReadyPromise.then(() => tempTransaction(db, mode, storeNames, fn));\n    }\n    else {\n        var trans = db._createTransaction(mode, storeNames, db._dbSchema);\n        try {\n            trans.create();\n            db._state.PR1398_maxLoop = 3;\n        }\n        catch (ex) {\n            if (ex.name === errnames.InvalidState && db.isOpen() && --db._state.PR1398_maxLoop > 0) {\n                console.warn('Dexie: Need to reopen db');\n                db._close();\n                return db.open().then(() => tempTransaction(db, mode, storeNames, fn));\n            }\n            return rejection(ex);\n        }\n        return trans._promise(mode, (resolve, reject) => {\n            return newScope(() => {\n                PSD.trans = trans;\n                return fn(resolve, reject, trans);\n            });\n        }).then(result => {\n            return trans._completion.then(() => result);\n        });\n    }\n}\n\nconst DEXIE_VERSION = '3.2.4';\nconst maxString = String.fromCharCode(65535);\nconst minKey = -Infinity;\nconst INVALID_KEY_ARGUMENT = \"Invalid key provided. Keys must be of type string, number, Date or Array<string | number | Date>.\";\nconst STRING_EXPECTED = \"String expected.\";\nconst connections = [];\nconst isIEOrEdge = typeof navigator !== 'undefined' && /(MSIE|Trident|Edge)/.test(navigator.userAgent);\nconst hasIEDeleteObjectStoreBug = isIEOrEdge;\nconst hangsOnDeleteLargeKeyRange = isIEOrEdge;\nconst dexieStackFrameFilter = frame => !/(dexie\\.js|dexie\\.min\\.js)/.test(frame);\nconst DBNAMES_DB = '__dbnames';\nconst READONLY = 'readonly';\nconst READWRITE = 'readwrite';\n\nfunction combine(filter1, filter2) {\n    return filter1 ?\n        filter2 ?\n            function () { return filter1.apply(this, arguments) && filter2.apply(this, arguments); } :\n            filter1 :\n        filter2;\n}\n\nconst AnyRange = {\n    type: 3 ,\n    lower: -Infinity,\n    lowerOpen: false,\n    upper: [[]],\n    upperOpen: false\n};\n\nfunction workaroundForUndefinedPrimKey(keyPath) {\n    return typeof keyPath === \"string\" && !/\\./.test(keyPath)\n        ? (obj) => {\n            if (obj[keyPath] === undefined && (keyPath in obj)) {\n                obj = deepClone(obj);\n                delete obj[keyPath];\n            }\n            return obj;\n        }\n        : (obj) => obj;\n}\n\nclass Table {\n    _trans(mode, fn, writeLocked) {\n        const trans = this._tx || PSD.trans;\n        const tableName = this.name;\n        function checkTableInTransaction(resolve, reject, trans) {\n            if (!trans.schema[tableName])\n                throw new exceptions.NotFound(\"Table \" + tableName + \" not part of transaction\");\n            return fn(trans.idbtrans, trans);\n        }\n        const wasRootExec = beginMicroTickScope();\n        try {\n            return trans && trans.db === this.db ?\n                trans === PSD.trans ?\n                    trans._promise(mode, checkTableInTransaction, writeLocked) :\n                    newScope(() => trans._promise(mode, checkTableInTransaction, writeLocked), { trans: trans, transless: PSD.transless || PSD }) :\n                tempTransaction(this.db, mode, [this.name], checkTableInTransaction);\n        }\n        finally {\n            if (wasRootExec)\n                endMicroTickScope();\n        }\n    }\n    get(keyOrCrit, cb) {\n        if (keyOrCrit && keyOrCrit.constructor === Object)\n            return this.where(keyOrCrit).first(cb);\n        return this._trans('readonly', (trans) => {\n            return this.core.get({ trans, key: keyOrCrit })\n                .then(res => this.hook.reading.fire(res));\n        }).then(cb);\n    }\n    where(indexOrCrit) {\n        if (typeof indexOrCrit === 'string')\n            return new this.db.WhereClause(this, indexOrCrit);\n        if (isArray(indexOrCrit))\n            return new this.db.WhereClause(this, `[${indexOrCrit.join('+')}]`);\n        const keyPaths = keys(indexOrCrit);\n        if (keyPaths.length === 1)\n            return this\n                .where(keyPaths[0])\n                .equals(indexOrCrit[keyPaths[0]]);\n        const compoundIndex = this.schema.indexes.concat(this.schema.primKey).filter(ix => ix.compound &&\n            keyPaths.every(keyPath => ix.keyPath.indexOf(keyPath) >= 0) &&\n            ix.keyPath.every(keyPath => keyPaths.indexOf(keyPath) >= 0))[0];\n        if (compoundIndex && this.db._maxKey !== maxString)\n            return this\n                .where(compoundIndex.name)\n                .equals(compoundIndex.keyPath.map(kp => indexOrCrit[kp]));\n        if (!compoundIndex && debug)\n            console.warn(`The query ${JSON.stringify(indexOrCrit)} on ${this.name} would benefit of a ` +\n                `compound index [${keyPaths.join('+')}]`);\n        const { idxByName } = this.schema;\n        const idb = this.db._deps.indexedDB;\n        function equals(a, b) {\n            try {\n                return idb.cmp(a, b) === 0;\n            }\n            catch (e) {\n                return false;\n            }\n        }\n        const [idx, filterFunction] = keyPaths.reduce(([prevIndex, prevFilterFn], keyPath) => {\n            const index = idxByName[keyPath];\n            const value = indexOrCrit[keyPath];\n            return [\n                prevIndex || index,\n                prevIndex || !index ?\n                    combine(prevFilterFn, index && index.multi ?\n                        x => {\n                            const prop = getByKeyPath(x, keyPath);\n                            return isArray(prop) && prop.some(item => equals(value, item));\n                        } : x => equals(value, getByKeyPath(x, keyPath)))\n                    : prevFilterFn\n            ];\n        }, [null, null]);\n        return idx ?\n            this.where(idx.name).equals(indexOrCrit[idx.keyPath])\n                .filter(filterFunction) :\n            compoundIndex ?\n                this.filter(filterFunction) :\n                this.where(keyPaths).equals('');\n    }\n    filter(filterFunction) {\n        return this.toCollection().and(filterFunction);\n    }\n    count(thenShortcut) {\n        return this.toCollection().count(thenShortcut);\n    }\n    offset(offset) {\n        return this.toCollection().offset(offset);\n    }\n    limit(numRows) {\n        return this.toCollection().limit(numRows);\n    }\n    each(callback) {\n        return this.toCollection().each(callback);\n    }\n    toArray(thenShortcut) {\n        return this.toCollection().toArray(thenShortcut);\n    }\n    toCollection() {\n        return new this.db.Collection(new this.db.WhereClause(this));\n    }\n    orderBy(index) {\n        return new this.db.Collection(new this.db.WhereClause(this, isArray(index) ?\n            `[${index.join('+')}]` :\n            index));\n    }\n    reverse() {\n        return this.toCollection().reverse();\n    }\n    mapToClass(constructor) {\n        this.schema.mappedClass = constructor;\n        const readHook = obj => {\n            if (!obj)\n                return obj;\n            const res = Object.create(constructor.prototype);\n            for (var m in obj)\n                if (hasOwn(obj, m))\n                    try {\n                        res[m] = obj[m];\n                    }\n                    catch (_) { }\n            return res;\n        };\n        if (this.schema.readHook) {\n            this.hook.reading.unsubscribe(this.schema.readHook);\n        }\n        this.schema.readHook = readHook;\n        this.hook(\"reading\", readHook);\n        return constructor;\n    }\n    defineClass() {\n        function Class(content) {\n            extend(this, content);\n        }\n        return this.mapToClass(Class);\n    }\n    add(obj, key) {\n        const { auto, keyPath } = this.schema.primKey;\n        let objToAdd = obj;\n        if (keyPath && auto) {\n            objToAdd = workaroundForUndefinedPrimKey(keyPath)(obj);\n        }\n        return this._trans('readwrite', trans => {\n            return this.core.mutate({ trans, type: 'add', keys: key != null ? [key] : null, values: [objToAdd] });\n        }).then(res => res.numFailures ? DexiePromise.reject(res.failures[0]) : res.lastResult)\n            .then(lastResult => {\n            if (keyPath) {\n                try {\n                    setByKeyPath(obj, keyPath, lastResult);\n                }\n                catch (_) { }\n            }\n            return lastResult;\n        });\n    }\n    update(keyOrObject, modifications) {\n        if (typeof keyOrObject === 'object' && !isArray(keyOrObject)) {\n            const key = getByKeyPath(keyOrObject, this.schema.primKey.keyPath);\n            if (key === undefined)\n                return rejection(new exceptions.InvalidArgument(\"Given object does not contain its primary key\"));\n            try {\n                if (typeof modifications !== \"function\") {\n                    keys(modifications).forEach(keyPath => {\n                        setByKeyPath(keyOrObject, keyPath, modifications[keyPath]);\n                    });\n                }\n                else {\n                    modifications(keyOrObject, { value: keyOrObject, primKey: key });\n                }\n            }\n            catch (_a) {\n            }\n            return this.where(\":id\").equals(key).modify(modifications);\n        }\n        else {\n            return this.where(\":id\").equals(keyOrObject).modify(modifications);\n        }\n    }\n    put(obj, key) {\n        const { auto, keyPath } = this.schema.primKey;\n        let objToAdd = obj;\n        if (keyPath && auto) {\n            objToAdd = workaroundForUndefinedPrimKey(keyPath)(obj);\n        }\n        return this._trans('readwrite', trans => this.core.mutate({ trans, type: 'put', values: [objToAdd], keys: key != null ? [key] : null }))\n            .then(res => res.numFailures ? DexiePromise.reject(res.failures[0]) : res.lastResult)\n            .then(lastResult => {\n            if (keyPath) {\n                try {\n                    setByKeyPath(obj, keyPath, lastResult);\n                }\n                catch (_) { }\n            }\n            return lastResult;\n        });\n    }\n    delete(key) {\n        return this._trans('readwrite', trans => this.core.mutate({ trans, type: 'delete', keys: [key] }))\n            .then(res => res.numFailures ? DexiePromise.reject(res.failures[0]) : undefined);\n    }\n    clear() {\n        return this._trans('readwrite', trans => this.core.mutate({ trans, type: 'deleteRange', range: AnyRange }))\n            .then(res => res.numFailures ? DexiePromise.reject(res.failures[0]) : undefined);\n    }\n    bulkGet(keys) {\n        return this._trans('readonly', trans => {\n            return this.core.getMany({\n                keys,\n                trans\n            }).then(result => result.map(res => this.hook.reading.fire(res)));\n        });\n    }\n    bulkAdd(objects, keysOrOptions, options) {\n        const keys = Array.isArray(keysOrOptions) ? keysOrOptions : undefined;\n        options = options || (keys ? undefined : keysOrOptions);\n        const wantResults = options ? options.allKeys : undefined;\n        return this._trans('readwrite', trans => {\n            const { auto, keyPath } = this.schema.primKey;\n            if (keyPath && keys)\n                throw new exceptions.InvalidArgument(\"bulkAdd(): keys argument invalid on tables with inbound keys\");\n            if (keys && keys.length !== objects.length)\n                throw new exceptions.InvalidArgument(\"Arguments objects and keys must have the same length\");\n            const numObjects = objects.length;\n            let objectsToAdd = keyPath && auto ?\n                objects.map(workaroundForUndefinedPrimKey(keyPath)) :\n                objects;\n            return this.core.mutate({ trans, type: 'add', keys: keys, values: objectsToAdd, wantResults })\n                .then(({ numFailures, results, lastResult, failures }) => {\n                const result = wantResults ? results : lastResult;\n                if (numFailures === 0)\n                    return result;\n                throw new BulkError(`${this.name}.bulkAdd(): ${numFailures} of ${numObjects} operations failed`, failures);\n            });\n        });\n    }\n    bulkPut(objects, keysOrOptions, options) {\n        const keys = Array.isArray(keysOrOptions) ? keysOrOptions : undefined;\n        options = options || (keys ? undefined : keysOrOptions);\n        const wantResults = options ? options.allKeys : undefined;\n        return this._trans('readwrite', trans => {\n            const { auto, keyPath } = this.schema.primKey;\n            if (keyPath && keys)\n                throw new exceptions.InvalidArgument(\"bulkPut(): keys argument invalid on tables with inbound keys\");\n            if (keys && keys.length !== objects.length)\n                throw new exceptions.InvalidArgument(\"Arguments objects and keys must have the same length\");\n            const numObjects = objects.length;\n            let objectsToPut = keyPath && auto ?\n                objects.map(workaroundForUndefinedPrimKey(keyPath)) :\n                objects;\n            return this.core.mutate({ trans, type: 'put', keys: keys, values: objectsToPut, wantResults })\n                .then(({ numFailures, results, lastResult, failures }) => {\n                const result = wantResults ? results : lastResult;\n                if (numFailures === 0)\n                    return result;\n                throw new BulkError(`${this.name}.bulkPut(): ${numFailures} of ${numObjects} operations failed`, failures);\n            });\n        });\n    }\n    bulkDelete(keys) {\n        const numKeys = keys.length;\n        return this._trans('readwrite', trans => {\n            return this.core.mutate({ trans, type: 'delete', keys: keys });\n        }).then(({ numFailures, lastResult, failures }) => {\n            if (numFailures === 0)\n                return lastResult;\n            throw new BulkError(`${this.name}.bulkDelete(): ${numFailures} of ${numKeys} operations failed`, failures);\n        });\n    }\n}\n\nfunction Events(ctx) {\n    var evs = {};\n    var rv = function (eventName, subscriber) {\n        if (subscriber) {\n            var i = arguments.length, args = new Array(i - 1);\n            while (--i)\n                args[i - 1] = arguments[i];\n            evs[eventName].subscribe.apply(null, args);\n            return ctx;\n        }\n        else if (typeof (eventName) === 'string') {\n            return evs[eventName];\n        }\n    };\n    rv.addEventType = add;\n    for (var i = 1, l = arguments.length; i < l; ++i) {\n        add(arguments[i]);\n    }\n    return rv;\n    function add(eventName, chainFunction, defaultFunction) {\n        if (typeof eventName === 'object')\n            return addConfiguredEvents(eventName);\n        if (!chainFunction)\n            chainFunction = reverseStoppableEventChain;\n        if (!defaultFunction)\n            defaultFunction = nop;\n        var context = {\n            subscribers: [],\n            fire: defaultFunction,\n            subscribe: function (cb) {\n                if (context.subscribers.indexOf(cb) === -1) {\n                    context.subscribers.push(cb);\n                    context.fire = chainFunction(context.fire, cb);\n                }\n            },\n            unsubscribe: function (cb) {\n                context.subscribers = context.subscribers.filter(function (fn) { return fn !== cb; });\n                context.fire = context.subscribers.reduce(chainFunction, defaultFunction);\n            }\n        };\n        evs[eventName] = rv[eventName] = context;\n        return context;\n    }\n    function addConfiguredEvents(cfg) {\n        keys(cfg).forEach(function (eventName) {\n            var args = cfg[eventName];\n            if (isArray(args)) {\n                add(eventName, cfg[eventName][0], cfg[eventName][1]);\n            }\n            else if (args === 'asap') {\n                var context = add(eventName, mirror, function fire() {\n                    var i = arguments.length, args = new Array(i);\n                    while (i--)\n                        args[i] = arguments[i];\n                    context.subscribers.forEach(function (fn) {\n                        asap$1(function fireEvent() {\n                            fn.apply(null, args);\n                        });\n                    });\n                });\n            }\n            else\n                throw new exceptions.InvalidArgument(\"Invalid event config\");\n        });\n    }\n}\n\nfunction makeClassConstructor(prototype, constructor) {\n    derive(constructor).from({ prototype });\n    return constructor;\n}\n\nfunction createTableConstructor(db) {\n    return makeClassConstructor(Table.prototype, function Table(name, tableSchema, trans) {\n        this.db = db;\n        this._tx = trans;\n        this.name = name;\n        this.schema = tableSchema;\n        this.hook = db._allTables[name] ? db._allTables[name].hook : Events(null, {\n            \"creating\": [hookCreatingChain, nop],\n            \"reading\": [pureFunctionChain, mirror],\n            \"updating\": [hookUpdatingChain, nop],\n            \"deleting\": [hookDeletingChain, nop]\n        });\n    });\n}\n\nfunction isPlainKeyRange(ctx, ignoreLimitFilter) {\n    return !(ctx.filter || ctx.algorithm || ctx.or) &&\n        (ignoreLimitFilter ? ctx.justLimit : !ctx.replayFilter);\n}\nfunction addFilter(ctx, fn) {\n    ctx.filter = combine(ctx.filter, fn);\n}\nfunction addReplayFilter(ctx, factory, isLimitFilter) {\n    var curr = ctx.replayFilter;\n    ctx.replayFilter = curr ? () => combine(curr(), factory()) : factory;\n    ctx.justLimit = isLimitFilter && !curr;\n}\nfunction addMatchFilter(ctx, fn) {\n    ctx.isMatch = combine(ctx.isMatch, fn);\n}\nfunction getIndexOrStore(ctx, coreSchema) {\n    if (ctx.isPrimKey)\n        return coreSchema.primaryKey;\n    const index = coreSchema.getIndexByKeyPath(ctx.index);\n    if (!index)\n        throw new exceptions.Schema(\"KeyPath \" + ctx.index + \" on object store \" + coreSchema.name + \" is not indexed\");\n    return index;\n}\nfunction openCursor(ctx, coreTable, trans) {\n    const index = getIndexOrStore(ctx, coreTable.schema);\n    return coreTable.openCursor({\n        trans,\n        values: !ctx.keysOnly,\n        reverse: ctx.dir === 'prev',\n        unique: !!ctx.unique,\n        query: {\n            index,\n            range: ctx.range\n        }\n    });\n}\nfunction iter(ctx, fn, coreTrans, coreTable) {\n    const filter = ctx.replayFilter ? combine(ctx.filter, ctx.replayFilter()) : ctx.filter;\n    if (!ctx.or) {\n        return iterate(openCursor(ctx, coreTable, coreTrans), combine(ctx.algorithm, filter), fn, !ctx.keysOnly && ctx.valueMapper);\n    }\n    else {\n        const set = {};\n        const union = (item, cursor, advance) => {\n            if (!filter || filter(cursor, advance, result => cursor.stop(result), err => cursor.fail(err))) {\n                var primaryKey = cursor.primaryKey;\n                var key = '' + primaryKey;\n                if (key === '[object ArrayBuffer]')\n                    key = '' + new Uint8Array(primaryKey);\n                if (!hasOwn(set, key)) {\n                    set[key] = true;\n                    fn(item, cursor, advance);\n                }\n            }\n        };\n        return Promise.all([\n            ctx.or._iterate(union, coreTrans),\n            iterate(openCursor(ctx, coreTable, coreTrans), ctx.algorithm, union, !ctx.keysOnly && ctx.valueMapper)\n        ]);\n    }\n}\nfunction iterate(cursorPromise, filter, fn, valueMapper) {\n    var mappedFn = valueMapper ? (x, c, a) => fn(valueMapper(x), c, a) : fn;\n    var wrappedFn = wrap(mappedFn);\n    return cursorPromise.then(cursor => {\n        if (cursor) {\n            return cursor.start(() => {\n                var c = () => cursor.continue();\n                if (!filter || filter(cursor, advancer => c = advancer, val => { cursor.stop(val); c = nop; }, e => { cursor.fail(e); c = nop; }))\n                    wrappedFn(cursor.value, cursor, advancer => c = advancer);\n                c();\n            });\n        }\n    });\n}\n\nfunction cmp(a, b) {\n    try {\n        const ta = type(a);\n        const tb = type(b);\n        if (ta !== tb) {\n            if (ta === 'Array')\n                return 1;\n            if (tb === 'Array')\n                return -1;\n            if (ta === 'binary')\n                return 1;\n            if (tb === 'binary')\n                return -1;\n            if (ta === 'string')\n                return 1;\n            if (tb === 'string')\n                return -1;\n            if (ta === 'Date')\n                return 1;\n            if (tb !== 'Date')\n                return NaN;\n            return -1;\n        }\n        switch (ta) {\n            case 'number':\n            case 'Date':\n            case 'string':\n                return a > b ? 1 : a < b ? -1 : 0;\n            case 'binary': {\n                return compareUint8Arrays(getUint8Array(a), getUint8Array(b));\n            }\n            case 'Array':\n                return compareArrays(a, b);\n        }\n    }\n    catch (_a) { }\n    return NaN;\n}\nfunction compareArrays(a, b) {\n    const al = a.length;\n    const bl = b.length;\n    const l = al < bl ? al : bl;\n    for (let i = 0; i < l; ++i) {\n        const res = cmp(a[i], b[i]);\n        if (res !== 0)\n            return res;\n    }\n    return al === bl ? 0 : al < bl ? -1 : 1;\n}\nfunction compareUint8Arrays(a, b) {\n    const al = a.length;\n    const bl = b.length;\n    const l = al < bl ? al : bl;\n    for (let i = 0; i < l; ++i) {\n        if (a[i] !== b[i])\n            return a[i] < b[i] ? -1 : 1;\n    }\n    return al === bl ? 0 : al < bl ? -1 : 1;\n}\nfunction type(x) {\n    const t = typeof x;\n    if (t !== 'object')\n        return t;\n    if (ArrayBuffer.isView(x))\n        return 'binary';\n    const tsTag = toStringTag(x);\n    return tsTag === 'ArrayBuffer' ? 'binary' : tsTag;\n}\nfunction getUint8Array(a) {\n    if (a instanceof Uint8Array)\n        return a;\n    if (ArrayBuffer.isView(a))\n        return new Uint8Array(a.buffer, a.byteOffset, a.byteLength);\n    return new Uint8Array(a);\n}\n\nclass Collection {\n    _read(fn, cb) {\n        var ctx = this._ctx;\n        return ctx.error ?\n            ctx.table._trans(null, rejection.bind(null, ctx.error)) :\n            ctx.table._trans('readonly', fn).then(cb);\n    }\n    _write(fn) {\n        var ctx = this._ctx;\n        return ctx.error ?\n            ctx.table._trans(null, rejection.bind(null, ctx.error)) :\n            ctx.table._trans('readwrite', fn, \"locked\");\n    }\n    _addAlgorithm(fn) {\n        var ctx = this._ctx;\n        ctx.algorithm = combine(ctx.algorithm, fn);\n    }\n    _iterate(fn, coreTrans) {\n        return iter(this._ctx, fn, coreTrans, this._ctx.table.core);\n    }\n    clone(props) {\n        var rv = Object.create(this.constructor.prototype), ctx = Object.create(this._ctx);\n        if (props)\n            extend(ctx, props);\n        rv._ctx = ctx;\n        return rv;\n    }\n    raw() {\n        this._ctx.valueMapper = null;\n        return this;\n    }\n    each(fn) {\n        var ctx = this._ctx;\n        return this._read(trans => iter(ctx, fn, trans, ctx.table.core));\n    }\n    count(cb) {\n        return this._read(trans => {\n            const ctx = this._ctx;\n            const coreTable = ctx.table.core;\n            if (isPlainKeyRange(ctx, true)) {\n                return coreTable.count({\n                    trans,\n                    query: {\n                        index: getIndexOrStore(ctx, coreTable.schema),\n                        range: ctx.range\n                    }\n                }).then(count => Math.min(count, ctx.limit));\n            }\n            else {\n                var count = 0;\n                return iter(ctx, () => { ++count; return false; }, trans, coreTable)\n                    .then(() => count);\n            }\n        }).then(cb);\n    }\n    sortBy(keyPath, cb) {\n        const parts = keyPath.split('.').reverse(), lastPart = parts[0], lastIndex = parts.length - 1;\n        function getval(obj, i) {\n            if (i)\n                return getval(obj[parts[i]], i - 1);\n            return obj[lastPart];\n        }\n        var order = this._ctx.dir === \"next\" ? 1 : -1;\n        function sorter(a, b) {\n            var aVal = getval(a, lastIndex), bVal = getval(b, lastIndex);\n            return aVal < bVal ? -order : aVal > bVal ? order : 0;\n        }\n        return this.toArray(function (a) {\n            return a.sort(sorter);\n        }).then(cb);\n    }\n    toArray(cb) {\n        return this._read(trans => {\n            var ctx = this._ctx;\n            if (ctx.dir === 'next' && isPlainKeyRange(ctx, true) && ctx.limit > 0) {\n                const { valueMapper } = ctx;\n                const index = getIndexOrStore(ctx, ctx.table.core.schema);\n                return ctx.table.core.query({\n                    trans,\n                    limit: ctx.limit,\n                    values: true,\n                    query: {\n                        index,\n                        range: ctx.range\n                    }\n                }).then(({ result }) => valueMapper ? result.map(valueMapper) : result);\n            }\n            else {\n                const a = [];\n                return iter(ctx, item => a.push(item), trans, ctx.table.core).then(() => a);\n            }\n        }, cb);\n    }\n    offset(offset) {\n        var ctx = this._ctx;\n        if (offset <= 0)\n            return this;\n        ctx.offset += offset;\n        if (isPlainKeyRange(ctx)) {\n            addReplayFilter(ctx, () => {\n                var offsetLeft = offset;\n                return (cursor, advance) => {\n                    if (offsetLeft === 0)\n                        return true;\n                    if (offsetLeft === 1) {\n                        --offsetLeft;\n                        return false;\n                    }\n                    advance(() => {\n                        cursor.advance(offsetLeft);\n                        offsetLeft = 0;\n                    });\n                    return false;\n                };\n            });\n        }\n        else {\n            addReplayFilter(ctx, () => {\n                var offsetLeft = offset;\n                return () => (--offsetLeft < 0);\n            });\n        }\n        return this;\n    }\n    limit(numRows) {\n        this._ctx.limit = Math.min(this._ctx.limit, numRows);\n        addReplayFilter(this._ctx, () => {\n            var rowsLeft = numRows;\n            return function (cursor, advance, resolve) {\n                if (--rowsLeft <= 0)\n                    advance(resolve);\n                return rowsLeft >= 0;\n            };\n        }, true);\n        return this;\n    }\n    until(filterFunction, bIncludeStopEntry) {\n        addFilter(this._ctx, function (cursor, advance, resolve) {\n            if (filterFunction(cursor.value)) {\n                advance(resolve);\n                return bIncludeStopEntry;\n            }\n            else {\n                return true;\n            }\n        });\n        return this;\n    }\n    first(cb) {\n        return this.limit(1).toArray(function (a) { return a[0]; }).then(cb);\n    }\n    last(cb) {\n        return this.reverse().first(cb);\n    }\n    filter(filterFunction) {\n        addFilter(this._ctx, function (cursor) {\n            return filterFunction(cursor.value);\n        });\n        addMatchFilter(this._ctx, filterFunction);\n        return this;\n    }\n    and(filter) {\n        return this.filter(filter);\n    }\n    or(indexName) {\n        return new this.db.WhereClause(this._ctx.table, indexName, this);\n    }\n    reverse() {\n        this._ctx.dir = (this._ctx.dir === \"prev\" ? \"next\" : \"prev\");\n        if (this._ondirectionchange)\n            this._ondirectionchange(this._ctx.dir);\n        return this;\n    }\n    desc() {\n        return this.reverse();\n    }\n    eachKey(cb) {\n        var ctx = this._ctx;\n        ctx.keysOnly = !ctx.isMatch;\n        return this.each(function (val, cursor) { cb(cursor.key, cursor); });\n    }\n    eachUniqueKey(cb) {\n        this._ctx.unique = \"unique\";\n        return this.eachKey(cb);\n    }\n    eachPrimaryKey(cb) {\n        var ctx = this._ctx;\n        ctx.keysOnly = !ctx.isMatch;\n        return this.each(function (val, cursor) { cb(cursor.primaryKey, cursor); });\n    }\n    keys(cb) {\n        var ctx = this._ctx;\n        ctx.keysOnly = !ctx.isMatch;\n        var a = [];\n        return this.each(function (item, cursor) {\n            a.push(cursor.key);\n        }).then(function () {\n            return a;\n        }).then(cb);\n    }\n    primaryKeys(cb) {\n        var ctx = this._ctx;\n        if (ctx.dir === 'next' && isPlainKeyRange(ctx, true) && ctx.limit > 0) {\n            return this._read(trans => {\n                var index = getIndexOrStore(ctx, ctx.table.core.schema);\n                return ctx.table.core.query({\n                    trans,\n                    values: false,\n                    limit: ctx.limit,\n                    query: {\n                        index,\n                        range: ctx.range\n                    }\n                });\n            }).then(({ result }) => result).then(cb);\n        }\n        ctx.keysOnly = !ctx.isMatch;\n        var a = [];\n        return this.each(function (item, cursor) {\n            a.push(cursor.primaryKey);\n        }).then(function () {\n            return a;\n        }).then(cb);\n    }\n    uniqueKeys(cb) {\n        this._ctx.unique = \"unique\";\n        return this.keys(cb);\n    }\n    firstKey(cb) {\n        return this.limit(1).keys(function (a) { return a[0]; }).then(cb);\n    }\n    lastKey(cb) {\n        return this.reverse().firstKey(cb);\n    }\n    distinct() {\n        var ctx = this._ctx, idx = ctx.index && ctx.table.schema.idxByName[ctx.index];\n        if (!idx || !idx.multi)\n            return this;\n        var set = {};\n        addFilter(this._ctx, function (cursor) {\n            var strKey = cursor.primaryKey.toString();\n            var found = hasOwn(set, strKey);\n            set[strKey] = true;\n            return !found;\n        });\n        return this;\n    }\n    modify(changes) {\n        var ctx = this._ctx;\n        return this._write(trans => {\n            var modifyer;\n            if (typeof changes === 'function') {\n                modifyer = changes;\n            }\n            else {\n                var keyPaths = keys(changes);\n                var numKeys = keyPaths.length;\n                modifyer = function (item) {\n                    var anythingModified = false;\n                    for (var i = 0; i < numKeys; ++i) {\n                        var keyPath = keyPaths[i], val = changes[keyPath];\n                        if (getByKeyPath(item, keyPath) !== val) {\n                            setByKeyPath(item, keyPath, val);\n                            anythingModified = true;\n                        }\n                    }\n                    return anythingModified;\n                };\n            }\n            const coreTable = ctx.table.core;\n            const { outbound, extractKey } = coreTable.schema.primaryKey;\n            const limit = this.db._options.modifyChunkSize || 200;\n            const totalFailures = [];\n            let successCount = 0;\n            const failedKeys = [];\n            const applyMutateResult = (expectedCount, res) => {\n                const { failures, numFailures } = res;\n                successCount += expectedCount - numFailures;\n                for (let pos of keys(failures)) {\n                    totalFailures.push(failures[pos]);\n                }\n            };\n            return this.clone().primaryKeys().then(keys => {\n                const nextChunk = (offset) => {\n                    const count = Math.min(limit, keys.length - offset);\n                    return coreTable.getMany({\n                        trans,\n                        keys: keys.slice(offset, offset + count),\n                        cache: \"immutable\"\n                    }).then(values => {\n                        const addValues = [];\n                        const putValues = [];\n                        const putKeys = outbound ? [] : null;\n                        const deleteKeys = [];\n                        for (let i = 0; i < count; ++i) {\n                            const origValue = values[i];\n                            const ctx = {\n                                value: deepClone(origValue),\n                                primKey: keys[offset + i]\n                            };\n                            if (modifyer.call(ctx, ctx.value, ctx) !== false) {\n                                if (ctx.value == null) {\n                                    deleteKeys.push(keys[offset + i]);\n                                }\n                                else if (!outbound && cmp(extractKey(origValue), extractKey(ctx.value)) !== 0) {\n                                    deleteKeys.push(keys[offset + i]);\n                                    addValues.push(ctx.value);\n                                }\n                                else {\n                                    putValues.push(ctx.value);\n                                    if (outbound)\n                                        putKeys.push(keys[offset + i]);\n                                }\n                            }\n                        }\n                        const criteria = isPlainKeyRange(ctx) &&\n                            ctx.limit === Infinity &&\n                            (typeof changes !== 'function' || changes === deleteCallback) && {\n                            index: ctx.index,\n                            range: ctx.range\n                        };\n                        return Promise.resolve(addValues.length > 0 &&\n                            coreTable.mutate({ trans, type: 'add', values: addValues })\n                                .then(res => {\n                                for (let pos in res.failures) {\n                                    deleteKeys.splice(parseInt(pos), 1);\n                                }\n                                applyMutateResult(addValues.length, res);\n                            })).then(() => (putValues.length > 0 || (criteria && typeof changes === 'object')) &&\n                            coreTable.mutate({\n                                trans,\n                                type: 'put',\n                                keys: putKeys,\n                                values: putValues,\n                                criteria,\n                                changeSpec: typeof changes !== 'function'\n                                    && changes\n                            }).then(res => applyMutateResult(putValues.length, res))).then(() => (deleteKeys.length > 0 || (criteria && changes === deleteCallback)) &&\n                            coreTable.mutate({\n                                trans,\n                                type: 'delete',\n                                keys: deleteKeys,\n                                criteria\n                            }).then(res => applyMutateResult(deleteKeys.length, res))).then(() => {\n                            return keys.length > offset + count && nextChunk(offset + limit);\n                        });\n                    });\n                };\n                return nextChunk(0).then(() => {\n                    if (totalFailures.length > 0)\n                        throw new ModifyError(\"Error modifying one or more objects\", totalFailures, successCount, failedKeys);\n                    return keys.length;\n                });\n            });\n        });\n    }\n    delete() {\n        var ctx = this._ctx, range = ctx.range;\n        if (isPlainKeyRange(ctx) &&\n            ((ctx.isPrimKey && !hangsOnDeleteLargeKeyRange) || range.type === 3 ))\n         {\n            return this._write(trans => {\n                const { primaryKey } = ctx.table.core.schema;\n                const coreRange = range;\n                return ctx.table.core.count({ trans, query: { index: primaryKey, range: coreRange } }).then(count => {\n                    return ctx.table.core.mutate({ trans, type: 'deleteRange', range: coreRange })\n                        .then(({ failures, lastResult, results, numFailures }) => {\n                        if (numFailures)\n                            throw new ModifyError(\"Could not delete some values\", Object.keys(failures).map(pos => failures[pos]), count - numFailures);\n                        return count - numFailures;\n                    });\n                });\n            });\n        }\n        return this.modify(deleteCallback);\n    }\n}\nconst deleteCallback = (value, ctx) => ctx.value = null;\n\nfunction createCollectionConstructor(db) {\n    return makeClassConstructor(Collection.prototype, function Collection(whereClause, keyRangeGenerator) {\n        this.db = db;\n        let keyRange = AnyRange, error = null;\n        if (keyRangeGenerator)\n            try {\n                keyRange = keyRangeGenerator();\n            }\n            catch (ex) {\n                error = ex;\n            }\n        const whereCtx = whereClause._ctx;\n        const table = whereCtx.table;\n        const readingHook = table.hook.reading.fire;\n        this._ctx = {\n            table: table,\n            index: whereCtx.index,\n            isPrimKey: (!whereCtx.index || (table.schema.primKey.keyPath && whereCtx.index === table.schema.primKey.name)),\n            range: keyRange,\n            keysOnly: false,\n            dir: \"next\",\n            unique: \"\",\n            algorithm: null,\n            filter: null,\n            replayFilter: null,\n            justLimit: true,\n            isMatch: null,\n            offset: 0,\n            limit: Infinity,\n            error: error,\n            or: whereCtx.or,\n            valueMapper: readingHook !== mirror ? readingHook : null\n        };\n    });\n}\n\nfunction simpleCompare(a, b) {\n    return a < b ? -1 : a === b ? 0 : 1;\n}\nfunction simpleCompareReverse(a, b) {\n    return a > b ? -1 : a === b ? 0 : 1;\n}\n\nfunction fail(collectionOrWhereClause, err, T) {\n    var collection = collectionOrWhereClause instanceof WhereClause ?\n        new collectionOrWhereClause.Collection(collectionOrWhereClause) :\n        collectionOrWhereClause;\n    collection._ctx.error = T ? new T(err) : new TypeError(err);\n    return collection;\n}\nfunction emptyCollection(whereClause) {\n    return new whereClause.Collection(whereClause, () => rangeEqual(\"\")).limit(0);\n}\nfunction upperFactory(dir) {\n    return dir === \"next\" ?\n        (s) => s.toUpperCase() :\n        (s) => s.toLowerCase();\n}\nfunction lowerFactory(dir) {\n    return dir === \"next\" ?\n        (s) => s.toLowerCase() :\n        (s) => s.toUpperCase();\n}\nfunction nextCasing(key, lowerKey, upperNeedle, lowerNeedle, cmp, dir) {\n    var length = Math.min(key.length, lowerNeedle.length);\n    var llp = -1;\n    for (var i = 0; i < length; ++i) {\n        var lwrKeyChar = lowerKey[i];\n        if (lwrKeyChar !== lowerNeedle[i]) {\n            if (cmp(key[i], upperNeedle[i]) < 0)\n                return key.substr(0, i) + upperNeedle[i] + upperNeedle.substr(i + 1);\n            if (cmp(key[i], lowerNeedle[i]) < 0)\n                return key.substr(0, i) + lowerNeedle[i] + upperNeedle.substr(i + 1);\n            if (llp >= 0)\n                return key.substr(0, llp) + lowerKey[llp] + upperNeedle.substr(llp + 1);\n            return null;\n        }\n        if (cmp(key[i], lwrKeyChar) < 0)\n            llp = i;\n    }\n    if (length < lowerNeedle.length && dir === \"next\")\n        return key + upperNeedle.substr(key.length);\n    if (length < key.length && dir === \"prev\")\n        return key.substr(0, upperNeedle.length);\n    return (llp < 0 ? null : key.substr(0, llp) + lowerNeedle[llp] + upperNeedle.substr(llp + 1));\n}\nfunction addIgnoreCaseAlgorithm(whereClause, match, needles, suffix) {\n    var upper, lower, compare, upperNeedles, lowerNeedles, direction, nextKeySuffix, needlesLen = needles.length;\n    if (!needles.every(s => typeof s === 'string')) {\n        return fail(whereClause, STRING_EXPECTED);\n    }\n    function initDirection(dir) {\n        upper = upperFactory(dir);\n        lower = lowerFactory(dir);\n        compare = (dir === \"next\" ? simpleCompare : simpleCompareReverse);\n        var needleBounds = needles.map(function (needle) {\n            return { lower: lower(needle), upper: upper(needle) };\n        }).sort(function (a, b) {\n            return compare(a.lower, b.lower);\n        });\n        upperNeedles = needleBounds.map(function (nb) { return nb.upper; });\n        lowerNeedles = needleBounds.map(function (nb) { return nb.lower; });\n        direction = dir;\n        nextKeySuffix = (dir === \"next\" ? \"\" : suffix);\n    }\n    initDirection(\"next\");\n    var c = new whereClause.Collection(whereClause, () => createRange(upperNeedles[0], lowerNeedles[needlesLen - 1] + suffix));\n    c._ondirectionchange = function (direction) {\n        initDirection(direction);\n    };\n    var firstPossibleNeedle = 0;\n    c._addAlgorithm(function (cursor, advance, resolve) {\n        var key = cursor.key;\n        if (typeof key !== 'string')\n            return false;\n        var lowerKey = lower(key);\n        if (match(lowerKey, lowerNeedles, firstPossibleNeedle)) {\n            return true;\n        }\n        else {\n            var lowestPossibleCasing = null;\n            for (var i = firstPossibleNeedle; i < needlesLen; ++i) {\n                var casing = nextCasing(key, lowerKey, upperNeedles[i], lowerNeedles[i], compare, direction);\n                if (casing === null && lowestPossibleCasing === null)\n                    firstPossibleNeedle = i + 1;\n                else if (lowestPossibleCasing === null || compare(lowestPossibleCasing, casing) > 0) {\n                    lowestPossibleCasing = casing;\n                }\n            }\n            if (lowestPossibleCasing !== null) {\n                advance(function () { cursor.continue(lowestPossibleCasing + nextKeySuffix); });\n            }\n            else {\n                advance(resolve);\n            }\n            return false;\n        }\n    });\n    return c;\n}\nfunction createRange(lower, upper, lowerOpen, upperOpen) {\n    return {\n        type: 2 ,\n        lower,\n        upper,\n        lowerOpen,\n        upperOpen\n    };\n}\nfunction rangeEqual(value) {\n    return {\n        type: 1 ,\n        lower: value,\n        upper: value\n    };\n}\n\nclass WhereClause {\n    get Collection() {\n        return this._ctx.table.db.Collection;\n    }\n    between(lower, upper, includeLower, includeUpper) {\n        includeLower = includeLower !== false;\n        includeUpper = includeUpper === true;\n        try {\n            if ((this._cmp(lower, upper) > 0) ||\n                (this._cmp(lower, upper) === 0 && (includeLower || includeUpper) && !(includeLower && includeUpper)))\n                return emptyCollection(this);\n            return new this.Collection(this, () => createRange(lower, upper, !includeLower, !includeUpper));\n        }\n        catch (e) {\n            return fail(this, INVALID_KEY_ARGUMENT);\n        }\n    }\n    equals(value) {\n        if (value == null)\n            return fail(this, INVALID_KEY_ARGUMENT);\n        return new this.Collection(this, () => rangeEqual(value));\n    }\n    above(value) {\n        if (value == null)\n            return fail(this, INVALID_KEY_ARGUMENT);\n        return new this.Collection(this, () => createRange(value, undefined, true));\n    }\n    aboveOrEqual(value) {\n        if (value == null)\n            return fail(this, INVALID_KEY_ARGUMENT);\n        return new this.Collection(this, () => createRange(value, undefined, false));\n    }\n    below(value) {\n        if (value == null)\n            return fail(this, INVALID_KEY_ARGUMENT);\n        return new this.Collection(this, () => createRange(undefined, value, false, true));\n    }\n    belowOrEqual(value) {\n        if (value == null)\n            return fail(this, INVALID_KEY_ARGUMENT);\n        return new this.Collection(this, () => createRange(undefined, value));\n    }\n    startsWith(str) {\n        if (typeof str !== 'string')\n            return fail(this, STRING_EXPECTED);\n        return this.between(str, str + maxString, true, true);\n    }\n    startsWithIgnoreCase(str) {\n        if (str === \"\")\n            return this.startsWith(str);\n        return addIgnoreCaseAlgorithm(this, (x, a) => x.indexOf(a[0]) === 0, [str], maxString);\n    }\n    equalsIgnoreCase(str) {\n        return addIgnoreCaseAlgorithm(this, (x, a) => x === a[0], [str], \"\");\n    }\n    anyOfIgnoreCase() {\n        var set = getArrayOf.apply(NO_CHAR_ARRAY, arguments);\n        if (set.length === 0)\n            return emptyCollection(this);\n        return addIgnoreCaseAlgorithm(this, (x, a) => a.indexOf(x) !== -1, set, \"\");\n    }\n    startsWithAnyOfIgnoreCase() {\n        var set = getArrayOf.apply(NO_CHAR_ARRAY, arguments);\n        if (set.length === 0)\n            return emptyCollection(this);\n        return addIgnoreCaseAlgorithm(this, (x, a) => a.some(n => x.indexOf(n) === 0), set, maxString);\n    }\n    anyOf() {\n        const set = getArrayOf.apply(NO_CHAR_ARRAY, arguments);\n        let compare = this._cmp;\n        try {\n            set.sort(compare);\n        }\n        catch (e) {\n            return fail(this, INVALID_KEY_ARGUMENT);\n        }\n        if (set.length === 0)\n            return emptyCollection(this);\n        const c = new this.Collection(this, () => createRange(set[0], set[set.length - 1]));\n        c._ondirectionchange = direction => {\n            compare = (direction === \"next\" ?\n                this._ascending :\n                this._descending);\n            set.sort(compare);\n        };\n        let i = 0;\n        c._addAlgorithm((cursor, advance, resolve) => {\n            const key = cursor.key;\n            while (compare(key, set[i]) > 0) {\n                ++i;\n                if (i === set.length) {\n                    advance(resolve);\n                    return false;\n                }\n            }\n            if (compare(key, set[i]) === 0) {\n                return true;\n            }\n            else {\n                advance(() => { cursor.continue(set[i]); });\n                return false;\n            }\n        });\n        return c;\n    }\n    notEqual(value) {\n        return this.inAnyRange([[minKey, value], [value, this.db._maxKey]], { includeLowers: false, includeUppers: false });\n    }\n    noneOf() {\n        const set = getArrayOf.apply(NO_CHAR_ARRAY, arguments);\n        if (set.length === 0)\n            return new this.Collection(this);\n        try {\n            set.sort(this._ascending);\n        }\n        catch (e) {\n            return fail(this, INVALID_KEY_ARGUMENT);\n        }\n        const ranges = set.reduce((res, val) => res ?\n            res.concat([[res[res.length - 1][1], val]]) :\n            [[minKey, val]], null);\n        ranges.push([set[set.length - 1], this.db._maxKey]);\n        return this.inAnyRange(ranges, { includeLowers: false, includeUppers: false });\n    }\n    inAnyRange(ranges, options) {\n        const cmp = this._cmp, ascending = this._ascending, descending = this._descending, min = this._min, max = this._max;\n        if (ranges.length === 0)\n            return emptyCollection(this);\n        if (!ranges.every(range => range[0] !== undefined &&\n            range[1] !== undefined &&\n            ascending(range[0], range[1]) <= 0)) {\n            return fail(this, \"First argument to inAnyRange() must be an Array of two-value Arrays [lower,upper] where upper must not be lower than lower\", exceptions.InvalidArgument);\n        }\n        const includeLowers = !options || options.includeLowers !== false;\n        const includeUppers = options && options.includeUppers === true;\n        function addRange(ranges, newRange) {\n            let i = 0, l = ranges.length;\n            for (; i < l; ++i) {\n                const range = ranges[i];\n                if (cmp(newRange[0], range[1]) < 0 && cmp(newRange[1], range[0]) > 0) {\n                    range[0] = min(range[0], newRange[0]);\n                    range[1] = max(range[1], newRange[1]);\n                    break;\n                }\n            }\n            if (i === l)\n                ranges.push(newRange);\n            return ranges;\n        }\n        let sortDirection = ascending;\n        function rangeSorter(a, b) { return sortDirection(a[0], b[0]); }\n        let set;\n        try {\n            set = ranges.reduce(addRange, []);\n            set.sort(rangeSorter);\n        }\n        catch (ex) {\n            return fail(this, INVALID_KEY_ARGUMENT);\n        }\n        let rangePos = 0;\n        const keyIsBeyondCurrentEntry = includeUppers ?\n            key => ascending(key, set[rangePos][1]) > 0 :\n            key => ascending(key, set[rangePos][1]) >= 0;\n        const keyIsBeforeCurrentEntry = includeLowers ?\n            key => descending(key, set[rangePos][0]) > 0 :\n            key => descending(key, set[rangePos][0]) >= 0;\n        function keyWithinCurrentRange(key) {\n            return !keyIsBeyondCurrentEntry(key) && !keyIsBeforeCurrentEntry(key);\n        }\n        let checkKey = keyIsBeyondCurrentEntry;\n        const c = new this.Collection(this, () => createRange(set[0][0], set[set.length - 1][1], !includeLowers, !includeUppers));\n        c._ondirectionchange = direction => {\n            if (direction === \"next\") {\n                checkKey = keyIsBeyondCurrentEntry;\n                sortDirection = ascending;\n            }\n            else {\n                checkKey = keyIsBeforeCurrentEntry;\n                sortDirection = descending;\n            }\n            set.sort(rangeSorter);\n        };\n        c._addAlgorithm((cursor, advance, resolve) => {\n            var key = cursor.key;\n            while (checkKey(key)) {\n                ++rangePos;\n                if (rangePos === set.length) {\n                    advance(resolve);\n                    return false;\n                }\n            }\n            if (keyWithinCurrentRange(key)) {\n                return true;\n            }\n            else if (this._cmp(key, set[rangePos][1]) === 0 || this._cmp(key, set[rangePos][0]) === 0) {\n                return false;\n            }\n            else {\n                advance(() => {\n                    if (sortDirection === ascending)\n                        cursor.continue(set[rangePos][0]);\n                    else\n                        cursor.continue(set[rangePos][1]);\n                });\n                return false;\n            }\n        });\n        return c;\n    }\n    startsWithAnyOf() {\n        const set = getArrayOf.apply(NO_CHAR_ARRAY, arguments);\n        if (!set.every(s => typeof s === 'string')) {\n            return fail(this, \"startsWithAnyOf() only works with strings\");\n        }\n        if (set.length === 0)\n            return emptyCollection(this);\n        return this.inAnyRange(set.map((str) => [str, str + maxString]));\n    }\n}\n\nfunction createWhereClauseConstructor(db) {\n    return makeClassConstructor(WhereClause.prototype, function WhereClause(table, index, orCollection) {\n        this.db = db;\n        this._ctx = {\n            table: table,\n            index: index === \":id\" ? null : index,\n            or: orCollection\n        };\n        const indexedDB = db._deps.indexedDB;\n        if (!indexedDB)\n            throw new exceptions.MissingAPI();\n        this._cmp = this._ascending = indexedDB.cmp.bind(indexedDB);\n        this._descending = (a, b) => indexedDB.cmp(b, a);\n        this._max = (a, b) => indexedDB.cmp(a, b) > 0 ? a : b;\n        this._min = (a, b) => indexedDB.cmp(a, b) < 0 ? a : b;\n        this._IDBKeyRange = db._deps.IDBKeyRange;\n    });\n}\n\nfunction eventRejectHandler(reject) {\n    return wrap(function (event) {\n        preventDefault(event);\n        reject(event.target.error);\n        return false;\n    });\n}\nfunction preventDefault(event) {\n    if (event.stopPropagation)\n        event.stopPropagation();\n    if (event.preventDefault)\n        event.preventDefault();\n}\n\nconst DEXIE_STORAGE_MUTATED_EVENT_NAME = 'storagemutated';\nconst STORAGE_MUTATED_DOM_EVENT_NAME = 'x-storagemutated-1';\nconst globalEvents = Events(null, DEXIE_STORAGE_MUTATED_EVENT_NAME);\n\nclass Transaction {\n    _lock() {\n        assert(!PSD.global);\n        ++this._reculock;\n        if (this._reculock === 1 && !PSD.global)\n            PSD.lockOwnerFor = this;\n        return this;\n    }\n    _unlock() {\n        assert(!PSD.global);\n        if (--this._reculock === 0) {\n            if (!PSD.global)\n                PSD.lockOwnerFor = null;\n            while (this._blockedFuncs.length > 0 && !this._locked()) {\n                var fnAndPSD = this._blockedFuncs.shift();\n                try {\n                    usePSD(fnAndPSD[1], fnAndPSD[0]);\n                }\n                catch (e) { }\n            }\n        }\n        return this;\n    }\n    _locked() {\n        return this._reculock && PSD.lockOwnerFor !== this;\n    }\n    create(idbtrans) {\n        if (!this.mode)\n            return this;\n        const idbdb = this.db.idbdb;\n        const dbOpenError = this.db._state.dbOpenError;\n        assert(!this.idbtrans);\n        if (!idbtrans && !idbdb) {\n            switch (dbOpenError && dbOpenError.name) {\n                case \"DatabaseClosedError\":\n                    throw new exceptions.DatabaseClosed(dbOpenError);\n                case \"MissingAPIError\":\n                    throw new exceptions.MissingAPI(dbOpenError.message, dbOpenError);\n                default:\n                    throw new exceptions.OpenFailed(dbOpenError);\n            }\n        }\n        if (!this.active)\n            throw new exceptions.TransactionInactive();\n        assert(this._completion._state === null);\n        idbtrans = this.idbtrans = idbtrans ||\n            (this.db.core\n                ? this.db.core.transaction(this.storeNames, this.mode, { durability: this.chromeTransactionDurability })\n                : idbdb.transaction(this.storeNames, this.mode, { durability: this.chromeTransactionDurability }));\n        idbtrans.onerror = wrap(ev => {\n            preventDefault(ev);\n            this._reject(idbtrans.error);\n        });\n        idbtrans.onabort = wrap(ev => {\n            preventDefault(ev);\n            this.active && this._reject(new exceptions.Abort(idbtrans.error));\n            this.active = false;\n            this.on(\"abort\").fire(ev);\n        });\n        idbtrans.oncomplete = wrap(() => {\n            this.active = false;\n            this._resolve();\n            if ('mutatedParts' in idbtrans) {\n                globalEvents.storagemutated.fire(idbtrans[\"mutatedParts\"]);\n            }\n        });\n        return this;\n    }\n    _promise(mode, fn, bWriteLock) {\n        if (mode === 'readwrite' && this.mode !== 'readwrite')\n            return rejection(new exceptions.ReadOnly(\"Transaction is readonly\"));\n        if (!this.active)\n            return rejection(new exceptions.TransactionInactive());\n        if (this._locked()) {\n            return new DexiePromise((resolve, reject) => {\n                this._blockedFuncs.push([() => {\n                        this._promise(mode, fn, bWriteLock).then(resolve, reject);\n                    }, PSD]);\n            });\n        }\n        else if (bWriteLock) {\n            return newScope(() => {\n                var p = new DexiePromise((resolve, reject) => {\n                    this._lock();\n                    const rv = fn(resolve, reject, this);\n                    if (rv && rv.then)\n                        rv.then(resolve, reject);\n                });\n                p.finally(() => this._unlock());\n                p._lib = true;\n                return p;\n            });\n        }\n        else {\n            var p = new DexiePromise((resolve, reject) => {\n                var rv = fn(resolve, reject, this);\n                if (rv && rv.then)\n                    rv.then(resolve, reject);\n            });\n            p._lib = true;\n            return p;\n        }\n    }\n    _root() {\n        return this.parent ? this.parent._root() : this;\n    }\n    waitFor(promiseLike) {\n        var root = this._root();\n        const promise = DexiePromise.resolve(promiseLike);\n        if (root._waitingFor) {\n            root._waitingFor = root._waitingFor.then(() => promise);\n        }\n        else {\n            root._waitingFor = promise;\n            root._waitingQueue = [];\n            var store = root.idbtrans.objectStore(root.storeNames[0]);\n            (function spin() {\n                ++root._spinCount;\n                while (root._waitingQueue.length)\n                    (root._waitingQueue.shift())();\n                if (root._waitingFor)\n                    store.get(-Infinity).onsuccess = spin;\n            }());\n        }\n        var currentWaitPromise = root._waitingFor;\n        return new DexiePromise((resolve, reject) => {\n            promise.then(res => root._waitingQueue.push(wrap(resolve.bind(null, res))), err => root._waitingQueue.push(wrap(reject.bind(null, err)))).finally(() => {\n                if (root._waitingFor === currentWaitPromise) {\n                    root._waitingFor = null;\n                }\n            });\n        });\n    }\n    abort() {\n        if (this.active) {\n            this.active = false;\n            if (this.idbtrans)\n                this.idbtrans.abort();\n            this._reject(new exceptions.Abort());\n        }\n    }\n    table(tableName) {\n        const memoizedTables = (this._memoizedTables || (this._memoizedTables = {}));\n        if (hasOwn(memoizedTables, tableName))\n            return memoizedTables[tableName];\n        const tableSchema = this.schema[tableName];\n        if (!tableSchema) {\n            throw new exceptions.NotFound(\"Table \" + tableName + \" not part of transaction\");\n        }\n        const transactionBoundTable = new this.db.Table(tableName, tableSchema, this);\n        transactionBoundTable.core = this.db.core.table(tableName);\n        memoizedTables[tableName] = transactionBoundTable;\n        return transactionBoundTable;\n    }\n}\n\nfunction createTransactionConstructor(db) {\n    return makeClassConstructor(Transaction.prototype, function Transaction(mode, storeNames, dbschema, chromeTransactionDurability, parent) {\n        this.db = db;\n        this.mode = mode;\n        this.storeNames = storeNames;\n        this.schema = dbschema;\n        this.chromeTransactionDurability = chromeTransactionDurability;\n        this.idbtrans = null;\n        this.on = Events(this, \"complete\", \"error\", \"abort\");\n        this.parent = parent || null;\n        this.active = true;\n        this._reculock = 0;\n        this._blockedFuncs = [];\n        this._resolve = null;\n        this._reject = null;\n        this._waitingFor = null;\n        this._waitingQueue = null;\n        this._spinCount = 0;\n        this._completion = new DexiePromise((resolve, reject) => {\n            this._resolve = resolve;\n            this._reject = reject;\n        });\n        this._completion.then(() => {\n            this.active = false;\n            this.on.complete.fire();\n        }, e => {\n            var wasActive = this.active;\n            this.active = false;\n            this.on.error.fire(e);\n            this.parent ?\n                this.parent._reject(e) :\n                wasActive && this.idbtrans && this.idbtrans.abort();\n            return rejection(e);\n        });\n    });\n}\n\nfunction createIndexSpec(name, keyPath, unique, multi, auto, compound, isPrimKey) {\n    return {\n        name,\n        keyPath,\n        unique,\n        multi,\n        auto,\n        compound,\n        src: (unique && !isPrimKey ? '&' : '') + (multi ? '*' : '') + (auto ? \"++\" : \"\") + nameFromKeyPath(keyPath)\n    };\n}\nfunction nameFromKeyPath(keyPath) {\n    return typeof keyPath === 'string' ?\n        keyPath :\n        keyPath ? ('[' + [].join.call(keyPath, '+') + ']') : \"\";\n}\n\nfunction createTableSchema(name, primKey, indexes) {\n    return {\n        name,\n        primKey,\n        indexes,\n        mappedClass: null,\n        idxByName: arrayToObject(indexes, index => [index.name, index])\n    };\n}\n\nfunction safariMultiStoreFix(storeNames) {\n    return storeNames.length === 1 ? storeNames[0] : storeNames;\n}\nlet getMaxKey = (IdbKeyRange) => {\n    try {\n        IdbKeyRange.only([[]]);\n        getMaxKey = () => [[]];\n        return [[]];\n    }\n    catch (e) {\n        getMaxKey = () => maxString;\n        return maxString;\n    }\n};\n\nfunction getKeyExtractor(keyPath) {\n    if (keyPath == null) {\n        return () => undefined;\n    }\n    else if (typeof keyPath === 'string') {\n        return getSinglePathKeyExtractor(keyPath);\n    }\n    else {\n        return obj => getByKeyPath(obj, keyPath);\n    }\n}\nfunction getSinglePathKeyExtractor(keyPath) {\n    const split = keyPath.split('.');\n    if (split.length === 1) {\n        return obj => obj[keyPath];\n    }\n    else {\n        return obj => getByKeyPath(obj, keyPath);\n    }\n}\n\nfunction arrayify(arrayLike) {\n    return [].slice.call(arrayLike);\n}\nlet _id_counter = 0;\nfunction getKeyPathAlias(keyPath) {\n    return keyPath == null ?\n        \":id\" :\n        typeof keyPath === 'string' ?\n            keyPath :\n            `[${keyPath.join('+')}]`;\n}\nfunction createDBCore(db, IdbKeyRange, tmpTrans) {\n    function extractSchema(db, trans) {\n        const tables = arrayify(db.objectStoreNames);\n        return {\n            schema: {\n                name: db.name,\n                tables: tables.map(table => trans.objectStore(table)).map(store => {\n                    const { keyPath, autoIncrement } = store;\n                    const compound = isArray(keyPath);\n                    const outbound = keyPath == null;\n                    const indexByKeyPath = {};\n                    const result = {\n                        name: store.name,\n                        primaryKey: {\n                            name: null,\n                            isPrimaryKey: true,\n                            outbound,\n                            compound,\n                            keyPath,\n                            autoIncrement,\n                            unique: true,\n                            extractKey: getKeyExtractor(keyPath)\n                        },\n                        indexes: arrayify(store.indexNames).map(indexName => store.index(indexName))\n                            .map(index => {\n                            const { name, unique, multiEntry, keyPath } = index;\n                            const compound = isArray(keyPath);\n                            const result = {\n                                name,\n                                compound,\n                                keyPath,\n                                unique,\n                                multiEntry,\n                                extractKey: getKeyExtractor(keyPath)\n                            };\n                            indexByKeyPath[getKeyPathAlias(keyPath)] = result;\n                            return result;\n                        }),\n                        getIndexByKeyPath: (keyPath) => indexByKeyPath[getKeyPathAlias(keyPath)]\n                    };\n                    indexByKeyPath[\":id\"] = result.primaryKey;\n                    if (keyPath != null) {\n                        indexByKeyPath[getKeyPathAlias(keyPath)] = result.primaryKey;\n                    }\n                    return result;\n                })\n            },\n            hasGetAll: tables.length > 0 && ('getAll' in trans.objectStore(tables[0])) &&\n                !(typeof navigator !== 'undefined' && /Safari/.test(navigator.userAgent) &&\n                    !/(Chrome\\/|Edge\\/)/.test(navigator.userAgent) &&\n                    [].concat(navigator.userAgent.match(/Safari\\/(\\d*)/))[1] < 604)\n        };\n    }\n    function makeIDBKeyRange(range) {\n        if (range.type === 3 )\n            return null;\n        if (range.type === 4 )\n            throw new Error(\"Cannot convert never type to IDBKeyRange\");\n        const { lower, upper, lowerOpen, upperOpen } = range;\n        const idbRange = lower === undefined ?\n            upper === undefined ?\n                null :\n                IdbKeyRange.upperBound(upper, !!upperOpen) :\n            upper === undefined ?\n                IdbKeyRange.lowerBound(lower, !!lowerOpen) :\n                IdbKeyRange.bound(lower, upper, !!lowerOpen, !!upperOpen);\n        return idbRange;\n    }\n    function createDbCoreTable(tableSchema) {\n        const tableName = tableSchema.name;\n        function mutate({ trans, type, keys, values, range }) {\n            return new Promise((resolve, reject) => {\n                resolve = wrap(resolve);\n                const store = trans.objectStore(tableName);\n                const outbound = store.keyPath == null;\n                const isAddOrPut = type === \"put\" || type === \"add\";\n                if (!isAddOrPut && type !== 'delete' && type !== 'deleteRange')\n                    throw new Error(\"Invalid operation type: \" + type);\n                const { length } = keys || values || { length: 1 };\n                if (keys && values && keys.length !== values.length) {\n                    throw new Error(\"Given keys array must have same length as given values array.\");\n                }\n                if (length === 0)\n                    return resolve({ numFailures: 0, failures: {}, results: [], lastResult: undefined });\n                let req;\n                const reqs = [];\n                const failures = [];\n                let numFailures = 0;\n                const errorHandler = event => {\n                    ++numFailures;\n                    preventDefault(event);\n                };\n                if (type === 'deleteRange') {\n                    if (range.type === 4 )\n                        return resolve({ numFailures, failures, results: [], lastResult: undefined });\n                    if (range.type === 3 )\n                        reqs.push(req = store.clear());\n                    else\n                        reqs.push(req = store.delete(makeIDBKeyRange(range)));\n                }\n                else {\n                    const [args1, args2] = isAddOrPut ?\n                        outbound ?\n                            [values, keys] :\n                            [values, null] :\n                        [keys, null];\n                    if (isAddOrPut) {\n                        for (let i = 0; i < length; ++i) {\n                            reqs.push(req = (args2 && args2[i] !== undefined ?\n                                store[type](args1[i], args2[i]) :\n                                store[type](args1[i])));\n                            req.onerror = errorHandler;\n                        }\n                    }\n                    else {\n                        for (let i = 0; i < length; ++i) {\n                            reqs.push(req = store[type](args1[i]));\n                            req.onerror = errorHandler;\n                        }\n                    }\n                }\n                const done = event => {\n                    const lastResult = event.target.result;\n                    reqs.forEach((req, i) => req.error != null && (failures[i] = req.error));\n                    resolve({\n                        numFailures,\n                        failures,\n                        results: type === \"delete\" ? keys : reqs.map(req => req.result),\n                        lastResult\n                    });\n                };\n                req.onerror = event => {\n                    errorHandler(event);\n                    done(event);\n                };\n                req.onsuccess = done;\n            });\n        }\n        function openCursor({ trans, values, query, reverse, unique }) {\n            return new Promise((resolve, reject) => {\n                resolve = wrap(resolve);\n                const { index, range } = query;\n                const store = trans.objectStore(tableName);\n                const source = index.isPrimaryKey ?\n                    store :\n                    store.index(index.name);\n                const direction = reverse ?\n                    unique ?\n                        \"prevunique\" :\n                        \"prev\" :\n                    unique ?\n                        \"nextunique\" :\n                        \"next\";\n                const req = values || !('openKeyCursor' in source) ?\n                    source.openCursor(makeIDBKeyRange(range), direction) :\n                    source.openKeyCursor(makeIDBKeyRange(range), direction);\n                req.onerror = eventRejectHandler(reject);\n                req.onsuccess = wrap(ev => {\n                    const cursor = req.result;\n                    if (!cursor) {\n                        resolve(null);\n                        return;\n                    }\n                    cursor.___id = ++_id_counter;\n                    cursor.done = false;\n                    const _cursorContinue = cursor.continue.bind(cursor);\n                    let _cursorContinuePrimaryKey = cursor.continuePrimaryKey;\n                    if (_cursorContinuePrimaryKey)\n                        _cursorContinuePrimaryKey = _cursorContinuePrimaryKey.bind(cursor);\n                    const _cursorAdvance = cursor.advance.bind(cursor);\n                    const doThrowCursorIsNotStarted = () => { throw new Error(\"Cursor not started\"); };\n                    const doThrowCursorIsStopped = () => { throw new Error(\"Cursor not stopped\"); };\n                    cursor.trans = trans;\n                    cursor.stop = cursor.continue = cursor.continuePrimaryKey = cursor.advance = doThrowCursorIsNotStarted;\n                    cursor.fail = wrap(reject);\n                    cursor.next = function () {\n                        let gotOne = 1;\n                        return this.start(() => gotOne-- ? this.continue() : this.stop()).then(() => this);\n                    };\n                    cursor.start = (callback) => {\n                        const iterationPromise = new Promise((resolveIteration, rejectIteration) => {\n                            resolveIteration = wrap(resolveIteration);\n                            req.onerror = eventRejectHandler(rejectIteration);\n                            cursor.fail = rejectIteration;\n                            cursor.stop = value => {\n                                cursor.stop = cursor.continue = cursor.continuePrimaryKey = cursor.advance = doThrowCursorIsStopped;\n                                resolveIteration(value);\n                            };\n                        });\n                        const guardedCallback = () => {\n                            if (req.result) {\n                                try {\n                                    callback();\n                                }\n                                catch (err) {\n                                    cursor.fail(err);\n                                }\n                            }\n                            else {\n                                cursor.done = true;\n                                cursor.start = () => { throw new Error(\"Cursor behind last entry\"); };\n                                cursor.stop();\n                            }\n                        };\n                        req.onsuccess = wrap(ev => {\n                            req.onsuccess = guardedCallback;\n                            guardedCallback();\n                        });\n                        cursor.continue = _cursorContinue;\n                        cursor.continuePrimaryKey = _cursorContinuePrimaryKey;\n                        cursor.advance = _cursorAdvance;\n                        guardedCallback();\n                        return iterationPromise;\n                    };\n                    resolve(cursor);\n                }, reject);\n            });\n        }\n        function query(hasGetAll) {\n            return (request) => {\n                return new Promise((resolve, reject) => {\n                    resolve = wrap(resolve);\n                    const { trans, values, limit, query } = request;\n                    const nonInfinitLimit = limit === Infinity ? undefined : limit;\n                    const { index, range } = query;\n                    const store = trans.objectStore(tableName);\n                    const source = index.isPrimaryKey ? store : store.index(index.name);\n                    const idbKeyRange = makeIDBKeyRange(range);\n                    if (limit === 0)\n                        return resolve({ result: [] });\n                    if (hasGetAll) {\n                        const req = values ?\n                            source.getAll(idbKeyRange, nonInfinitLimit) :\n                            source.getAllKeys(idbKeyRange, nonInfinitLimit);\n                        req.onsuccess = event => resolve({ result: event.target.result });\n                        req.onerror = eventRejectHandler(reject);\n                    }\n                    else {\n                        let count = 0;\n                        const req = values || !('openKeyCursor' in source) ?\n                            source.openCursor(idbKeyRange) :\n                            source.openKeyCursor(idbKeyRange);\n                        const result = [];\n                        req.onsuccess = event => {\n                            const cursor = req.result;\n                            if (!cursor)\n                                return resolve({ result });\n                            result.push(values ? cursor.value : cursor.primaryKey);\n                            if (++count === limit)\n                                return resolve({ result });\n                            cursor.continue();\n                        };\n                        req.onerror = eventRejectHandler(reject);\n                    }\n                });\n            };\n        }\n        return {\n            name: tableName,\n            schema: tableSchema,\n            mutate,\n            getMany({ trans, keys }) {\n                return new Promise((resolve, reject) => {\n                    resolve = wrap(resolve);\n                    const store = trans.objectStore(tableName);\n                    const length = keys.length;\n                    const result = new Array(length);\n                    let keyCount = 0;\n                    let callbackCount = 0;\n                    let req;\n                    const successHandler = event => {\n                        const req = event.target;\n                        if ((result[req._pos] = req.result) != null)\n                            ;\n                        if (++callbackCount === keyCount)\n                            resolve(result);\n                    };\n                    const errorHandler = eventRejectHandler(reject);\n                    for (let i = 0; i < length; ++i) {\n                        const key = keys[i];\n                        if (key != null) {\n                            req = store.get(keys[i]);\n                            req._pos = i;\n                            req.onsuccess = successHandler;\n                            req.onerror = errorHandler;\n                            ++keyCount;\n                        }\n                    }\n                    if (keyCount === 0)\n                        resolve(result);\n                });\n            },\n            get({ trans, key }) {\n                return new Promise((resolve, reject) => {\n                    resolve = wrap(resolve);\n                    const store = trans.objectStore(tableName);\n                    const req = store.get(key);\n                    req.onsuccess = event => resolve(event.target.result);\n                    req.onerror = eventRejectHandler(reject);\n                });\n            },\n            query: query(hasGetAll),\n            openCursor,\n            count({ query, trans }) {\n                const { index, range } = query;\n                return new Promise((resolve, reject) => {\n                    const store = trans.objectStore(tableName);\n                    const source = index.isPrimaryKey ? store : store.index(index.name);\n                    const idbKeyRange = makeIDBKeyRange(range);\n                    const req = idbKeyRange ? source.count(idbKeyRange) : source.count();\n                    req.onsuccess = wrap(ev => resolve(ev.target.result));\n                    req.onerror = eventRejectHandler(reject);\n                });\n            }\n        };\n    }\n    const { schema, hasGetAll } = extractSchema(db, tmpTrans);\n    const tables = schema.tables.map(tableSchema => createDbCoreTable(tableSchema));\n    const tableMap = {};\n    tables.forEach(table => tableMap[table.name] = table);\n    return {\n        stack: \"dbcore\",\n        transaction: db.transaction.bind(db),\n        table(name) {\n            const result = tableMap[name];\n            if (!result)\n                throw new Error(`Table '${name}' not found`);\n            return tableMap[name];\n        },\n        MIN_KEY: -Infinity,\n        MAX_KEY: getMaxKey(IdbKeyRange),\n        schema\n    };\n}\n\nfunction createMiddlewareStack(stackImpl, middlewares) {\n    return middlewares.reduce((down, { create }) => ({ ...down, ...create(down) }), stackImpl);\n}\nfunction createMiddlewareStacks(middlewares, idbdb, { IDBKeyRange, indexedDB }, tmpTrans) {\n    const dbcore = createMiddlewareStack(createDBCore(idbdb, IDBKeyRange, tmpTrans), middlewares.dbcore);\n    return {\n        dbcore\n    };\n}\nfunction generateMiddlewareStacks({ _novip: db }, tmpTrans) {\n    const idbdb = tmpTrans.db;\n    const stacks = createMiddlewareStacks(db._middlewares, idbdb, db._deps, tmpTrans);\n    db.core = stacks.dbcore;\n    db.tables.forEach(table => {\n        const tableName = table.name;\n        if (db.core.schema.tables.some(tbl => tbl.name === tableName)) {\n            table.core = db.core.table(tableName);\n            if (db[tableName] instanceof db.Table) {\n                db[tableName].core = table.core;\n            }\n        }\n    });\n}\n\nfunction setApiOnPlace({ _novip: db }, objs, tableNames, dbschema) {\n    tableNames.forEach(tableName => {\n        const schema = dbschema[tableName];\n        objs.forEach(obj => {\n            const propDesc = getPropertyDescriptor(obj, tableName);\n            if (!propDesc || (\"value\" in propDesc && propDesc.value === undefined)) {\n                if (obj === db.Transaction.prototype || obj instanceof db.Transaction) {\n                    setProp(obj, tableName, {\n                        get() { return this.table(tableName); },\n                        set(value) {\n                            defineProperty(this, tableName, { value, writable: true, configurable: true, enumerable: true });\n                        }\n                    });\n                }\n                else {\n                    obj[tableName] = new db.Table(tableName, schema);\n                }\n            }\n        });\n    });\n}\nfunction removeTablesApi({ _novip: db }, objs) {\n    objs.forEach(obj => {\n        for (let key in obj) {\n            if (obj[key] instanceof db.Table)\n                delete obj[key];\n        }\n    });\n}\nfunction lowerVersionFirst(a, b) {\n    return a._cfg.version - b._cfg.version;\n}\nfunction runUpgraders(db, oldVersion, idbUpgradeTrans, reject) {\n    const globalSchema = db._dbSchema;\n    const trans = db._createTransaction('readwrite', db._storeNames, globalSchema);\n    trans.create(idbUpgradeTrans);\n    trans._completion.catch(reject);\n    const rejectTransaction = trans._reject.bind(trans);\n    const transless = PSD.transless || PSD;\n    newScope(() => {\n        PSD.trans = trans;\n        PSD.transless = transless;\n        if (oldVersion === 0) {\n            keys(globalSchema).forEach(tableName => {\n                createTable(idbUpgradeTrans, tableName, globalSchema[tableName].primKey, globalSchema[tableName].indexes);\n            });\n            generateMiddlewareStacks(db, idbUpgradeTrans);\n            DexiePromise.follow(() => db.on.populate.fire(trans)).catch(rejectTransaction);\n        }\n        else\n            updateTablesAndIndexes(db, oldVersion, trans, idbUpgradeTrans).catch(rejectTransaction);\n    });\n}\nfunction updateTablesAndIndexes({ _novip: db }, oldVersion, trans, idbUpgradeTrans) {\n    const queue = [];\n    const versions = db._versions;\n    let globalSchema = db._dbSchema = buildGlobalSchema(db, db.idbdb, idbUpgradeTrans);\n    let anyContentUpgraderHasRun = false;\n    const versToRun = versions.filter(v => v._cfg.version >= oldVersion);\n    versToRun.forEach(version => {\n        queue.push(() => {\n            const oldSchema = globalSchema;\n            const newSchema = version._cfg.dbschema;\n            adjustToExistingIndexNames(db, oldSchema, idbUpgradeTrans);\n            adjustToExistingIndexNames(db, newSchema, idbUpgradeTrans);\n            globalSchema = db._dbSchema = newSchema;\n            const diff = getSchemaDiff(oldSchema, newSchema);\n            diff.add.forEach(tuple => {\n                createTable(idbUpgradeTrans, tuple[0], tuple[1].primKey, tuple[1].indexes);\n            });\n            diff.change.forEach(change => {\n                if (change.recreate) {\n                    throw new exceptions.Upgrade(\"Not yet support for changing primary key\");\n                }\n                else {\n                    const store = idbUpgradeTrans.objectStore(change.name);\n                    change.add.forEach(idx => addIndex(store, idx));\n                    change.change.forEach(idx => {\n                        store.deleteIndex(idx.name);\n                        addIndex(store, idx);\n                    });\n                    change.del.forEach(idxName => store.deleteIndex(idxName));\n                }\n            });\n            const contentUpgrade = version._cfg.contentUpgrade;\n            if (contentUpgrade && version._cfg.version > oldVersion) {\n                generateMiddlewareStacks(db, idbUpgradeTrans);\n                trans._memoizedTables = {};\n                anyContentUpgraderHasRun = true;\n                let upgradeSchema = shallowClone(newSchema);\n                diff.del.forEach(table => {\n                    upgradeSchema[table] = oldSchema[table];\n                });\n                removeTablesApi(db, [db.Transaction.prototype]);\n                setApiOnPlace(db, [db.Transaction.prototype], keys(upgradeSchema), upgradeSchema);\n                trans.schema = upgradeSchema;\n                const contentUpgradeIsAsync = isAsyncFunction(contentUpgrade);\n                if (contentUpgradeIsAsync) {\n                    incrementExpectedAwaits();\n                }\n                let returnValue;\n                const promiseFollowed = DexiePromise.follow(() => {\n                    returnValue = contentUpgrade(trans);\n                    if (returnValue) {\n                        if (contentUpgradeIsAsync) {\n                            var decrementor = decrementExpectedAwaits.bind(null, null);\n                            returnValue.then(decrementor, decrementor);\n                        }\n                    }\n                });\n                return (returnValue && typeof returnValue.then === 'function' ?\n                    DexiePromise.resolve(returnValue) : promiseFollowed.then(() => returnValue));\n            }\n        });\n        queue.push(idbtrans => {\n            if (!anyContentUpgraderHasRun || !hasIEDeleteObjectStoreBug) {\n                const newSchema = version._cfg.dbschema;\n                deleteRemovedTables(newSchema, idbtrans);\n            }\n            removeTablesApi(db, [db.Transaction.prototype]);\n            setApiOnPlace(db, [db.Transaction.prototype], db._storeNames, db._dbSchema);\n            trans.schema = db._dbSchema;\n        });\n    });\n    function runQueue() {\n        return queue.length ? DexiePromise.resolve(queue.shift()(trans.idbtrans)).then(runQueue) :\n            DexiePromise.resolve();\n    }\n    return runQueue().then(() => {\n        createMissingTables(globalSchema, idbUpgradeTrans);\n    });\n}\nfunction getSchemaDiff(oldSchema, newSchema) {\n    const diff = {\n        del: [],\n        add: [],\n        change: []\n    };\n    let table;\n    for (table in oldSchema) {\n        if (!newSchema[table])\n            diff.del.push(table);\n    }\n    for (table in newSchema) {\n        const oldDef = oldSchema[table], newDef = newSchema[table];\n        if (!oldDef) {\n            diff.add.push([table, newDef]);\n        }\n        else {\n            const change = {\n                name: table,\n                def: newDef,\n                recreate: false,\n                del: [],\n                add: [],\n                change: []\n            };\n            if ((\n            '' + (oldDef.primKey.keyPath || '')) !== ('' + (newDef.primKey.keyPath || '')) ||\n                (oldDef.primKey.auto !== newDef.primKey.auto && !isIEOrEdge))\n             {\n                change.recreate = true;\n                diff.change.push(change);\n            }\n            else {\n                const oldIndexes = oldDef.idxByName;\n                const newIndexes = newDef.idxByName;\n                let idxName;\n                for (idxName in oldIndexes) {\n                    if (!newIndexes[idxName])\n                        change.del.push(idxName);\n                }\n                for (idxName in newIndexes) {\n                    const oldIdx = oldIndexes[idxName], newIdx = newIndexes[idxName];\n                    if (!oldIdx)\n                        change.add.push(newIdx);\n                    else if (oldIdx.src !== newIdx.src)\n                        change.change.push(newIdx);\n                }\n                if (change.del.length > 0 || change.add.length > 0 || change.change.length > 0) {\n                    diff.change.push(change);\n                }\n            }\n        }\n    }\n    return diff;\n}\nfunction createTable(idbtrans, tableName, primKey, indexes) {\n    const store = idbtrans.db.createObjectStore(tableName, primKey.keyPath ?\n        { keyPath: primKey.keyPath, autoIncrement: primKey.auto } :\n        { autoIncrement: primKey.auto });\n    indexes.forEach(idx => addIndex(store, idx));\n    return store;\n}\nfunction createMissingTables(newSchema, idbtrans) {\n    keys(newSchema).forEach(tableName => {\n        if (!idbtrans.db.objectStoreNames.contains(tableName)) {\n            createTable(idbtrans, tableName, newSchema[tableName].primKey, newSchema[tableName].indexes);\n        }\n    });\n}\nfunction deleteRemovedTables(newSchema, idbtrans) {\n    [].slice.call(idbtrans.db.objectStoreNames).forEach(storeName => newSchema[storeName] == null && idbtrans.db.deleteObjectStore(storeName));\n}\nfunction addIndex(store, idx) {\n    store.createIndex(idx.name, idx.keyPath, { unique: idx.unique, multiEntry: idx.multi });\n}\nfunction buildGlobalSchema(db, idbdb, tmpTrans) {\n    const globalSchema = {};\n    const dbStoreNames = slice(idbdb.objectStoreNames, 0);\n    dbStoreNames.forEach(storeName => {\n        const store = tmpTrans.objectStore(storeName);\n        let keyPath = store.keyPath;\n        const primKey = createIndexSpec(nameFromKeyPath(keyPath), keyPath || \"\", false, false, !!store.autoIncrement, keyPath && typeof keyPath !== \"string\", true);\n        const indexes = [];\n        for (let j = 0; j < store.indexNames.length; ++j) {\n            const idbindex = store.index(store.indexNames[j]);\n            keyPath = idbindex.keyPath;\n            var index = createIndexSpec(idbindex.name, keyPath, !!idbindex.unique, !!idbindex.multiEntry, false, keyPath && typeof keyPath !== \"string\", false);\n            indexes.push(index);\n        }\n        globalSchema[storeName] = createTableSchema(storeName, primKey, indexes);\n    });\n    return globalSchema;\n}\nfunction readGlobalSchema({ _novip: db }, idbdb, tmpTrans) {\n    db.verno = idbdb.version / 10;\n    const globalSchema = db._dbSchema = buildGlobalSchema(db, idbdb, tmpTrans);\n    db._storeNames = slice(idbdb.objectStoreNames, 0);\n    setApiOnPlace(db, [db._allTables], keys(globalSchema), globalSchema);\n}\nfunction verifyInstalledSchema(db, tmpTrans) {\n    const installedSchema = buildGlobalSchema(db, db.idbdb, tmpTrans);\n    const diff = getSchemaDiff(installedSchema, db._dbSchema);\n    return !(diff.add.length || diff.change.some(ch => ch.add.length || ch.change.length));\n}\nfunction adjustToExistingIndexNames({ _novip: db }, schema, idbtrans) {\n    const storeNames = idbtrans.db.objectStoreNames;\n    for (let i = 0; i < storeNames.length; ++i) {\n        const storeName = storeNames[i];\n        const store = idbtrans.objectStore(storeName);\n        db._hasGetAll = 'getAll' in store;\n        for (let j = 0; j < store.indexNames.length; ++j) {\n            const indexName = store.indexNames[j];\n            const keyPath = store.index(indexName).keyPath;\n            const dexieName = typeof keyPath === 'string' ? keyPath : \"[\" + slice(keyPath).join('+') + \"]\";\n            if (schema[storeName]) {\n                const indexSpec = schema[storeName].idxByName[dexieName];\n                if (indexSpec) {\n                    indexSpec.name = indexName;\n                    delete schema[storeName].idxByName[dexieName];\n                    schema[storeName].idxByName[indexName] = indexSpec;\n                }\n            }\n        }\n    }\n    if (typeof navigator !== 'undefined' && /Safari/.test(navigator.userAgent) &&\n        !/(Chrome\\/|Edge\\/)/.test(navigator.userAgent) &&\n        _global.WorkerGlobalScope && _global instanceof _global.WorkerGlobalScope &&\n        [].concat(navigator.userAgent.match(/Safari\\/(\\d*)/))[1] < 604) {\n        db._hasGetAll = false;\n    }\n}\nfunction parseIndexSyntax(primKeyAndIndexes) {\n    return primKeyAndIndexes.split(',').map((index, indexNum) => {\n        index = index.trim();\n        const name = index.replace(/([&*]|\\+\\+)/g, \"\");\n        const keyPath = /^\\[/.test(name) ? name.match(/^\\[(.*)\\]$/)[1].split('+') : name;\n        return createIndexSpec(name, keyPath || null, /\\&/.test(index), /\\*/.test(index), /\\+\\+/.test(index), isArray(keyPath), indexNum === 0);\n    });\n}\n\nclass Version {\n    _parseStoresSpec(stores, outSchema) {\n        keys(stores).forEach(tableName => {\n            if (stores[tableName] !== null) {\n                var indexes = parseIndexSyntax(stores[tableName]);\n                var primKey = indexes.shift();\n                if (primKey.multi)\n                    throw new exceptions.Schema(\"Primary key cannot be multi-valued\");\n                indexes.forEach(idx => {\n                    if (idx.auto)\n                        throw new exceptions.Schema(\"Only primary key can be marked as autoIncrement (++)\");\n                    if (!idx.keyPath)\n                        throw new exceptions.Schema(\"Index must have a name and cannot be an empty string\");\n                });\n                outSchema[tableName] = createTableSchema(tableName, primKey, indexes);\n            }\n        });\n    }\n    stores(stores) {\n        const db = this.db;\n        this._cfg.storesSource = this._cfg.storesSource ?\n            extend(this._cfg.storesSource, stores) :\n            stores;\n        const versions = db._versions;\n        const storesSpec = {};\n        let dbschema = {};\n        versions.forEach(version => {\n            extend(storesSpec, version._cfg.storesSource);\n            dbschema = (version._cfg.dbschema = {});\n            version._parseStoresSpec(storesSpec, dbschema);\n        });\n        db._dbSchema = dbschema;\n        removeTablesApi(db, [db._allTables, db, db.Transaction.prototype]);\n        setApiOnPlace(db, [db._allTables, db, db.Transaction.prototype, this._cfg.tables], keys(dbschema), dbschema);\n        db._storeNames = keys(dbschema);\n        return this;\n    }\n    upgrade(upgradeFunction) {\n        this._cfg.contentUpgrade = promisableChain(this._cfg.contentUpgrade || nop, upgradeFunction);\n        return this;\n    }\n}\n\nfunction createVersionConstructor(db) {\n    return makeClassConstructor(Version.prototype, function Version(versionNumber) {\n        this.db = db;\n        this._cfg = {\n            version: versionNumber,\n            storesSource: null,\n            dbschema: {},\n            tables: {},\n            contentUpgrade: null\n        };\n    });\n}\n\nfunction getDbNamesTable(indexedDB, IDBKeyRange) {\n    let dbNamesDB = indexedDB[\"_dbNamesDB\"];\n    if (!dbNamesDB) {\n        dbNamesDB = indexedDB[\"_dbNamesDB\"] = new Dexie$1(DBNAMES_DB, {\n            addons: [],\n            indexedDB,\n            IDBKeyRange,\n        });\n        dbNamesDB.version(1).stores({ dbnames: \"name\" });\n    }\n    return dbNamesDB.table(\"dbnames\");\n}\nfunction hasDatabasesNative(indexedDB) {\n    return indexedDB && typeof indexedDB.databases === \"function\";\n}\nfunction getDatabaseNames({ indexedDB, IDBKeyRange, }) {\n    return hasDatabasesNative(indexedDB)\n        ? Promise.resolve(indexedDB.databases()).then((infos) => infos\n            .map((info) => info.name)\n            .filter((name) => name !== DBNAMES_DB))\n        : getDbNamesTable(indexedDB, IDBKeyRange).toCollection().primaryKeys();\n}\nfunction _onDatabaseCreated({ indexedDB, IDBKeyRange }, name) {\n    !hasDatabasesNative(indexedDB) &&\n        name !== DBNAMES_DB &&\n        getDbNamesTable(indexedDB, IDBKeyRange).put({ name }).catch(nop);\n}\nfunction _onDatabaseDeleted({ indexedDB, IDBKeyRange }, name) {\n    !hasDatabasesNative(indexedDB) &&\n        name !== DBNAMES_DB &&\n        getDbNamesTable(indexedDB, IDBKeyRange).delete(name).catch(nop);\n}\n\nfunction vip(fn) {\n    return newScope(function () {\n        PSD.letThrough = true;\n        return fn();\n    });\n}\n\nfunction idbReady() {\n    var isSafari = !navigator.userAgentData &&\n        /Safari\\//.test(navigator.userAgent) &&\n        !/Chrom(e|ium)\\//.test(navigator.userAgent);\n    if (!isSafari || !indexedDB.databases)\n        return Promise.resolve();\n    var intervalId;\n    return new Promise(function (resolve) {\n        var tryIdb = function () { return indexedDB.databases().finally(resolve); };\n        intervalId = setInterval(tryIdb, 100);\n        tryIdb();\n    }).finally(function () { return clearInterval(intervalId); });\n}\n\nfunction dexieOpen(db) {\n    const state = db._state;\n    const { indexedDB } = db._deps;\n    if (state.isBeingOpened || db.idbdb)\n        return state.dbReadyPromise.then(() => state.dbOpenError ?\n            rejection(state.dbOpenError) :\n            db);\n    debug && (state.openCanceller._stackHolder = getErrorWithStack());\n    state.isBeingOpened = true;\n    state.dbOpenError = null;\n    state.openComplete = false;\n    const openCanceller = state.openCanceller;\n    function throwIfCancelled() {\n        if (state.openCanceller !== openCanceller)\n            throw new exceptions.DatabaseClosed('db.open() was cancelled');\n    }\n    let resolveDbReady = state.dbReadyResolve,\n    upgradeTransaction = null, wasCreated = false;\n    return DexiePromise.race([openCanceller, (typeof navigator === 'undefined' ? DexiePromise.resolve() : idbReady()).then(() => new DexiePromise((resolve, reject) => {\n            throwIfCancelled();\n            if (!indexedDB)\n                throw new exceptions.MissingAPI();\n            const dbName = db.name;\n            const req = state.autoSchema ?\n                indexedDB.open(dbName) :\n                indexedDB.open(dbName, Math.round(db.verno * 10));\n            if (!req)\n                throw new exceptions.MissingAPI();\n            req.onerror = eventRejectHandler(reject);\n            req.onblocked = wrap(db._fireOnBlocked);\n            req.onupgradeneeded = wrap(e => {\n                upgradeTransaction = req.transaction;\n                if (state.autoSchema && !db._options.allowEmptyDB) {\n                    req.onerror = preventDefault;\n                    upgradeTransaction.abort();\n                    req.result.close();\n                    const delreq = indexedDB.deleteDatabase(dbName);\n                    delreq.onsuccess = delreq.onerror = wrap(() => {\n                        reject(new exceptions.NoSuchDatabase(`Database ${dbName} doesnt exist`));\n                    });\n                }\n                else {\n                    upgradeTransaction.onerror = eventRejectHandler(reject);\n                    var oldVer = e.oldVersion > Math.pow(2, 62) ? 0 : e.oldVersion;\n                    wasCreated = oldVer < 1;\n                    db._novip.idbdb = req.result;\n                    runUpgraders(db, oldVer / 10, upgradeTransaction, reject);\n                }\n            }, reject);\n            req.onsuccess = wrap(() => {\n                upgradeTransaction = null;\n                const idbdb = db._novip.idbdb = req.result;\n                const objectStoreNames = slice(idbdb.objectStoreNames);\n                if (objectStoreNames.length > 0)\n                    try {\n                        const tmpTrans = idbdb.transaction(safariMultiStoreFix(objectStoreNames), 'readonly');\n                        if (state.autoSchema)\n                            readGlobalSchema(db, idbdb, tmpTrans);\n                        else {\n                            adjustToExistingIndexNames(db, db._dbSchema, tmpTrans);\n                            if (!verifyInstalledSchema(db, tmpTrans)) {\n                                console.warn(`Dexie SchemaDiff: Schema was extended without increasing the number passed to db.version(). Some queries may fail.`);\n                            }\n                        }\n                        generateMiddlewareStacks(db, tmpTrans);\n                    }\n                    catch (e) {\n                    }\n                connections.push(db);\n                idbdb.onversionchange = wrap(ev => {\n                    state.vcFired = true;\n                    db.on(\"versionchange\").fire(ev);\n                });\n                idbdb.onclose = wrap(ev => {\n                    db.on(\"close\").fire(ev);\n                });\n                if (wasCreated)\n                    _onDatabaseCreated(db._deps, dbName);\n                resolve();\n            }, reject);\n        }))]).then(() => {\n        throwIfCancelled();\n        state.onReadyBeingFired = [];\n        return DexiePromise.resolve(vip(() => db.on.ready.fire(db.vip))).then(function fireRemainders() {\n            if (state.onReadyBeingFired.length > 0) {\n                let remainders = state.onReadyBeingFired.reduce(promisableChain, nop);\n                state.onReadyBeingFired = [];\n                return DexiePromise.resolve(vip(() => remainders(db.vip))).then(fireRemainders);\n            }\n        });\n    }).finally(() => {\n        state.onReadyBeingFired = null;\n        state.isBeingOpened = false;\n    }).then(() => {\n        return db;\n    }).catch(err => {\n        state.dbOpenError = err;\n        try {\n            upgradeTransaction && upgradeTransaction.abort();\n        }\n        catch (_a) { }\n        if (openCanceller === state.openCanceller) {\n            db._close();\n        }\n        return rejection(err);\n    }).finally(() => {\n        state.openComplete = true;\n        resolveDbReady();\n    });\n}\n\nfunction awaitIterator(iterator) {\n    var callNext = result => iterator.next(result), doThrow = error => iterator.throw(error), onSuccess = step(callNext), onError = step(doThrow);\n    function step(getNext) {\n        return (val) => {\n            var next = getNext(val), value = next.value;\n            return next.done ? value :\n                (!value || typeof value.then !== 'function' ?\n                    isArray(value) ? Promise.all(value).then(onSuccess, onError) : onSuccess(value) :\n                    value.then(onSuccess, onError));\n        };\n    }\n    return step(callNext)();\n}\n\nfunction extractTransactionArgs(mode, _tableArgs_, scopeFunc) {\n    var i = arguments.length;\n    if (i < 2)\n        throw new exceptions.InvalidArgument(\"Too few arguments\");\n    var args = new Array(i - 1);\n    while (--i)\n        args[i - 1] = arguments[i];\n    scopeFunc = args.pop();\n    var tables = flatten(args);\n    return [mode, tables, scopeFunc];\n}\nfunction enterTransactionScope(db, mode, storeNames, parentTransaction, scopeFunc) {\n    return DexiePromise.resolve().then(() => {\n        const transless = PSD.transless || PSD;\n        const trans = db._createTransaction(mode, storeNames, db._dbSchema, parentTransaction);\n        const zoneProps = {\n            trans: trans,\n            transless: transless\n        };\n        if (parentTransaction) {\n            trans.idbtrans = parentTransaction.idbtrans;\n        }\n        else {\n            try {\n                trans.create();\n                db._state.PR1398_maxLoop = 3;\n            }\n            catch (ex) {\n                if (ex.name === errnames.InvalidState && db.isOpen() && --db._state.PR1398_maxLoop > 0) {\n                    console.warn('Dexie: Need to reopen db');\n                    db._close();\n                    return db.open().then(() => enterTransactionScope(db, mode, storeNames, null, scopeFunc));\n                }\n                return rejection(ex);\n            }\n        }\n        const scopeFuncIsAsync = isAsyncFunction(scopeFunc);\n        if (scopeFuncIsAsync) {\n            incrementExpectedAwaits();\n        }\n        let returnValue;\n        const promiseFollowed = DexiePromise.follow(() => {\n            returnValue = scopeFunc.call(trans, trans);\n            if (returnValue) {\n                if (scopeFuncIsAsync) {\n                    var decrementor = decrementExpectedAwaits.bind(null, null);\n                    returnValue.then(decrementor, decrementor);\n                }\n                else if (typeof returnValue.next === 'function' && typeof returnValue.throw === 'function') {\n                    returnValue = awaitIterator(returnValue);\n                }\n            }\n        }, zoneProps);\n        return (returnValue && typeof returnValue.then === 'function' ?\n            DexiePromise.resolve(returnValue).then(x => trans.active ?\n                x\n                : rejection(new exceptions.PrematureCommit(\"Transaction committed too early. See http://bit.ly/2kdckMn\")))\n            : promiseFollowed.then(() => returnValue)).then(x => {\n            if (parentTransaction)\n                trans._resolve();\n            return trans._completion.then(() => x);\n        }).catch(e => {\n            trans._reject(e);\n            return rejection(e);\n        });\n    });\n}\n\nfunction pad(a, value, count) {\n    const result = isArray(a) ? a.slice() : [a];\n    for (let i = 0; i < count; ++i)\n        result.push(value);\n    return result;\n}\nfunction createVirtualIndexMiddleware(down) {\n    return {\n        ...down,\n        table(tableName) {\n            const table = down.table(tableName);\n            const { schema } = table;\n            const indexLookup = {};\n            const allVirtualIndexes = [];\n            function addVirtualIndexes(keyPath, keyTail, lowLevelIndex) {\n                const keyPathAlias = getKeyPathAlias(keyPath);\n                const indexList = (indexLookup[keyPathAlias] = indexLookup[keyPathAlias] || []);\n                const keyLength = keyPath == null ? 0 : typeof keyPath === 'string' ? 1 : keyPath.length;\n                const isVirtual = keyTail > 0;\n                const virtualIndex = {\n                    ...lowLevelIndex,\n                    isVirtual,\n                    keyTail,\n                    keyLength,\n                    extractKey: getKeyExtractor(keyPath),\n                    unique: !isVirtual && lowLevelIndex.unique\n                };\n                indexList.push(virtualIndex);\n                if (!virtualIndex.isPrimaryKey) {\n                    allVirtualIndexes.push(virtualIndex);\n                }\n                if (keyLength > 1) {\n                    const virtualKeyPath = keyLength === 2 ?\n                        keyPath[0] :\n                        keyPath.slice(0, keyLength - 1);\n                    addVirtualIndexes(virtualKeyPath, keyTail + 1, lowLevelIndex);\n                }\n                indexList.sort((a, b) => a.keyTail - b.keyTail);\n                return virtualIndex;\n            }\n            const primaryKey = addVirtualIndexes(schema.primaryKey.keyPath, 0, schema.primaryKey);\n            indexLookup[\":id\"] = [primaryKey];\n            for (const index of schema.indexes) {\n                addVirtualIndexes(index.keyPath, 0, index);\n            }\n            function findBestIndex(keyPath) {\n                const result = indexLookup[getKeyPathAlias(keyPath)];\n                return result && result[0];\n            }\n            function translateRange(range, keyTail) {\n                return {\n                    type: range.type === 1  ?\n                        2  :\n                        range.type,\n                    lower: pad(range.lower, range.lowerOpen ? down.MAX_KEY : down.MIN_KEY, keyTail),\n                    lowerOpen: true,\n                    upper: pad(range.upper, range.upperOpen ? down.MIN_KEY : down.MAX_KEY, keyTail),\n                    upperOpen: true\n                };\n            }\n            function translateRequest(req) {\n                const index = req.query.index;\n                return index.isVirtual ? {\n                    ...req,\n                    query: {\n                        index,\n                        range: translateRange(req.query.range, index.keyTail)\n                    }\n                } : req;\n            }\n            const result = {\n                ...table,\n                schema: {\n                    ...schema,\n                    primaryKey,\n                    indexes: allVirtualIndexes,\n                    getIndexByKeyPath: findBestIndex\n                },\n                count(req) {\n                    return table.count(translateRequest(req));\n                },\n                query(req) {\n                    return table.query(translateRequest(req));\n                },\n                openCursor(req) {\n                    const { keyTail, isVirtual, keyLength } = req.query.index;\n                    if (!isVirtual)\n                        return table.openCursor(req);\n                    function createVirtualCursor(cursor) {\n                        function _continue(key) {\n                            key != null ?\n                                cursor.continue(pad(key, req.reverse ? down.MAX_KEY : down.MIN_KEY, keyTail)) :\n                                req.unique ?\n                                    cursor.continue(cursor.key.slice(0, keyLength)\n                                        .concat(req.reverse\n                                        ? down.MIN_KEY\n                                        : down.MAX_KEY, keyTail)) :\n                                    cursor.continue();\n                        }\n                        const virtualCursor = Object.create(cursor, {\n                            continue: { value: _continue },\n                            continuePrimaryKey: {\n                                value(key, primaryKey) {\n                                    cursor.continuePrimaryKey(pad(key, down.MAX_KEY, keyTail), primaryKey);\n                                }\n                            },\n                            primaryKey: {\n                                get() {\n                                    return cursor.primaryKey;\n                                }\n                            },\n                            key: {\n                                get() {\n                                    const key = cursor.key;\n                                    return keyLength === 1 ?\n                                        key[0] :\n                                        key.slice(0, keyLength);\n                                }\n                            },\n                            value: {\n                                get() {\n                                    return cursor.value;\n                                }\n                            }\n                        });\n                        return virtualCursor;\n                    }\n                    return table.openCursor(translateRequest(req))\n                        .then(cursor => cursor && createVirtualCursor(cursor));\n                }\n            };\n            return result;\n        }\n    };\n}\nconst virtualIndexMiddleware = {\n    stack: \"dbcore\",\n    name: \"VirtualIndexMiddleware\",\n    level: 1,\n    create: createVirtualIndexMiddleware\n};\n\nfunction getObjectDiff(a, b, rv, prfx) {\n    rv = rv || {};\n    prfx = prfx || '';\n    keys(a).forEach((prop) => {\n        if (!hasOwn(b, prop)) {\n            rv[prfx + prop] = undefined;\n        }\n        else {\n            var ap = a[prop], bp = b[prop];\n            if (typeof ap === 'object' && typeof bp === 'object' && ap && bp) {\n                const apTypeName = toStringTag(ap);\n                const bpTypeName = toStringTag(bp);\n                if (apTypeName !== bpTypeName) {\n                    rv[prfx + prop] = b[prop];\n                }\n                else if (apTypeName === 'Object') {\n                    getObjectDiff(ap, bp, rv, prfx + prop + '.');\n                }\n                else if (ap !== bp) {\n                    rv[prfx + prop] = b[prop];\n                }\n            }\n            else if (ap !== bp)\n                rv[prfx + prop] = b[prop];\n        }\n    });\n    keys(b).forEach((prop) => {\n        if (!hasOwn(a, prop)) {\n            rv[prfx + prop] = b[prop];\n        }\n    });\n    return rv;\n}\n\nfunction getEffectiveKeys(primaryKey, req) {\n    if (req.type === 'delete')\n        return req.keys;\n    return req.keys || req.values.map(primaryKey.extractKey);\n}\n\nconst hooksMiddleware = {\n    stack: \"dbcore\",\n    name: \"HooksMiddleware\",\n    level: 2,\n    create: (downCore) => ({\n        ...downCore,\n        table(tableName) {\n            const downTable = downCore.table(tableName);\n            const { primaryKey } = downTable.schema;\n            const tableMiddleware = {\n                ...downTable,\n                mutate(req) {\n                    const dxTrans = PSD.trans;\n                    const { deleting, creating, updating } = dxTrans.table(tableName).hook;\n                    switch (req.type) {\n                        case 'add':\n                            if (creating.fire === nop)\n                                break;\n                            return dxTrans._promise('readwrite', () => addPutOrDelete(req), true);\n                        case 'put':\n                            if (creating.fire === nop && updating.fire === nop)\n                                break;\n                            return dxTrans._promise('readwrite', () => addPutOrDelete(req), true);\n                        case 'delete':\n                            if (deleting.fire === nop)\n                                break;\n                            return dxTrans._promise('readwrite', () => addPutOrDelete(req), true);\n                        case 'deleteRange':\n                            if (deleting.fire === nop)\n                                break;\n                            return dxTrans._promise('readwrite', () => deleteRange(req), true);\n                    }\n                    return downTable.mutate(req);\n                    function addPutOrDelete(req) {\n                        const dxTrans = PSD.trans;\n                        const keys = req.keys || getEffectiveKeys(primaryKey, req);\n                        if (!keys)\n                            throw new Error(\"Keys missing\");\n                        req = req.type === 'add' || req.type === 'put' ?\n                            { ...req, keys } :\n                            { ...req };\n                        if (req.type !== 'delete')\n                            req.values = [...req.values];\n                        if (req.keys)\n                            req.keys = [...req.keys];\n                        return getExistingValues(downTable, req, keys).then(existingValues => {\n                            const contexts = keys.map((key, i) => {\n                                const existingValue = existingValues[i];\n                                const ctx = { onerror: null, onsuccess: null };\n                                if (req.type === 'delete') {\n                                    deleting.fire.call(ctx, key, existingValue, dxTrans);\n                                }\n                                else if (req.type === 'add' || existingValue === undefined) {\n                                    const generatedPrimaryKey = creating.fire.call(ctx, key, req.values[i], dxTrans);\n                                    if (key == null && generatedPrimaryKey != null) {\n                                        key = generatedPrimaryKey;\n                                        req.keys[i] = key;\n                                        if (!primaryKey.outbound) {\n                                            setByKeyPath(req.values[i], primaryKey.keyPath, key);\n                                        }\n                                    }\n                                }\n                                else {\n                                    const objectDiff = getObjectDiff(existingValue, req.values[i]);\n                                    const additionalChanges = updating.fire.call(ctx, objectDiff, key, existingValue, dxTrans);\n                                    if (additionalChanges) {\n                                        const requestedValue = req.values[i];\n                                        Object.keys(additionalChanges).forEach(keyPath => {\n                                            if (hasOwn(requestedValue, keyPath)) {\n                                                requestedValue[keyPath] = additionalChanges[keyPath];\n                                            }\n                                            else {\n                                                setByKeyPath(requestedValue, keyPath, additionalChanges[keyPath]);\n                                            }\n                                        });\n                                    }\n                                }\n                                return ctx;\n                            });\n                            return downTable.mutate(req).then(({ failures, results, numFailures, lastResult }) => {\n                                for (let i = 0; i < keys.length; ++i) {\n                                    const primKey = results ? results[i] : keys[i];\n                                    const ctx = contexts[i];\n                                    if (primKey == null) {\n                                        ctx.onerror && ctx.onerror(failures[i]);\n                                    }\n                                    else {\n                                        ctx.onsuccess && ctx.onsuccess(req.type === 'put' && existingValues[i] ?\n                                            req.values[i] :\n                                            primKey\n                                        );\n                                    }\n                                }\n                                return { failures, results, numFailures, lastResult };\n                            }).catch(error => {\n                                contexts.forEach(ctx => ctx.onerror && ctx.onerror(error));\n                                return Promise.reject(error);\n                            });\n                        });\n                    }\n                    function deleteRange(req) {\n                        return deleteNextChunk(req.trans, req.range, 10000);\n                    }\n                    function deleteNextChunk(trans, range, limit) {\n                        return downTable.query({ trans, values: false, query: { index: primaryKey, range }, limit })\n                            .then(({ result }) => {\n                            return addPutOrDelete({ type: 'delete', keys: result, trans }).then(res => {\n                                if (res.numFailures > 0)\n                                    return Promise.reject(res.failures[0]);\n                                if (result.length < limit) {\n                                    return { failures: [], numFailures: 0, lastResult: undefined };\n                                }\n                                else {\n                                    return deleteNextChunk(trans, { ...range, lower: result[result.length - 1], lowerOpen: true }, limit);\n                                }\n                            });\n                        });\n                    }\n                }\n            };\n            return tableMiddleware;\n        },\n    })\n};\nfunction getExistingValues(table, req, effectiveKeys) {\n    return req.type === \"add\"\n        ? Promise.resolve([])\n        : table.getMany({ trans: req.trans, keys: effectiveKeys, cache: \"immutable\" });\n}\n\nfunction getFromTransactionCache(keys, cache, clone) {\n    try {\n        if (!cache)\n            return null;\n        if (cache.keys.length < keys.length)\n            return null;\n        const result = [];\n        for (let i = 0, j = 0; i < cache.keys.length && j < keys.length; ++i) {\n            if (cmp(cache.keys[i], keys[j]) !== 0)\n                continue;\n            result.push(clone ? deepClone(cache.values[i]) : cache.values[i]);\n            ++j;\n        }\n        return result.length === keys.length ? result : null;\n    }\n    catch (_a) {\n        return null;\n    }\n}\nconst cacheExistingValuesMiddleware = {\n    stack: \"dbcore\",\n    level: -1,\n    create: (core) => {\n        return {\n            table: (tableName) => {\n                const table = core.table(tableName);\n                return {\n                    ...table,\n                    getMany: (req) => {\n                        if (!req.cache) {\n                            return table.getMany(req);\n                        }\n                        const cachedResult = getFromTransactionCache(req.keys, req.trans[\"_cache\"], req.cache === \"clone\");\n                        if (cachedResult) {\n                            return DexiePromise.resolve(cachedResult);\n                        }\n                        return table.getMany(req).then((res) => {\n                            req.trans[\"_cache\"] = {\n                                keys: req.keys,\n                                values: req.cache === \"clone\" ? deepClone(res) : res,\n                            };\n                            return res;\n                        });\n                    },\n                    mutate: (req) => {\n                        if (req.type !== \"add\")\n                            req.trans[\"_cache\"] = null;\n                        return table.mutate(req);\n                    },\n                };\n            },\n        };\n    },\n};\n\nfunction isEmptyRange(node) {\n    return !(\"from\" in node);\n}\nconst RangeSet = function (fromOrTree, to) {\n    if (this) {\n        extend(this, arguments.length ? { d: 1, from: fromOrTree, to: arguments.length > 1 ? to : fromOrTree } : { d: 0 });\n    }\n    else {\n        const rv = new RangeSet();\n        if (fromOrTree && (\"d\" in fromOrTree)) {\n            extend(rv, fromOrTree);\n        }\n        return rv;\n    }\n};\nprops(RangeSet.prototype, {\n    add(rangeSet) {\n        mergeRanges(this, rangeSet);\n        return this;\n    },\n    addKey(key) {\n        addRange(this, key, key);\n        return this;\n    },\n    addKeys(keys) {\n        keys.forEach(key => addRange(this, key, key));\n        return this;\n    },\n    [iteratorSymbol]() {\n        return getRangeSetIterator(this);\n    }\n});\nfunction addRange(target, from, to) {\n    const diff = cmp(from, to);\n    if (isNaN(diff))\n        return;\n    if (diff > 0)\n        throw RangeError();\n    if (isEmptyRange(target))\n        return extend(target, { from, to, d: 1 });\n    const left = target.l;\n    const right = target.r;\n    if (cmp(to, target.from) < 0) {\n        left\n            ? addRange(left, from, to)\n            : (target.l = { from, to, d: 1, l: null, r: null });\n        return rebalance(target);\n    }\n    if (cmp(from, target.to) > 0) {\n        right\n            ? addRange(right, from, to)\n            : (target.r = { from, to, d: 1, l: null, r: null });\n        return rebalance(target);\n    }\n    if (cmp(from, target.from) < 0) {\n        target.from = from;\n        target.l = null;\n        target.d = right ? right.d + 1 : 1;\n    }\n    if (cmp(to, target.to) > 0) {\n        target.to = to;\n        target.r = null;\n        target.d = target.l ? target.l.d + 1 : 1;\n    }\n    const rightWasCutOff = !target.r;\n    if (left && !target.l) {\n        mergeRanges(target, left);\n    }\n    if (right && rightWasCutOff) {\n        mergeRanges(target, right);\n    }\n}\nfunction mergeRanges(target, newSet) {\n    function _addRangeSet(target, { from, to, l, r }) {\n        addRange(target, from, to);\n        if (l)\n            _addRangeSet(target, l);\n        if (r)\n            _addRangeSet(target, r);\n    }\n    if (!isEmptyRange(newSet))\n        _addRangeSet(target, newSet);\n}\nfunction rangesOverlap(rangeSet1, rangeSet2) {\n    const i1 = getRangeSetIterator(rangeSet2);\n    let nextResult1 = i1.next();\n    if (nextResult1.done)\n        return false;\n    let a = nextResult1.value;\n    const i2 = getRangeSetIterator(rangeSet1);\n    let nextResult2 = i2.next(a.from);\n    let b = nextResult2.value;\n    while (!nextResult1.done && !nextResult2.done) {\n        if (cmp(b.from, a.to) <= 0 && cmp(b.to, a.from) >= 0)\n            return true;\n        cmp(a.from, b.from) < 0\n            ? (a = (nextResult1 = i1.next(b.from)).value)\n            : (b = (nextResult2 = i2.next(a.from)).value);\n    }\n    return false;\n}\nfunction getRangeSetIterator(node) {\n    let state = isEmptyRange(node) ? null : { s: 0, n: node };\n    return {\n        next(key) {\n            const keyProvided = arguments.length > 0;\n            while (state) {\n                switch (state.s) {\n                    case 0:\n                        state.s = 1;\n                        if (keyProvided) {\n                            while (state.n.l && cmp(key, state.n.from) < 0)\n                                state = { up: state, n: state.n.l, s: 1 };\n                        }\n                        else {\n                            while (state.n.l)\n                                state = { up: state, n: state.n.l, s: 1 };\n                        }\n                    case 1:\n                        state.s = 2;\n                        if (!keyProvided || cmp(key, state.n.to) <= 0)\n                            return { value: state.n, done: false };\n                    case 2:\n                        if (state.n.r) {\n                            state.s = 3;\n                            state = { up: state, n: state.n.r, s: 0 };\n                            continue;\n                        }\n                    case 3:\n                        state = state.up;\n                }\n            }\n            return { done: true };\n        },\n    };\n}\nfunction rebalance(target) {\n    var _a, _b;\n    const diff = (((_a = target.r) === null || _a === void 0 ? void 0 : _a.d) || 0) - (((_b = target.l) === null || _b === void 0 ? void 0 : _b.d) || 0);\n    const r = diff > 1 ? \"r\" : diff < -1 ? \"l\" : \"\";\n    if (r) {\n        const l = r === \"r\" ? \"l\" : \"r\";\n        const rootClone = { ...target };\n        const oldRootRight = target[r];\n        target.from = oldRootRight.from;\n        target.to = oldRootRight.to;\n        target[r] = oldRootRight[r];\n        rootClone[r] = oldRootRight[l];\n        target[l] = rootClone;\n        rootClone.d = computeDepth(rootClone);\n    }\n    target.d = computeDepth(target);\n}\nfunction computeDepth({ r, l }) {\n    return (r ? (l ? Math.max(r.d, l.d) : r.d) : l ? l.d : 0) + 1;\n}\n\nconst observabilityMiddleware = {\n    stack: \"dbcore\",\n    level: 0,\n    create: (core) => {\n        const dbName = core.schema.name;\n        const FULL_RANGE = new RangeSet(core.MIN_KEY, core.MAX_KEY);\n        return {\n            ...core,\n            table: (tableName) => {\n                const table = core.table(tableName);\n                const { schema } = table;\n                const { primaryKey } = schema;\n                const { extractKey, outbound } = primaryKey;\n                const tableClone = {\n                    ...table,\n                    mutate: (req) => {\n                        const trans = req.trans;\n                        const mutatedParts = trans.mutatedParts || (trans.mutatedParts = {});\n                        const getRangeSet = (indexName) => {\n                            const part = `idb://${dbName}/${tableName}/${indexName}`;\n                            return (mutatedParts[part] ||\n                                (mutatedParts[part] = new RangeSet()));\n                        };\n                        const pkRangeSet = getRangeSet(\"\");\n                        const delsRangeSet = getRangeSet(\":dels\");\n                        const { type } = req;\n                        let [keys, newObjs] = req.type === \"deleteRange\"\n                            ? [req.range]\n                            : req.type === \"delete\"\n                                ? [req.keys]\n                                : req.values.length < 50\n                                    ? [[], req.values]\n                                    : [];\n                        const oldCache = req.trans[\"_cache\"];\n                        return table.mutate(req).then((res) => {\n                            if (isArray(keys)) {\n                                if (type !== \"delete\")\n                                    keys = res.results;\n                                pkRangeSet.addKeys(keys);\n                                const oldObjs = getFromTransactionCache(keys, oldCache);\n                                if (!oldObjs && type !== \"add\") {\n                                    delsRangeSet.addKeys(keys);\n                                }\n                                if (oldObjs || newObjs) {\n                                    trackAffectedIndexes(getRangeSet, schema, oldObjs, newObjs);\n                                }\n                            }\n                            else if (keys) {\n                                const range = { from: keys.lower, to: keys.upper };\n                                delsRangeSet.add(range);\n                                pkRangeSet.add(range);\n                            }\n                            else {\n                                pkRangeSet.add(FULL_RANGE);\n                                delsRangeSet.add(FULL_RANGE);\n                                schema.indexes.forEach(idx => getRangeSet(idx.name).add(FULL_RANGE));\n                            }\n                            return res;\n                        });\n                    },\n                };\n                const getRange = ({ query: { index, range }, }) => {\n                    var _a, _b;\n                    return [\n                        index,\n                        new RangeSet((_a = range.lower) !== null && _a !== void 0 ? _a : core.MIN_KEY, (_b = range.upper) !== null && _b !== void 0 ? _b : core.MAX_KEY),\n                    ];\n                };\n                const readSubscribers = {\n                    get: (req) => [primaryKey, new RangeSet(req.key)],\n                    getMany: (req) => [primaryKey, new RangeSet().addKeys(req.keys)],\n                    count: getRange,\n                    query: getRange,\n                    openCursor: getRange,\n                };\n                keys(readSubscribers).forEach(method => {\n                    tableClone[method] = function (req) {\n                        const { subscr } = PSD;\n                        if (subscr) {\n                            const getRangeSet = (indexName) => {\n                                const part = `idb://${dbName}/${tableName}/${indexName}`;\n                                return (subscr[part] ||\n                                    (subscr[part] = new RangeSet()));\n                            };\n                            const pkRangeSet = getRangeSet(\"\");\n                            const delsRangeSet = getRangeSet(\":dels\");\n                            const [queriedIndex, queriedRanges] = readSubscribers[method](req);\n                            getRangeSet(queriedIndex.name || \"\").add(queriedRanges);\n                            if (!queriedIndex.isPrimaryKey) {\n                                if (method === \"count\") {\n                                    delsRangeSet.add(FULL_RANGE);\n                                }\n                                else {\n                                    const keysPromise = method === \"query\" &&\n                                        outbound &&\n                                        req.values &&\n                                        table.query({\n                                            ...req,\n                                            values: false,\n                                        });\n                                    return table[method].apply(this, arguments).then((res) => {\n                                        if (method === \"query\") {\n                                            if (outbound && req.values) {\n                                                return keysPromise.then(({ result: resultingKeys }) => {\n                                                    pkRangeSet.addKeys(resultingKeys);\n                                                    return res;\n                                                });\n                                            }\n                                            const pKeys = req.values\n                                                ? res.result.map(extractKey)\n                                                : res.result;\n                                            if (req.values) {\n                                                pkRangeSet.addKeys(pKeys);\n                                            }\n                                            else {\n                                                delsRangeSet.addKeys(pKeys);\n                                            }\n                                        }\n                                        else if (method === \"openCursor\") {\n                                            const cursor = res;\n                                            const wantValues = req.values;\n                                            return (cursor &&\n                                                Object.create(cursor, {\n                                                    key: {\n                                                        get() {\n                                                            delsRangeSet.addKey(cursor.primaryKey);\n                                                            return cursor.key;\n                                                        },\n                                                    },\n                                                    primaryKey: {\n                                                        get() {\n                                                            const pkey = cursor.primaryKey;\n                                                            delsRangeSet.addKey(pkey);\n                                                            return pkey;\n                                                        },\n                                                    },\n                                                    value: {\n                                                        get() {\n                                                            wantValues && pkRangeSet.addKey(cursor.primaryKey);\n                                                            return cursor.value;\n                                                        },\n                                                    },\n                                                }));\n                                        }\n                                        return res;\n                                    });\n                                }\n                            }\n                        }\n                        return table[method].apply(this, arguments);\n                    };\n                });\n                return tableClone;\n            },\n        };\n    },\n};\nfunction trackAffectedIndexes(getRangeSet, schema, oldObjs, newObjs) {\n    function addAffectedIndex(ix) {\n        const rangeSet = getRangeSet(ix.name || \"\");\n        function extractKey(obj) {\n            return obj != null ? ix.extractKey(obj) : null;\n        }\n        const addKeyOrKeys = (key) => ix.multiEntry && isArray(key)\n            ? key.forEach(key => rangeSet.addKey(key))\n            : rangeSet.addKey(key);\n        (oldObjs || newObjs).forEach((_, i) => {\n            const oldKey = oldObjs && extractKey(oldObjs[i]);\n            const newKey = newObjs && extractKey(newObjs[i]);\n            if (cmp(oldKey, newKey) !== 0) {\n                if (oldKey != null)\n                    addKeyOrKeys(oldKey);\n                if (newKey != null)\n                    addKeyOrKeys(newKey);\n            }\n        });\n    }\n    schema.indexes.forEach(addAffectedIndex);\n}\n\nclass Dexie$1 {\n    constructor(name, options) {\n        this._middlewares = {};\n        this.verno = 0;\n        const deps = Dexie$1.dependencies;\n        this._options = options = {\n            addons: Dexie$1.addons,\n            autoOpen: true,\n            indexedDB: deps.indexedDB,\n            IDBKeyRange: deps.IDBKeyRange,\n            ...options\n        };\n        this._deps = {\n            indexedDB: options.indexedDB,\n            IDBKeyRange: options.IDBKeyRange\n        };\n        const { addons, } = options;\n        this._dbSchema = {};\n        this._versions = [];\n        this._storeNames = [];\n        this._allTables = {};\n        this.idbdb = null;\n        this._novip = this;\n        const state = {\n            dbOpenError: null,\n            isBeingOpened: false,\n            onReadyBeingFired: null,\n            openComplete: false,\n            dbReadyResolve: nop,\n            dbReadyPromise: null,\n            cancelOpen: nop,\n            openCanceller: null,\n            autoSchema: true,\n            PR1398_maxLoop: 3\n        };\n        state.dbReadyPromise = new DexiePromise(resolve => {\n            state.dbReadyResolve = resolve;\n        });\n        state.openCanceller = new DexiePromise((_, reject) => {\n            state.cancelOpen = reject;\n        });\n        this._state = state;\n        this.name = name;\n        this.on = Events(this, \"populate\", \"blocked\", \"versionchange\", \"close\", { ready: [promisableChain, nop] });\n        this.on.ready.subscribe = override(this.on.ready.subscribe, subscribe => {\n            return (subscriber, bSticky) => {\n                Dexie$1.vip(() => {\n                    const state = this._state;\n                    if (state.openComplete) {\n                        if (!state.dbOpenError)\n                            DexiePromise.resolve().then(subscriber);\n                        if (bSticky)\n                            subscribe(subscriber);\n                    }\n                    else if (state.onReadyBeingFired) {\n                        state.onReadyBeingFired.push(subscriber);\n                        if (bSticky)\n                            subscribe(subscriber);\n                    }\n                    else {\n                        subscribe(subscriber);\n                        const db = this;\n                        if (!bSticky)\n                            subscribe(function unsubscribe() {\n                                db.on.ready.unsubscribe(subscriber);\n                                db.on.ready.unsubscribe(unsubscribe);\n                            });\n                    }\n                });\n            };\n        });\n        this.Collection = createCollectionConstructor(this);\n        this.Table = createTableConstructor(this);\n        this.Transaction = createTransactionConstructor(this);\n        this.Version = createVersionConstructor(this);\n        this.WhereClause = createWhereClauseConstructor(this);\n        this.on(\"versionchange\", ev => {\n            if (ev.newVersion > 0)\n                console.warn(`Another connection wants to upgrade database '${this.name}'. Closing db now to resume the upgrade.`);\n            else\n                console.warn(`Another connection wants to delete database '${this.name}'. Closing db now to resume the delete request.`);\n            this.close();\n        });\n        this.on(\"blocked\", ev => {\n            if (!ev.newVersion || ev.newVersion < ev.oldVersion)\n                console.warn(`Dexie.delete('${this.name}') was blocked`);\n            else\n                console.warn(`Upgrade '${this.name}' blocked by other connection holding version ${ev.oldVersion / 10}`);\n        });\n        this._maxKey = getMaxKey(options.IDBKeyRange);\n        this._createTransaction = (mode, storeNames, dbschema, parentTransaction) => new this.Transaction(mode, storeNames, dbschema, this._options.chromeTransactionDurability, parentTransaction);\n        this._fireOnBlocked = ev => {\n            this.on(\"blocked\").fire(ev);\n            connections\n                .filter(c => c.name === this.name && c !== this && !c._state.vcFired)\n                .map(c => c.on(\"versionchange\").fire(ev));\n        };\n        this.use(virtualIndexMiddleware);\n        this.use(hooksMiddleware);\n        this.use(observabilityMiddleware);\n        this.use(cacheExistingValuesMiddleware);\n        this.vip = Object.create(this, { _vip: { value: true } });\n        addons.forEach(addon => addon(this));\n    }\n    version(versionNumber) {\n        if (isNaN(versionNumber) || versionNumber < 0.1)\n            throw new exceptions.Type(`Given version is not a positive number`);\n        versionNumber = Math.round(versionNumber * 10) / 10;\n        if (this.idbdb || this._state.isBeingOpened)\n            throw new exceptions.Schema(\"Cannot add version when database is open\");\n        this.verno = Math.max(this.verno, versionNumber);\n        const versions = this._versions;\n        var versionInstance = versions.filter(v => v._cfg.version === versionNumber)[0];\n        if (versionInstance)\n            return versionInstance;\n        versionInstance = new this.Version(versionNumber);\n        versions.push(versionInstance);\n        versions.sort(lowerVersionFirst);\n        versionInstance.stores({});\n        this._state.autoSchema = false;\n        return versionInstance;\n    }\n    _whenReady(fn) {\n        return (this.idbdb && (this._state.openComplete || PSD.letThrough || this._vip)) ? fn() : new DexiePromise((resolve, reject) => {\n            if (this._state.openComplete) {\n                return reject(new exceptions.DatabaseClosed(this._state.dbOpenError));\n            }\n            if (!this._state.isBeingOpened) {\n                if (!this._options.autoOpen) {\n                    reject(new exceptions.DatabaseClosed());\n                    return;\n                }\n                this.open().catch(nop);\n            }\n            this._state.dbReadyPromise.then(resolve, reject);\n        }).then(fn);\n    }\n    use({ stack, create, level, name }) {\n        if (name)\n            this.unuse({ stack, name });\n        const middlewares = this._middlewares[stack] || (this._middlewares[stack] = []);\n        middlewares.push({ stack, create, level: level == null ? 10 : level, name });\n        middlewares.sort((a, b) => a.level - b.level);\n        return this;\n    }\n    unuse({ stack, name, create }) {\n        if (stack && this._middlewares[stack]) {\n            this._middlewares[stack] = this._middlewares[stack].filter(mw => create ? mw.create !== create :\n                name ? mw.name !== name :\n                    false);\n        }\n        return this;\n    }\n    open() {\n        return dexieOpen(this);\n    }\n    _close() {\n        const state = this._state;\n        const idx = connections.indexOf(this);\n        if (idx >= 0)\n            connections.splice(idx, 1);\n        if (this.idbdb) {\n            try {\n                this.idbdb.close();\n            }\n            catch (e) { }\n            this._novip.idbdb = null;\n        }\n        state.dbReadyPromise = new DexiePromise(resolve => {\n            state.dbReadyResolve = resolve;\n        });\n        state.openCanceller = new DexiePromise((_, reject) => {\n            state.cancelOpen = reject;\n        });\n    }\n    close() {\n        this._close();\n        const state = this._state;\n        this._options.autoOpen = false;\n        state.dbOpenError = new exceptions.DatabaseClosed();\n        if (state.isBeingOpened)\n            state.cancelOpen(state.dbOpenError);\n    }\n    delete() {\n        const hasArguments = arguments.length > 0;\n        const state = this._state;\n        return new DexiePromise((resolve, reject) => {\n            const doDelete = () => {\n                this.close();\n                var req = this._deps.indexedDB.deleteDatabase(this.name);\n                req.onsuccess = wrap(() => {\n                    _onDatabaseDeleted(this._deps, this.name);\n                    resolve();\n                });\n                req.onerror = eventRejectHandler(reject);\n                req.onblocked = this._fireOnBlocked;\n            };\n            if (hasArguments)\n                throw new exceptions.InvalidArgument(\"Arguments not allowed in db.delete()\");\n            if (state.isBeingOpened) {\n                state.dbReadyPromise.then(doDelete);\n            }\n            else {\n                doDelete();\n            }\n        });\n    }\n    backendDB() {\n        return this.idbdb;\n    }\n    isOpen() {\n        return this.idbdb !== null;\n    }\n    hasBeenClosed() {\n        const dbOpenError = this._state.dbOpenError;\n        return dbOpenError && (dbOpenError.name === 'DatabaseClosed');\n    }\n    hasFailed() {\n        return this._state.dbOpenError !== null;\n    }\n    dynamicallyOpened() {\n        return this._state.autoSchema;\n    }\n    get tables() {\n        return keys(this._allTables).map(name => this._allTables[name]);\n    }\n    transaction() {\n        const args = extractTransactionArgs.apply(this, arguments);\n        return this._transaction.apply(this, args);\n    }\n    _transaction(mode, tables, scopeFunc) {\n        let parentTransaction = PSD.trans;\n        if (!parentTransaction || parentTransaction.db !== this || mode.indexOf('!') !== -1)\n            parentTransaction = null;\n        const onlyIfCompatible = mode.indexOf('?') !== -1;\n        mode = mode.replace('!', '').replace('?', '');\n        let idbMode, storeNames;\n        try {\n            storeNames = tables.map(table => {\n                var storeName = table instanceof this.Table ? table.name : table;\n                if (typeof storeName !== 'string')\n                    throw new TypeError(\"Invalid table argument to Dexie.transaction(). Only Table or String are allowed\");\n                return storeName;\n            });\n            if (mode == \"r\" || mode === READONLY)\n                idbMode = READONLY;\n            else if (mode == \"rw\" || mode == READWRITE)\n                idbMode = READWRITE;\n            else\n                throw new exceptions.InvalidArgument(\"Invalid transaction mode: \" + mode);\n            if (parentTransaction) {\n                if (parentTransaction.mode === READONLY && idbMode === READWRITE) {\n                    if (onlyIfCompatible) {\n                        parentTransaction = null;\n                    }\n                    else\n                        throw new exceptions.SubTransaction(\"Cannot enter a sub-transaction with READWRITE mode when parent transaction is READONLY\");\n                }\n                if (parentTransaction) {\n                    storeNames.forEach(storeName => {\n                        if (parentTransaction && parentTransaction.storeNames.indexOf(storeName) === -1) {\n                            if (onlyIfCompatible) {\n                                parentTransaction = null;\n                            }\n                            else\n                                throw new exceptions.SubTransaction(\"Table \" + storeName +\n                                    \" not included in parent transaction.\");\n                        }\n                    });\n                }\n                if (onlyIfCompatible && parentTransaction && !parentTransaction.active) {\n                    parentTransaction = null;\n                }\n            }\n        }\n        catch (e) {\n            return parentTransaction ?\n                parentTransaction._promise(null, (_, reject) => { reject(e); }) :\n                rejection(e);\n        }\n        const enterTransaction = enterTransactionScope.bind(null, this, idbMode, storeNames, parentTransaction, scopeFunc);\n        return (parentTransaction ?\n            parentTransaction._promise(idbMode, enterTransaction, \"lock\") :\n            PSD.trans ?\n                usePSD(PSD.transless, () => this._whenReady(enterTransaction)) :\n                this._whenReady(enterTransaction));\n    }\n    table(tableName) {\n        if (!hasOwn(this._allTables, tableName)) {\n            throw new exceptions.InvalidTable(`Table ${tableName} does not exist`);\n        }\n        return this._allTables[tableName];\n    }\n}\n\nconst symbolObservable = typeof Symbol !== \"undefined\" && \"observable\" in Symbol\n    ? Symbol.observable\n    : \"@@observable\";\nclass Observable {\n    constructor(subscribe) {\n        this._subscribe = subscribe;\n    }\n    subscribe(x, error, complete) {\n        return this._subscribe(!x || typeof x === \"function\" ? { next: x, error, complete } : x);\n    }\n    [symbolObservable]() {\n        return this;\n    }\n}\n\nfunction extendObservabilitySet(target, newSet) {\n    keys(newSet).forEach(part => {\n        const rangeSet = target[part] || (target[part] = new RangeSet());\n        mergeRanges(rangeSet, newSet[part]);\n    });\n    return target;\n}\n\nfunction liveQuery(querier) {\n    let hasValue = false;\n    let currentValue = undefined;\n    const observable = new Observable((observer) => {\n        const scopeFuncIsAsync = isAsyncFunction(querier);\n        function execute(subscr) {\n            if (scopeFuncIsAsync) {\n                incrementExpectedAwaits();\n            }\n            const exec = () => newScope(querier, { subscr, trans: null });\n            const rv = PSD.trans\n                ?\n                    usePSD(PSD.transless, exec)\n                : exec();\n            if (scopeFuncIsAsync) {\n                rv.then(decrementExpectedAwaits, decrementExpectedAwaits);\n            }\n            return rv;\n        }\n        let closed = false;\n        let accumMuts = {};\n        let currentObs = {};\n        const subscription = {\n            get closed() {\n                return closed;\n            },\n            unsubscribe: () => {\n                closed = true;\n                globalEvents.storagemutated.unsubscribe(mutationListener);\n            },\n        };\n        observer.start && observer.start(subscription);\n        let querying = false, startedListening = false;\n        function shouldNotify() {\n            return keys(currentObs).some((key) => accumMuts[key] && rangesOverlap(accumMuts[key], currentObs[key]));\n        }\n        const mutationListener = (parts) => {\n            extendObservabilitySet(accumMuts, parts);\n            if (shouldNotify()) {\n                doQuery();\n            }\n        };\n        const doQuery = () => {\n            if (querying || closed)\n                return;\n            accumMuts = {};\n            const subscr = {};\n            const ret = execute(subscr);\n            if (!startedListening) {\n                globalEvents(DEXIE_STORAGE_MUTATED_EVENT_NAME, mutationListener);\n                startedListening = true;\n            }\n            querying = true;\n            Promise.resolve(ret).then((result) => {\n                hasValue = true;\n                currentValue = result;\n                querying = false;\n                if (closed)\n                    return;\n                if (shouldNotify()) {\n                    doQuery();\n                }\n                else {\n                    accumMuts = {};\n                    currentObs = subscr;\n                    observer.next && observer.next(result);\n                }\n            }, (err) => {\n                querying = false;\n                hasValue = false;\n                observer.error && observer.error(err);\n                subscription.unsubscribe();\n            });\n        };\n        doQuery();\n        return subscription;\n    });\n    observable.hasValue = () => hasValue;\n    observable.getValue = () => currentValue;\n    return observable;\n}\n\nlet domDeps;\ntry {\n    domDeps = {\n        indexedDB: _global.indexedDB || _global.mozIndexedDB || _global.webkitIndexedDB || _global.msIndexedDB,\n        IDBKeyRange: _global.IDBKeyRange || _global.webkitIDBKeyRange\n    };\n}\ncatch (e) {\n    domDeps = { indexedDB: null, IDBKeyRange: null };\n}\n\nconst Dexie = Dexie$1;\nprops(Dexie, {\n    ...fullNameExceptions,\n    delete(databaseName) {\n        const db = new Dexie(databaseName, { addons: [] });\n        return db.delete();\n    },\n    exists(name) {\n        return new Dexie(name, { addons: [] }).open().then(db => {\n            db.close();\n            return true;\n        }).catch('NoSuchDatabaseError', () => false);\n    },\n    getDatabaseNames(cb) {\n        try {\n            return getDatabaseNames(Dexie.dependencies).then(cb);\n        }\n        catch (_a) {\n            return rejection(new exceptions.MissingAPI());\n        }\n    },\n    defineClass() {\n        function Class(content) {\n            extend(this, content);\n        }\n        return Class;\n    },\n    ignoreTransaction(scopeFunc) {\n        return PSD.trans ?\n            usePSD(PSD.transless, scopeFunc) :\n            scopeFunc();\n    },\n    vip,\n    async: function (generatorFn) {\n        return function () {\n            try {\n                var rv = awaitIterator(generatorFn.apply(this, arguments));\n                if (!rv || typeof rv.then !== 'function')\n                    return DexiePromise.resolve(rv);\n                return rv;\n            }\n            catch (e) {\n                return rejection(e);\n            }\n        };\n    },\n    spawn: function (generatorFn, args, thiz) {\n        try {\n            var rv = awaitIterator(generatorFn.apply(thiz, args || []));\n            if (!rv || typeof rv.then !== 'function')\n                return DexiePromise.resolve(rv);\n            return rv;\n        }\n        catch (e) {\n            return rejection(e);\n        }\n    },\n    currentTransaction: {\n        get: () => PSD.trans || null\n    },\n    waitFor: function (promiseOrFunction, optionalTimeout) {\n        const promise = DexiePromise.resolve(typeof promiseOrFunction === 'function' ?\n            Dexie.ignoreTransaction(promiseOrFunction) :\n            promiseOrFunction)\n            .timeout(optionalTimeout || 60000);\n        return PSD.trans ?\n            PSD.trans.waitFor(promise) :\n            promise;\n    },\n    Promise: DexiePromise,\n    debug: {\n        get: () => debug,\n        set: value => {\n            setDebug(value, value === 'dexie' ? () => true : dexieStackFrameFilter);\n        }\n    },\n    derive: derive,\n    extend: extend,\n    props: props,\n    override: override,\n    Events: Events,\n    on: globalEvents,\n    liveQuery,\n    extendObservabilitySet,\n    getByKeyPath: getByKeyPath,\n    setByKeyPath: setByKeyPath,\n    delByKeyPath: delByKeyPath,\n    shallowClone: shallowClone,\n    deepClone: deepClone,\n    getObjectDiff: getObjectDiff,\n    cmp,\n    asap: asap$1,\n    minKey: minKey,\n    addons: [],\n    connections: connections,\n    errnames: errnames,\n    dependencies: domDeps,\n    semVer: DEXIE_VERSION,\n    version: DEXIE_VERSION.split('.')\n        .map(n => parseInt(n))\n        .reduce((p, c, i) => p + (c / Math.pow(10, i * 2))),\n});\nDexie.maxKey = getMaxKey(Dexie.dependencies.IDBKeyRange);\n\nif (typeof dispatchEvent !== 'undefined' && typeof addEventListener !== 'undefined') {\n    globalEvents(DEXIE_STORAGE_MUTATED_EVENT_NAME, updatedParts => {\n        if (!propagatingLocally) {\n            let event;\n            if (isIEOrEdge) {\n                event = document.createEvent('CustomEvent');\n                event.initCustomEvent(STORAGE_MUTATED_DOM_EVENT_NAME, true, true, updatedParts);\n            }\n            else {\n                event = new CustomEvent(STORAGE_MUTATED_DOM_EVENT_NAME, {\n                    detail: updatedParts\n                });\n            }\n            propagatingLocally = true;\n            dispatchEvent(event);\n            propagatingLocally = false;\n        }\n    });\n    addEventListener(STORAGE_MUTATED_DOM_EVENT_NAME, ({ detail }) => {\n        if (!propagatingLocally) {\n            propagateLocally(detail);\n        }\n    });\n}\nfunction propagateLocally(updateParts) {\n    let wasMe = propagatingLocally;\n    try {\n        propagatingLocally = true;\n        globalEvents.storagemutated.fire(updateParts);\n    }\n    finally {\n        propagatingLocally = wasMe;\n    }\n}\nlet propagatingLocally = false;\n\nif (typeof BroadcastChannel !== 'undefined') {\n    const bc = new BroadcastChannel(STORAGE_MUTATED_DOM_EVENT_NAME);\n    if (typeof bc.unref === 'function') {\n        bc.unref();\n    }\n    globalEvents(DEXIE_STORAGE_MUTATED_EVENT_NAME, (changedParts) => {\n        if (!propagatingLocally) {\n            bc.postMessage(changedParts);\n        }\n    });\n    bc.onmessage = (ev) => {\n        if (ev.data)\n            propagateLocally(ev.data);\n    };\n}\nelse if (typeof self !== 'undefined' && typeof navigator !== 'undefined') {\n    globalEvents(DEXIE_STORAGE_MUTATED_EVENT_NAME, (changedParts) => {\n        try {\n            if (!propagatingLocally) {\n                if (typeof localStorage !== 'undefined') {\n                    localStorage.setItem(STORAGE_MUTATED_DOM_EVENT_NAME, JSON.stringify({\n                        trig: Math.random(),\n                        changedParts,\n                    }));\n                }\n                if (typeof self['clients'] === 'object') {\n                    [...self['clients'].matchAll({ includeUncontrolled: true })].forEach((client) => client.postMessage({\n                        type: STORAGE_MUTATED_DOM_EVENT_NAME,\n                        changedParts,\n                    }));\n                }\n            }\n        }\n        catch (_a) { }\n    });\n    if (typeof addEventListener !== 'undefined') {\n        addEventListener('storage', (ev) => {\n            if (ev.key === STORAGE_MUTATED_DOM_EVENT_NAME) {\n                const data = JSON.parse(ev.newValue);\n                if (data)\n                    propagateLocally(data.changedParts);\n            }\n        });\n    }\n    const swContainer = self.document && navigator.serviceWorker;\n    if (swContainer) {\n        swContainer.addEventListener('message', propagateMessageLocally);\n    }\n}\nfunction propagateMessageLocally({ data }) {\n    if (data && data.type === STORAGE_MUTATED_DOM_EVENT_NAME) {\n        propagateLocally(data.changedParts);\n    }\n}\n\nDexiePromise.rejectionMapper = mapError;\nsetDebug(debug, dexieStackFrameFilter);\n\nexport { Dexie$1 as Dexie, RangeSet, Dexie$1 as default, liveQuery, mergeRanges, rangesOverlap };\n//# sourceMappingURL=dexie.mjs.map\n"],"names":["e","globalThis","self","window","global","t","Object","keys","n","Array","isArray","r","forEach","Promise","s","getPrototypeOf","i","hasOwnProperty","o","call","a","Reflect","ownKeys","l","u","defineProperty","get","set","configurable","value","writable","c","from","prototype","create","extend","bind","h","getOwnPropertyDescriptor","d","f","slice","p","y","m","Error","v","setImmediate","setTimeout","g","reduce","b","length","push","indexOf","substr","_","isFrozen","isNaN","parseInt","splice","w","x","concat","k","apply","E","split","map","filter","P","K","O","WeakMap","S","constructor","toString","A","C","j","Symbol","iterator","D","I","B","arguments","this","next","done","T","toStringTag","R","location","test","href","F","M","libraryFilter","N","stack","q","$","name","message","join","U","L","V","VersionChanged","DatabaseClosed","Abort","TransactionInactive","MissingAPI","W","_e","Y","z","failures","failedKeys","successCount","G","failuresByPos","_stack","H","Q","X","inner","Syntax","SyntaxError","Type","TypeError","Range","RangeError","J","Z","ee","te","ne","re","se","onsuccess","onerror","ie","oe","ae","ue","then","ModifyError","DexieError","BulkError","le","ce","he","de","fe","resolve","crypto","subtle","digest","Uint8Array","pe","ye","me","ve","ge","$e","MutationObserver","document","createElement","observe","attributes","setAttribute","be","Se","we","xe","ke","Ee","Pe","Ke","id","ref","unhandleds","onunhandled","dt","pgp","env","finalize","Oe","Ae","Ce","je","_listeners","onuncatched","_lib","_PSD","_stackHolder","_prev","_numPrev","_state","_value","Te","Be","De","Xe","tt","Fe","Ie","lt","qe","onFulfilled","onRejected","reject","psd","Ue","_then","Re","Le","_promise","some","Ve","Me","Ne","We","Ye","it","catch","finally","timeout","Timeout","clearTimeout","ot","all","nt","race","PSD","totalEchoes","newPSD","Ze","usePSD","at","scheduler","rejectionMapper","follow","allSettled","status","reason","any","AggregateError","ze","awaits","echoes","Ge","He","Qe","Je","parent","PromiseProp","nthen","ct","gthen","et","ft","rt","st","pop","ut","ht","promise","createEvent","initEvent","CustomEvent","detail","dispatchEvent","PromiseRejectionEvent","onunhandledrejection","defaultPrevented","console","warn","pt","idbdb","openComplete","letThrough","_vip","_createTransaction","_dbSchema","PR1398_maxLoop","InvalidState","isOpen","_close","open","trans","_completion","dbOpenError","isBeingOpened","_options","autoOpen","dbReadyPromise","yt","mt","String","fromCharCode","vt","gt","bt","_t","wt","navigator","userAgent","xt","kt","Et","Pt","Kt","Ot","St","At","type","lower","lowerOpen","upper","upperOpen","Ct","jt","_trans","_tx","schema","NotFound","idbtrans","db","transless","where","first","core","key","hook","reading","fire","WhereClause","equals","indexes","primKey","compound","every","keyPath","_maxKey","JSON","stringify","idxByName","_deps","indexedDB","cmp","_ref","multi","toCollection","and","count","offset","limit","each","toArray","Collection","orderBy","reverse","mapToClass","mappedClass","readHook","unsubscribe","defineClass","add","auto","mutate","values","numFailures","lastResult","update","modify","InvalidArgument","put","delete","clear","range","bulkGet","getMany","bulkAdd","allKeys","wantResults","_ref2","results","bulkPut","_ref3","bulkDelete","_ref4","Dt","subscribe","addEventType","subscribers","It","Bt","algorithm","or","justLimit","replayFilter","Tt","Rt","Ft","isPrimKey","primaryKey","getIndexByKeyPath","index","Schema","Mt","openCursor","keysOnly","dir","unique","query","Nt","union","stop","fail","_iterate","qt","valueMapper","start","continue","$t","Ut","NaN","Lt","ArrayBuffer","isView","buffer","byteOffset","byteLength","Vt","_read","_ctx","error","table","_write","_addAlgorithm","clone","raw","Math","min","sortBy","sort","_ref5","result","advance","until","last","isMatch","_ondirectionchange","desc","eachKey","eachUniqueKey","eachPrimaryKey","primaryKeys","_ref6","uniqueKeys","firstKey","lastKey","distinct","outbound","extractKey","modifyChunkSize","applyMutateResult","cache","Wt","criteria","changeSpec","_ref7","deleteCallback","Yt","zt","Gt","en","Ht","Zt","Qt","Xt","toUpperCase","toLowerCase","Jt","between","_cmp","above","aboveOrEqual","below","belowOrEqual","startsWith","startsWithIgnoreCase","equalsIgnoreCase","anyOfIgnoreCase","startsWithAnyOfIgnoreCase","anyOf","_ascending","_descending","notEqual","inAnyRange","includeLowers","includeUppers","noneOf","_min","_max","startsWithAnyOf","tn","nn","target","stopPropagation","preventDefault","rn","sn","on","an","_lock","_reculock","lockOwnerFor","_unlock","_blockedFuncs","_locked","shift","mode","OpenFailed","active","transaction","storeNames","durability","chromeTransactionDurability","_reject","onabort","oncomplete","_resolve","storagemutated","mutatedParts","ReadOnly","_root","waitFor","_waitingFor","_waitingQueue","objectStore","_spinCount","abort","_memoizedTables","Table","un","src","ln","cn","hn","only","getMaxKey","dn","fn","pn","yn","mn","upperBound","lowerBound","bound","hasGetAll","objectStoreNames","tables","autoIncrement","isPrimaryKey","indexNames","multiEntry","match","_ref8","_ref9","_pos","_ref10","getAll","getAllKeys","openKeyCursor","_ref11","___id","continuePrimaryKey","doThrowCursorIsStopped","guardedCallback","_ref12","MIN_KEY","MAX_KEY","vn","_ref13","_novip","_ref14","IDBKeyRange","_ref15","dbcore","_middlewares","gn","_ref16","Transaction","enumerable","bn","_ref17","_n","_cfg","version","wn","_storeNames","kn","populate","_ref18","_versions","Pn","dbschema","Kn","xn","change","recreate","Upgrade","En","deleteIndex","del","contentUpgrade","deleteObjectStore","contains","def","createObjectStore","createIndex","_ref19","_hasGetAll","WorkerGlobalScope","On","_parseStoresSpec","trim","replace","stores","storesSource","_allTables","upgrade","Sn","_dbNamesDB","Xn","addons","dbnames","An","databases","Cn","jn","userAgentData","setInterval","clearInterval","In","throw","Bn","Tn","PrematureCommit","Rn","Fn","level","isVirtual","keyTail","keyLength","Mn","Nn","deleting","creating","updating","_ref22","_ref23","qn","$n","_cache","Un","Ln","to","Vn","Gn","Wn","_ref24","zn","up","Hn","_ref25","max","addKey","addKeys","Qn","_ref26","subscr","_ref27","verno","dependencies","onReadyBeingFired","dbReadyResolve","cancelOpen","openCanceller","autoSchema","ready","vip","complete","Version","_IDBKeyRange","newVersion","close","oldVersion","_fireOnBlocked","vcFired","use","round","_whenReady","_ref28","unuse","_ref29","onblocked","onupgradeneeded","allowEmptyDB","deleteDatabase","NoSuchDatabase","pow","_ref20","onversionchange","onclose","_ref21","Dn","doDelete","_ref30","backendDB","hasBeenClosed","hasFailed","dynamicallyOpened","_transaction","SubTransaction","InvalidTable","Jn","observable","Zn","_subscribe","er","nr","mozIndexedDB","webkitIndexedDB","msIndexedDB","webkitIDBKeyRange","rr","sr","ir","exists","getDatabaseNames","_ref31","ignoreTransaction","async","spawn","currentTransaction","debug","derive","props","override","Events","liveQuery","closed","Yn","doQuery","exec","hasValue","getValue","extendObservabilitySet","getByKeyPath","setByKeyPath","delByKeyPath","shallowClone","deepClone","getObjectDiff","asap","minKey","connections","errnames","semVer","maxKey","addEventListener","initCustomEvent","_ref32","BroadcastChannel","unref","postMessage","onmessage","data","localStorage","setItem","trig","random","changedParts","clients","matchAll","includeUncontrolled","parse","newValue","serviceWorker","_ref33"],"sourceRoot":""}