(()=>{"use strict";var e={245:(e,t,a)=>{const n=new(a(447).U)("main");n.version(2).stores({plans:"++index, title, startSem, sems",reqs:"name"}),self.onmessage=async e=>{const t=e.data;var a={...t,status:!0};try{switch(t.type){case"init":a.titles={},await n.transaction("rw",n.plans,(async()=>{a.content=await n.plans.get(t.plan),void 0===a.content&&(await n.plans.add({index:t.plan,...t.content}),a.content=t.content)})),await n.plans.each((e=>a.titles[e.index]=e.title));break;case"select":await n.transaction(t.force?"rw":"r",n.plans,(async()=>{const e=await n.plans.get(t.plan);void 0===e?t.force?await n.plans.add({index:t.plan,...t.content}):(a.status=!1,a.fail_message="Plan does not exist."):a.content=e}));break;case"export":const e=await n.plans.get(t.plan);delete e.index,a.content=JSON.stringify(e);break;case"add":a.plan=await n.plans.add(t.content);break;case"copy":a.plan=await n.transaction("rw",n.plans,(async()=>{const e={...await n.plans.get(t.plan),...t.content};return delete e.index,await n.plans.add(e)}));break;case"import":const s=new FileReader;return s.onload=async()=>{try{a.content=JSON.parse(s.result),a.plan=await n.plans.add(a.content)}catch(e){if(!(e instanceof SyntaxError))throw e;a.status=!1,a.fail_message="The provided file failed to be parsed. Please check if it is corrupted."}finally{self.postMessage(a)}},s.onerror=()=>{self.postMessage({...t,status:!1,error:"File read failed"})},void s.readAsText(t.content);case"delete":await n.transaction("rw",n.plans,(async()=>{1===await n.plans.count()?(a.status=!1,a.fail_message="The only plan in your collection cannot be deleted."):await n.plans.delete(t.plan)}));break;case"update":await n.plans.update(t.plan,t.content);break;case"req_names":a.content=[],await n.reqs.each((e=>a.content.push(e.name)));break;case"req_select":const r=await n.reqs.get(t.req);void 0===r?(a.status=!1,a.fail_message="Requirement block does not exist."):a.content=r.content;break;case"req_export":{let e;"content"in t?e={name:t.req,content:t.content}:"req"in t&&(e=await n.reqs.get(t.req)),void 0===e?(a.status=!1,a.fail_message="Requirement block does not exist."):a.content=JSON.stringify(e);break}case"req_add":a.req=await n.reqs.put({name:t.req,content:t.content});break;case"req_delete":const o=t.req;await n.transaction("rw",n.reqs,(async()=>{await n.reqs.where({name:o}).count()?await n.reqs.delete(o):(a.status=!1,a.fail_message="Requirement block does not exist.")}));break;case"req_update":await n.reqs.update(t.req,t.content)}}catch(s){a.status=!1,a.error=s.inner}self.postMessage(a)}}},t={};function a(n){var s=t[n];if(void 0!==s)return s.exports;var r=t[n]={exports:{}};return e[n](r,r.exports,a),r.exports}a.m=e,a.x=()=>{var e=a.O(void 0,[447],(()=>a(245)));return e=a.O(e)},(()=>{var e=[];a.O=(t,n,s,r)=>{if(!n){var o=1/0;for(p=0;p<e.length;p++){n=e[p][0],s=e[p][1],r=e[p][2];for(var i=!0,c=0;c<n.length;c++)(!1&r||o>=r)&&Object.keys(a.O).every((e=>a.O[e](n[c])))?n.splice(c--,1):(i=!1,r<o&&(o=r));if(i){e.splice(p--,1);var l=s();void 0!==l&&(t=l)}}return t}r=r||0;for(var p=e.length;p>0&&e[p-1][2]>r;p--)e[p]=e[p-1];e[p]=[n,s,r]}})(),a.d=(e,t)=>{for(var n in t)a.o(t,n)&&!a.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},a.f={},a.e=e=>Promise.all(Object.keys(a.f).reduce(((t,n)=>(a.f[n](e,t),t)),[])),a.u=e=>"static/js/"+e+".cb0bf29b.chunk.js",a.miniCssF=e=>{},a.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),a.p="/credit-planner/",(()=>{var e={245:1};a.f.i=(t,n)=>{e[t]||importScripts(a.p+a.u(t))};var t=self.webpackChunkcredit_planner=self.webpackChunkcredit_planner||[],n=t.push.bind(t);t.push=t=>{var s=t[0],r=t[1],o=t[2];for(var i in r)a.o(r,i)&&(a.m[i]=r[i]);for(o&&o(a);s.length;)e[s.pop()]=1;n(t)}})(),(()=>{var e=a.x;a.x=()=>a.e(447).then(e)})();a.x()})();
//# sourceMappingURL=245.e70b336b.chunk.js.map