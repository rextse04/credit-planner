(()=>{"use strict";var e={245:(e,a,t)=>{const n=new(t(447).U)("main");n.version(1).stores({plans:"++index, title, startSem, sems"}),self.onmessage=async e=>{const a=e.data;var t={...a,status:!0};try{switch(a.type){case"init":t.titles={},await n.transaction("rw",n.plans,(async()=>{t.content=await n.plans.get(a.plan),void 0===t.content&&(await n.plans.add({index:a.plan,...a.content}),t.content=a.content)})),await n.plans.each((e=>t.titles[e.index]=e.title));break;case"select":await n.transaction(a.force?"rw":"r",n.plans,(async()=>{const e=await n.plans.get(a.plan);void 0===e?a.force?await n.plans.add({index:a.plan,...a.content}):(t.status=!1,t.fail_message="Plan does not exist."):t.content=e}));break;case"export":const e=await n.plans.get(a.plan);delete e.index,t.content=JSON.stringify(e);break;case"add":t.plan=await n.plans.add(a.content);break;case"copy":t.plan=await n.transaction("rw",n.plans,(async()=>{const e={...await n.plans.get(a.plan),...a.content};return delete e.index,await n.plans.add(e)}));break;case"import":const s=new FileReader;return s.onload=async()=>{try{t.content=JSON.parse(s.result),t.plan=await n.plans.add(t.content)}catch(e){if(!(e instanceof SyntaxError))throw e;t.status=!1,t.fail_message="The provided file failed to be parsed. Please check if it is corrupted."}finally{self.postMessage(t)}},s.onerror=()=>{t.status=!1,t.error="File read failed."},void s.readAsText(a.content);case"delete":await n.transaction("rw",n.plans,(async()=>{1===await n.plans.count()?(t.status=!1,t.fail_message="The only plan in your collection cannot be deleted."):await n.plans.delete(a.plan)}));break;case"update":await n.plans.update(a.plan,a.content)}}catch(s){t.status=!1,t.error=s.inner}self.postMessage(t)}}},a={};function t(n){var s=a[n];if(void 0!==s)return s.exports;var r=a[n]={exports:{}};return e[n](r,r.exports,t),r.exports}t.m=e,t.x=()=>{var e=t.O(void 0,[447],(()=>t(245)));return e=t.O(e)},(()=>{var e=[];t.O=(a,n,s,r)=>{if(!n){var i=1/0;for(p=0;p<e.length;p++){n=e[p][0],s=e[p][1],r=e[p][2];for(var o=!0,l=0;l<n.length;l++)(!1&r||i>=r)&&Object.keys(t.O).every((e=>t.O[e](n[l])))?n.splice(l--,1):(o=!1,r<i&&(i=r));if(o){e.splice(p--,1);var c=s();void 0!==c&&(a=c)}}return a}r=r||0;for(var p=e.length;p>0&&e[p-1][2]>r;p--)e[p]=e[p-1];e[p]=[n,s,r]}})(),t.d=(e,a)=>{for(var n in a)t.o(a,n)&&!t.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:a[n]})},t.f={},t.e=e=>Promise.all(Object.keys(t.f).reduce(((a,n)=>(t.f[n](e,a),a)),[])),t.u=e=>"static/js/"+e+".cb0bf29b.chunk.js",t.miniCssF=e=>{},t.o=(e,a)=>Object.prototype.hasOwnProperty.call(e,a),t.p="/credit-planner/",(()=>{var e={245:1};t.f.i=(a,n)=>{e[a]||importScripts(t.p+t.u(a))};var a=self.webpackChunkcredit_planner=self.webpackChunkcredit_planner||[],n=a.push.bind(a);a.push=a=>{var s=a[0],r=a[1],i=a[2];for(var o in r)t.o(r,o)&&(t.m[o]=r[o]);for(i&&i(t);s.length;)e[s.pop()]=1;n(a)}})(),(()=>{var e=t.x;t.x=()=>t.e(447).then(e)})();t.x()})();
//# sourceMappingURL=245.e70261bd.chunk.js.map