{"version":3,"file":"static/js/763.5a8253eb.chunk.js","mappings":"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","sources":["util.js","logic.js","excel.js","sync.js","../webpack/bootstrap","../webpack/runtime/chunk loaded","../webpack/runtime/define property getters","../webpack/runtime/ensure chunk","../webpack/runtime/get javascript chunk filename","../webpack/runtime/get mini-css chunk filename","../webpack/runtime/global","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/publicPath","../webpack/runtime/importScripts chunk loading","../webpack/runtime/startup chunk dependencies","../webpack/startup"],"sourcesContent":["// File functions\r\nexport function req_file(accept = \".json\") {\r\n    return new Promise(resolve => {\r\n        const input = document.createElement(\"input\");\r\n        input.type = \"file\";\r\n        input.accept = accept;\r\n        input.onchange = event => resolve(event.target.files[0]);\r\n        input.click(); \r\n    });\r\n}\r\nexport function read_import(text) {\r\n    return new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.onload = () => {\r\n            try {\r\n                resolve(JSON.parse(reader.result));\r\n            } catch {\r\n                reject(\"The provided file failed to be parsed. Please check if it is corrupted.\");\r\n            }\r\n        }\r\n        reader.onerror = () => reject(\"File read failed.\");\r\n        reader.readAsText(text);\r\n    });\r\n}\r\n\r\n// Other Functions\r\nexport function parseSeason(season) {\r\n    switch(season) {\r\n        case 10: return \"Fall\";\r\n        case 20: return \"Winter\";\r\n        case 30: return \"Spring\";\r\n        case 40: return \"Summer\";\r\n        default: return \"\";\r\n    }\r\n}\r\nexport class semester {\r\n    constructor(str) {\r\n        this.year = parseInt(str.slice(0, 2));\r\n        this.season = parseInt(str.slice(2, 4));\r\n    }\r\n    name() {\r\n        return `${this.year}${this.season}`;\r\n    }\r\n    to_str() {\r\n        return `20${this.year}-${this.year - (-1)} ${parseSeason(this.season)}`;\r\n    }\r\n    is_last() {\r\n        return this.season === 40;\r\n    }\r\n    next() {\r\n        if(this.is_last()) {\r\n            ++this.year;\r\n            this.season = 10;\r\n        } else {\r\n            this.season += 10;\r\n        }\r\n    }\r\n}\r\nexport function condense(str) {\r\n    return str.replace(/\\s/g, \"\");\r\n}\r\nexport function to_int(value, min = 0) {\r\n    return Math.max(parseInt(value) || min, min);\r\n}","class req_base {\r\n    type = \"base\";\r\n    error = undefined;\r\n}\r\nexport class empty extends req_base {\r\n    type = \"empty\";\r\n    //disabled = false;\r\n}\r\nexport class course extends req_base {\r\n    type = \"course\";\r\n    code = \"\";\r\n    name = \"\";\r\n    cred = 0;\r\n    static from_entry(entry) {\r\n        const out = new course();\r\n        out.code = entry.code;\r\n        out.name = entry.name;\r\n        out.cred = entry.cred;\r\n        return out;\r\n    }\r\n}\r\nexport class group extends req_base {\r\n    members = [];\r\n}\r\nexport class andGroup extends group {\r\n    type = \"and\";\r\n}\r\nexport class orGroup extends group {\r\n    type = \"or\";\r\n    n = 0;\r\n    cred = 0;\r\n}\r\nexport class xorGroup extends group {\r\n    type = \"xor\";\r\n}\r\n\r\nexport function length(group) {\r\n    var count = 0;\r\n    for(let member of group.members) if(!member.disabled) ++count;\r\n    return count;\r\n}\r\nexport function n(group) {\r\n    var count = 0;\r\n    for(let member of group.members) {\r\n        if(Array.isArray(member.members))\r\n            count += n(member);\r\n        else\r\n            if(member.error === false) ++count;\r\n    }\r\n    return count;\r\n}\r\nexport function cred(req, counter = {}) {\r\n    switch(req.type) {\r\n        case \"empty\": return 0;\r\n        case \"course\": return !(req.error || req.disabled || counter[req.code]) ? req.cred : 0;\r\n        case \"and\":\r\n        case \"or\":\r\n            let out = 0;\r\n            for(let member of req.members) if(member.error === false) out += cred(member, counter);\r\n            return out;\r\n        case \"xor\":\r\n            for(let member of req.members) if(member.error === false) return cred(member, counter);\r\n    }\r\n}\r\nexport function test(req, courses) {\r\n    if(req.type === \"empty\") return {...req, error: false};\r\n    else if(req.type === \"course\") {\r\n        if(req.disabled) return {...req, error: undefined};\r\n        let pass = false;\r\n        let regex;\r\n        try {\r\n            regex = new RegExp(`^${req.code}$`);\r\n        } catch(e) {\r\n            if(e instanceof SyntaxError) return {...req,\r\n                error: true,\r\n                message: \"Invalid regex expression.\"\r\n            };\r\n            else throw e;\r\n        }\r\n        for(let course of courses) {\r\n            let code = course.code;\r\n            if(regex.test(code)) {\r\n                pass = true;\r\n                break;\r\n            }\r\n        }\r\n        return {...req, error: !pass};\r\n    } else {\r\n        const len = length(req);\r\n        const new_req = {...req,\r\n            error: true,\r\n            members: []\r\n        };\r\n        const members = new_req.members;\r\n        let process = (default_error, subprocess) => {\r\n            new_req.error = default_error && len !== 0;\r\n            for(let member of req.members) {\r\n                let i = members.push(test(member, courses));\r\n                let error = members[i-1].error;\r\n                if(error !== undefined) new_req.error = subprocess(error);\r\n            }\r\n        }\r\n        switch(req.type) {\r\n            case \"and\":\r\n                process(false, subcase => subcase ? true : new_req.error);\r\n                break;\r\n            case \"or\":\r\n                process(true, subcase => subcase ? new_req.error : false);\r\n                let error_cred = new_req.error_cred = req.cred && cred(new_req) < req.cred;\r\n                let error_n = new_req.error_n = req.n && n(new_req) < req.n;\r\n                new_req.error ||= error_cred || error_n;\r\n                break;\r\n            case \"xor\":\r\n                let matched = false;\r\n                process(true, subcase => {\r\n                    if(subcase) return new_req.error;\r\n                    else {\r\n                        if(matched) {\r\n                            matched = true;\r\n                            return false;\r\n                        }\r\n                        else return true;\r\n                    }\r\n                });\r\n                break;\r\n        }\r\n        return new_req;\r\n    }\r\n}\r\nexport function reset(req) {\r\n    const new_req = {...req};\r\n    if(req.type === \"empty\" || req.type === \"course\") delete new_req.error;\r\n    else {\r\n        const members = [];\r\n        for(let member of req.members) members.push(reset(member));\r\n        new_req.members = members;\r\n        delete new_req.error;\r\n        delete new_req.error_cred;\r\n        delete new_req.error_n;\r\n    }\r\n    return new_req;\r\n}\r\nexport function includes(req, code) {\r\n    if(code === undefined) return false;\r\n    else if(req.type === \"empty\") return false;\r\n    else if(req.type === \"course\") return req.code === code;\r\n    else {\r\n        for(let member of req.members) {\r\n            if(includes(member,code)) return true;\r\n        }\r\n        return false;\r\n    }\r\n}\r\nexport function count(req, counter) {\r\n    switch(req.type) {\r\n        case \"empty\": return;\r\n        case \"course\":\r\n            if(req.error === false) {\r\n                if(counter[req.code] === undefined) counter[req.code] = 0;\r\n                else ++counter[req.code];\r\n            }\r\n            return;\r\n        default:\r\n            for(let member of req.members) if(member.error === false) count(member, counter);\r\n            return;\r\n    }\r\n}\r\nexport function stringify(req) {\r\n    switch(req.type) {\r\n        case \"empty\": return \"\";\r\n        case \"course\": return req.code;\r\n        default:\r\n            var out = \"\";\r\n            for(let i = req.members.length - 1; i >= 0; --i) {\r\n                let member = req.members[i];\r\n                let subname = stringify(member);\r\n                if(member.type !== \"course\") subname = `(${subname})`;\r\n                if(i === 0) out = subname + out;\r\n                else out = ` ${req.type} ${subname}${out}`;\r\n            }\r\n            return out;\r\n    }\r\n}\r\nexport function flatten(req, set = new Set) {\r\n    switch(req.type) {\r\n        case \"empty\": return set;\r\n        case \"course\": return set.add(req);\r\n        default:\r\n            for(let member of req.members)\r\n                flatten(member, set);\r\n    }\r\n    return set;\r\n}\r\nexport function get_class(error) {\r\n    switch(error) {\r\n        case undefined: return \"\";\r\n        case true: return \"error\";\r\n        case false: return \"success\";\r\n    }\r\n}","import { Workbook } from \"exceljs\";\r\nimport * as logic from \"./logic\";\r\nimport { semester } from \"./util\";\r\n\r\nconst course_table = {\r\n    headerRow: true,\r\n    totalsRow: true,\r\n    columns: [\r\n        {name: \"Code\", totalsRowLabel: \"Total credit(s):\"},\r\n        {name: \"Credit(s)\", totalsRowFunction: \"sum\"}\r\n    ],\r\n};\r\n\r\nfunction gen_rows(courses, include_name = false) {\r\n    const rows = [];\r\n    for(let course of courses)\r\n        if(course.code !== \"\") {\r\n            const row = [course.code, course.cred];\r\n            if(include_name) row.splice(1, 0, course.name);\r\n            rows.push(row);\r\n        }\r\n    if(rows.length) return rows;\r\n    else return [[]];\r\n}\r\n\r\nexport function to_workbook(plan) {\r\n    const wb = new Workbook();\r\n    const ws = wb.addWorksheet();\r\n    const sem = new semester(plan.startSem);\r\n    // Credit plan\r\n    let row_i = 1;\r\n    let col_i = 1;\r\n    let rows_n = 1;\r\n    for(let i = 0; i < plan.sems; ++i) {\r\n        const sem_name = sem.name();\r\n        const courses = plan.courses;\r\n        const rows = sem_name in courses\r\n            ? gen_rows(courses[sem_name])\r\n            : [[]];\r\n        ws.getCell(row_i, col_i).value = sem.to_str();\r\n        ws.addTable({\r\n            ...course_table,\r\n            name: \"plan_\" + sem_name,\r\n            ref: ws.getCell(row_i+1, col_i).$col$row,\r\n            rows: rows\r\n        });\r\n        rows_n = Math.max(rows_n, rows.length);\r\n        sem.next();\r\n        if(sem.is_last()) {\r\n            row_i += rows_n + 4;\r\n            col_i = 1;\r\n            rows_n = 1;\r\n        } else {\r\n            col_i += 3;\r\n        }\r\n    }\r\n    // Requirements\r\n    row_i = 1;\r\n    col_i = 13;\r\n    for(let i = 0; i < plan.reqs.length; ++i) {\r\n        const req = plan.reqs[i];\r\n        const rows = gen_rows(logic.flatten(req.content));\r\n        ws.getCell(row_i, col_i).value = req.name;\r\n        ws.addTable({\r\n            ...course_table,\r\n            name: `req_${i}`,\r\n            ref: ws.getCell(row_i+1, col_i).$col$row,\r\n            rows: rows\r\n        });\r\n        row_i += rows.length + 4;\r\n    }\r\n    // Course list\r\n    row_i = 1;\r\n    col_i = 16;\r\n    const courses = Object.values(plan.courses).flat();\r\n    ws.getCell(row_i, col_i).value = \"All courses\";\r\n    ws.addTable({\r\n        name: \"all_courses\",\r\n        ref: ws.getCell(row_i+1, col_i).$col$row,\r\n        headerRow: true,\r\n        totalsRow: true,\r\n        columns: [\r\n            {name: \"Code\", totalsRowLabel: \"Total credit(s):\"},\r\n            {name: \"Name\"},\r\n            {name: \"Credit(s)\", totalsRowFunction: \"sum\"}\r\n        ],\r\n        rows: gen_rows(courses, true)\r\n    });\r\n    return wb;\r\n}","import { Dexie } from \"dexie\";\r\nimport { read_import } from \"./util\";\r\nimport { to_workbook } from \"./excel\";\r\nimport * as logic from './logic';\r\n\r\nconst db = new Dexie(\"main\");\r\ndb.version(2).stores({\r\n    plans: \"++index, title, startSem, sems\",\r\n    reqs: \"name\"\r\n});\r\n\r\n// eslint-disable-next-line no-restricted-globals\r\nself.onmessage = async event => {\r\n    const message = event.data;\r\n    var response = {\r\n        ...message,\r\n        status: true\r\n    };\r\n    try {\r\n        switch(message.type) {\r\n            case \"init\":\r\n                response.titles = {};\r\n                await db.transaction(\"rw\", db.plans, async () => {\r\n                    response.content = await db.plans.get(message.plan);\r\n                    if(response.content === undefined) {\r\n                        await db.plans.add({\r\n                            index: message.plan,\r\n                            ...message.content\r\n                        });\r\n                        response.content = message.content;\r\n                    }\r\n                });\r\n                await db.plans.each(plan => response.titles[plan.index] = plan.title);\r\n                break;\r\n            case \"select\":\r\n                await db.transaction(message.force ? \"rw\" : \"r\", db.plans, async () => {\r\n                    const content = await db.plans.get(message.plan);\r\n                    if(content === undefined) {\r\n                        if(message.force) await db.plans.add({\r\n                            index: message.plan,\r\n                            ...message.content\r\n                        });\r\n                        else {\r\n                            response.status = false;\r\n                            response.fail_message = \"Plan does not exist.\"\r\n                        }\r\n                    }\r\n                    else response.content = content;\r\n                });\r\n                break;\r\n            case \"export\":\r\n            {\r\n                const raw = await db.plans.get(message.plan);\r\n                delete raw.index;\r\n                response.content = JSON.stringify(raw);\r\n                break;\r\n            }\r\n            case \"excel\":\r\n            {\r\n                const raw = await db.plans.get(message.plan);\r\n                const wb = to_workbook(raw);\r\n                response.content = await wb.xlsx.writeBuffer();\r\n                break;\r\n            }\r\n            case \"add\":\r\n                response.plan = await db.plans.add(message.content);\r\n                break;\r\n            case \"copy\":\r\n                response.plan = await db.transaction(\"rw\", db.plans, async () => {\r\n                    const source = await db.plans.get(message.plan);\r\n                    const copied = {...source, ...message.content};\r\n                    delete copied.index;\r\n                    return await db.plans.add(copied);\r\n                });\r\n                break;\r\n            case \"import\":\r\n                try {\r\n                    const content = await read_import(message.content);\r\n                    response.plan = await db.plans.add(content);\r\n                    response.content = content;\r\n                } catch(e) {\r\n                    response.status = false;\r\n                    response.fail_message = e;\r\n                }\r\n                break;\r\n            case \"delete\":\r\n                await db.transaction(\"rw\", db.plans, async () => {\r\n                    if(await db.plans.count() === 1) {\r\n                        response.status = false;\r\n                        response.fail_message = \"The only plan in your collection cannot be deleted.\";\r\n                    } else await db.plans.delete(message.plan);\r\n                });\r\n                break;\r\n            case \"update\":\r\n                await db.plans.update(message.plan, message.content);\r\n                break;\r\n\r\n            case \"req_names\":\r\n                response.content = [];\r\n                await db.reqs.each(req => response.content.push(req.name));\r\n                break;\r\n            case \"req_select\":\r\n                const req = await db.reqs.get(message.req);\r\n                if(req === undefined) {\r\n                    response.status = false;\r\n                    response.fail_message = \"Requirement block does not exist.\";\r\n                } else response.content = req.content;\r\n                break;\r\n            case \"req_export\":\r\n            {\r\n                let raw = undefined;\r\n                if(\"content\" in message) raw = {\r\n                    name: message.req,\r\n                    content: logic.reset(message.content)\r\n                };\r\n                else if(\"req\" in message) raw = await db.reqs.get(message.req);\r\n                if(raw === undefined) {\r\n                    response.status = false;\r\n                    response.fail_message = \"Requirement block does not exist.\";\r\n                } else response.content = JSON.stringify(raw);\r\n                break;\r\n            }\r\n            case \"req_import\":\r\n            {\r\n                try {\r\n                    const req = await read_import(message.content);\r\n                    response.req = message.req = req.name;\r\n                    try {\r\n                        response.content = message.content = logic.reset(req.content);\r\n                    } catch {\r\n                        throw \"The provided file seems to be corrupted.\";\r\n                    }\r\n                } catch(e) {\r\n                    response.status = false;\r\n                    response.fail_message = e;\r\n                    break;\r\n                }\r\n            }\r\n            case \"req_add\":\r\n                await db.transaction(\"rw\", db.reqs, async () => {\r\n                    if(!message.force && await db.reqs.where({name: message.req}).count()) {\r\n                        response.clash = true;\r\n                    } else {\r\n                        await db.reqs.put({\r\n                            name: message.req,\r\n                            content: message.content\r\n                        });\r\n                        response.clash = false;\r\n                    }\r\n                });\r\n                break;\r\n            case \"req_delete\":\r\n                const name = message.req;\r\n                await db.transaction(\"rw\", db.reqs, async () => {\r\n                    if(await db.reqs.where({name: name}).count()) {\r\n                        await db.reqs.delete(name);\r\n                    } else {\r\n                        response.status = false;\r\n                        response.fail_message = \"Requirement block does not exist.\";\r\n                    }\r\n                });\r\n                break;\r\n            case \"req_update\":\r\n                await db.reqs.update(message.req, message.content);\r\n        }\r\n    } catch(e) {\r\n        response.status = false;\r\n        response.error = e.inner;\r\n    }\r\n    // eslint-disable-next-line no-restricted-globals\r\n    self.postMessage(response);\r\n};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = () => {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [571], () => (__webpack_require__(763)))\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + \"2b6128b4\" + \".chunk.js\";\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","__webpack_require__.p = \"/credit-planner/\";","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t763: 1\n};\n\n// importScripts chunk loading\nvar installChunk = (data) => {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = (chunkId, promises) => {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunkcredit_planner\"] = self[\"webpackChunkcredit_planner\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","var next = __webpack_require__.x;\n__webpack_require__.x = () => {\n\treturn __webpack_require__.e(571).then(next);\n};","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"names":["read_import","text","Promise","resolve","reject","reader","FileReader","onload","JSON","parse","result","onerror","readAsText","semester","constructor","str","this","year","parseInt","slice","season","name","concat","to_str","parseSeason","is_last","next","reset","req","new_req","type","error","members","member","push","error_cred","error_n","flatten","set","arguments","length","undefined","Set","add","course_table","headerRow","totalsRow","columns","totalsRowLabel","totalsRowFunction","gen_rows","courses","include_name","rows","course","code","row","cred","splice","db","Dexie","version","stores","plans","reqs","self","onmessage","async","message","event","data","response","status","titles","transaction","content","get","plan","index","each","title","force","fail_message","raw","stringify","wb","Workbook","ws","addWorksheet","sem","startSem","row_i","col_i","rows_n","i","sems","sem_name","getCell","value","addTable","ref","$col$row","Math","max","logic","Object","values","flat","to_workbook","xlsx","writeBuffer","copied","e","count","delete","update","where","clash","put","inner","postMessage","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","m","x","__webpack_exports__","O","deferred","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","keys","every","key","r","d","definition","o","defineProperty","enumerable","f","chunkId","all","reduce","promises","u","miniCssF","g","globalThis","Function","window","obj","prop","prototype","hasOwnProperty","call","p","installedChunks","importScripts","chunkLoadingGlobal","parentChunkLoadingFunction","bind","moreModules","runtime","pop","then"],"sourceRoot":""}